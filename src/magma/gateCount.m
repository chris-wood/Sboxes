// File: gateCount.m
// Author: Christopher Wood
// Description: Count gates for the inverse mapping using 'algebraic' and common subexpression optimizations.

// Uncomment for standard basis printing
AssertAttribute(FldFin, "PowerPrinting", false);  
SetQuitOnError(true);
//SetLogFile("gateCount.txt");

////////////////////////////////////////////////////////////////////////
/// GATE COUNTS FOR POLYNOMIAL/NORMAL ARITHMETIC IN GF(2^2)
////////////////////////////////////////////////////////////////////////

flag := 0;

// DONE
gatesPolyInv2 := function()
	return 1; // 1 XOR
end function;

// DONE
gatesPolyAdd2 := function()
	return 2; // 2 XORs
end function;

// DONE
gatesPolyMult2 := function()
	return 7; // ONLY COUNT XOR GATES HERE
end function;

// DONE
gatesPolySquare2 := function()
	return gatesPolyInv2(); // square is the same as inverse
end function;

// DONE
gatesPolyScale2 := function()
	return 1; // 1 XOR
end function;

// DONE
gatesPolySquareScale2 := function(pr, sigma, scalar) // sigma is the coefficient of the polynomial, scalar is the actual value we're scaling by...
	if pr eq sigma and pr eq scalar then
		return 0;
	elif pr eq sigma^2 and pr eq scalar then
		return 0;
	else
		return 1;
	end if; 
end function;

// DONE
gatesNormInv2 := function()
	return 0; // 1 XOR
end function;

// DONE
gatesNormAdd2 := function()
	return 2; // 2 XORs
end function;

// DONE
gatesNormMult2 := function()
	return 7; // ONLY COUNT XOR GATES HERE
end function;

// DONE
gatesNormSquare2 := function()
	return gatesNormInv2(); // square is the same as inverse
end function;

// DONE
gatesNormScale2 := function()
	return 1; // 1 XOR
end function;

// DONE
gatesNormSquareScale2 := function() 
	return 1;
end function;

////////////////////////////////////////////////////////////////////////
/// GATE COUNTS FOR POLYNOMIAL ARITHMETIC IN GF(2^4)/GF(2^2)
////////////////////////////////////////////////////////////////////////

// DONE
gatesInv4 := function(P, Q, sigma, pr1, pr2, qr1, qr2)
	if (qr1 eq 1) then
		if (pr1 eq 1) then
			sum := 2 * gatesPolyAdd2(); // d1 + d2
			sum := sum + gatesPolySquareScale2(pr2, sigma, sigma);
			sum := sum + (3 * gatesPolyMult2());
			sum := sum + gatesPolyInv2();
			return sum;
		else
			sum := 2 * gatesNormAdd2(); // d1 + d2
			sum := sum + gatesNormSquareScale2();
			sum := sum + (3 * gatesNormMult2());
			sum := sum + gatesNormInv2();
			return sum;
		end if;	
	else
		if (pr1 eq 1) then
			sum := 2 * gatesPolyAdd2();
			sum := sum + gatesPolySquareScale2(pr2, sigma, sigma);
			sum := sum + (3 * gatesPolyMult2());
			sum := sum + gatesPolyInv2();
			return sum;
		else
			sum := 2 * gatesNormAdd2();
			sum := sum + gatesNormSquareScale2();
			sum := sum + (3 * gatesNormMult2());
			sum := sum + gatesNormInv2();
			return sum;
		end if;	
	end if;
end function;

// DONE
gatesAdd4 := function()
	return 4; // always equal to the number of bits
end function;

// DONE
gatesMult4 := function(P, Q, sigma, pr1, pr2, qr1, qr2)
	if (qr1 eq 1) then
		if (pr1 eq 1) then
			sum := (4 * gatesPolyAdd2());
			sum := sum + (3 * gatesPolyMult2());
			// if sigma ne pr2 then, sum := sum + gatesPolyMult2() + gatesPolyScale2();
			// sum := sum + (gatesPolyScale2()); // free!
			return sum;
		else
			sum := (4 * gatesNormAdd2());
			sum := sum + (3 * gatesNormMult2());
			// if sigma ne pr2 then, sum := sum + gatesPolyMult2() + gatesPolyScale2();
			// sum := sum + (gatesNormScale2()); // free!
			return sum;
		end if;	
	else
		if (pr1 eq 1) then
			sum := (4 * gatesPolyAdd2());
			sum := sum + (3 * gatesPolyMult2());
			sum := sum + (gatesPolyScale2());
			return sum;
		else
			sum := (4 * gatesNormAdd2());
			sum := sum + (3 * gatesNormMult2());
			sum := sum + (gatesNormScale2());
			return sum;
		end if;	
	end if;
end function;

// POLYNOMIAL IS DONE
// check normal square derivation - should it be free? NO!
gatesSquare4 := function(P, Q, sigma, pr1, pr2, qr1, qr2)
	if (qr1 eq 1) then
		// "polynomial basis for squaring in GF(2^4)";
		if (pr1 eq 1) then
			sum := (2 * gatesPolySquare2()); 
			sum := sum + gatesPolyAdd2();
			sum := sum + gatesPolyScale2();
			return sum;
		else
			sum := (2 * gatesNormSquare2()); 
			sum := sum + gatesNormAdd2();
			sum := sum + gatesNormScale2();
			return sum;
		end if;	
	else
		if (pr1 eq 1) then
			sum := (3 * gatesPolyAdd2());
			sum := sum + (2 * gatesPolySquare2());
			sum := sum + gatesPolyScale2();
			return sum;
		else
			sum := (3 * gatesNormAdd2());
			sum := sum + (2 * gatesNormSquare2());
			sum := sum + gatesNormScale2();
			return sum;
		end if;	
	end if;
end function;

// POLYNOMIAL DONE
// normal basis needs to have the algebra checked...
gatesScale4 := function(P, Q, sigma, pr1, pr2, qr1, qr2, pi) // e2 == constant
	// if (qr1 eq 1) then
	// 	// "polynomial basis for squaring in GF(2^4)";
	// 	if (pr1 eq 1) then
	// 		e2seq := Eltseq(pi); // e2seq[1] == zero coeff, [2] == degree 1 coeff
	// 		if (e2seq[1] eq 0 and e2seq[2] eq sigma^(-1)) then // if delta_4 == 0 and delta3 = sigma^-1
	// 			// CORRECT
	// 			return (gatesPolyAdd2() + gatesPolyMult2() + gatesPolySquareScale2(pr2, sigma, sigma^2));
	// 		elif (e2seq[1] eq 0) then
	// 			// CORRECT
	// 			return (gatesPolyAdd2() + (2 * gatesPolyMult2()) + gatesPolyScale2());
	// 		elif (e2seq[2] eq sigma^(-1)) then
	// 			// 
	// 			return ((3 * gatesPolyAdd2()) + (3 * gatesPolyMult2()));
	// 		else // nothing more than regular multiplication...
	// 			return gatesMult4(P, Q, sigma, pr1, pr2, qr1, qr2);
	// 		end if;
	// 	else
	// 		e2seq := Eltseq(pi); // e2seq[1] == zero coeff, [2] == degree 1 coeff
	// 		if (e2seq[1] eq 0 and e2seq[2] eq sigma^(-1)) then // if delta_4 == 0 and delta3 = sigma^-1
	// 			// CORRECT
	// 			return (gatesNormAdd2() + gatesNormMult2() + gatesNormSquareScale2());
	// 		elif (e2seq[1] eq 0) then
	// 			// CORRECT
	// 			return (gatesNormAdd2() + (2 * gatesNormMult2()) + gatesNormScale2());
	// 		elif (e2seq[2] eq sigma^(-1)) then
	// 			// 
	// 			return ((3 * gatesNormAdd2()) + (3 * gatesNormMult2()));
	// 		else // nothing more than regular multiplication...
	// 			return gatesMult4(P, Q, sigma, pr1, pr2, qr1, qr2);
	// 		end if;
	// 	end if;	
	// else // normal basis for GF(2^4)/GF(2^2)
	// 	if (pr1 eq 1) then
	// 		e2seq := Eltseq(pi); // e2seq[1] == zero coeff, [2] == degree 1 coeff
	// 		if (e2seq[1] eq 0 and e2seq[2] eq sigma^(-1)) then // if delta_4 == 0 and delta3 = sigma^-1
	// 			return ((2 * gatesPolyAdd2()) + gatesPolyMult2() + gatesPolyInv2());
	// 		elif (e2seq[1] eq 0) then
	// 			return ((2 * gatesPolyAdd2()) + (2 * gatesPolyMult2()) + gatesPolyScale2());
	// 		elif (e2seq[2] eq sigma^(-1)) then
	// 			return (4 * gatesPolyAdd2()) + gatesPolyScale2() + (3 * gatesPolyMult2());
	// 		else // nothing more than regular multiplication...
	// 			return gatesMult4(P, Q, sigma, pr1, pr2, qr1, qr2);
	// 		end if;
	// 	else
	// 		e2seq := Eltseq(pi); // e2seq[1] == zero coeff, [2] == degree 1 coeff
	// 		if (e2seq[1] eq 0 and e2seq[2] eq sigma^(-1)) then // if delta_4 == 0 and delta3 = sigma^-1
	// 			return ((2 * gatesNormAdd2()) + gatesNormMult2() + gatesNormInv2());
	// 		elif (e2seq[1] eq 0) then
	// 			return ((2 * gatesNormAdd2()) + (2 * gatesNormMult2()) + gatesNormScale2());
	// 		elif (e2seq[2] eq sigma^(-1)) then
	// 			return (4 * gatesNormAdd2()) + gatesNormScale2() + (3 * gatesNormMult2());
	// 		else // nothing more than regular multiplication...
	// 			return gatesMult4(P, Q, sigma, pr1, pr2, qr1, qr2);
	// 		end if;
	// 	end if;	
	// end if;

	if (qr1 eq 1) then // polynomial basis (z)
		case Eltseq(pi):
			when [0, sigma]:
				// print("p case 1");
				return 4;
			when [0, sigma^2]:
				// print("p case 2");
				return 3;
			when [sigma, sigma]:
				// print("p case 3");
				return 4;
			when [sigma^2, sigma^2]:
				// print("p case 4");
				return 3;
			when [1, sigma]:
				// print("p case 5");
				return 6;
			when [sigma, sigma^2]:
				// print("p case 6");
				return 5;
			when [sigma^2, sigma]:
				// print("p case 7");
				return 6;
			when [1, sigma^2]:
				// print("p case 8");
				return 5;
		end case;
	else
		// Normal basis here...
		case Eltseq(pi):
			when [0, sigma]:
				// print("case 1");
				return 6;
			when [sigma, 0]:
				// print("case 2");
				return 6;
			when [0, sigma^2]:
				// print("case 3");
				return 5;
			when [sigma^2, 0]:
				// print("case 4");
				return 5;
			when [1, sigma]:
				// print("case 5");
				return 5;
			when [sigma, 1]:
				// print("case 6");
				return 5;
			when [1, sigma^2]:
				// print("case 7");
				return 6;
			when [sigma^2, 1]:
				// print("case 8");
				return 6;
		end case;
	end if;

end function;

// DONE
gatesSquareScale4 := function(P, Q, sigma, pr1, pr2, qr1, qr2, pi) 
	// Check each case from Canright's simplification...
	if (qr1 eq 1) then // polynomial basis (z)
		case Eltseq(pi):
			when [0, sigma]:
				// print("p case 1");
				if (pr1 eq 1) then
					return (1 * gatesPolySquare2()) + (1 * gatesPolyAdd2()) + (1 * gatesPolySquareScale2(pr2, sigma, sigma)) + (1 * gatesPolySquareScale2(pr2, sigma, sigma^2));
				else
					return (1 * gatesNormSquare2()) + (1 * gatesNormAdd2()) + (1 * gatesNormSquareScale2()) + (1 * gatesNormSquareScale2());
				end if;
			when [0, sigma^2]:
				// print("p case 2");
				if (pr1 eq 1) then
					return (1 * gatesPolyAdd2()) + (1 * gatesPolySquare2()) + (1 * gatesPolySquareScale2(pr2, sigma, sigma)) + (1 * gatesPolySquareScale2(pr2, sigma, sigma^2));
				else
					return (1 * gatesNormAdd2()) + (1 * gatesNormSquare2()) + (1 * gatesNormSquareScale2()) + (1 * gatesNormSquareScale2());
				end if;
			when [sigma, sigma]:
				// print("p case 3");
				if (pr1 eq 1) then
					return (1 * gatesPolySquareScale2(pr2, sigma, sigma)) + (1 * gatesPolySquareScale2(pr2, sigma, sigma^2)) + (1 * gatesPolyAdd2());
				else
					return (1 * gatesNormSquareScale2()) + (1 * gatesNormSquareScale2()) + (1 * gatesNormAdd2());
				end if;
			when [sigma^2, sigma^2]:
				// print("p case 4");
				if (pr1 eq 1) then
					return (1 * gatesPolySquare2()) + (1 * gatesPolyAdd2()) + (1 * gatesPolySquareScale2(pr2, sigma, sigma^2));
				else
					return (1 * gatesNormSquare2()) + (1 * gatesNormAdd2()) + (1 * gatesNormSquareScale2());
				end if;
			when [1, sigma]:
				// print("p case 5");
				if (pr1 eq 1) then
					return (1 * gatesPolySquareScale2(pr2, sigma, sigma)) + (1 * gatesPolyAdd2()) + (1 * gatesPolySquare2());
				else
					return (1 * gatesNormSquareScale2()) + (1 * gatesNormAdd2()) + (1 * gatesNormSquare2());
				end if;
			when [sigma, sigma^2]:
				// print("p case 6");
				if (pr1 eq 1) then
					return gatesPolyAdd2() + gatesPolySquareScale2(pr2, sigma, sigma^2) + gatesPolySquareScale2(pr2, sigma, sigma);
				else
					return gatesNormAdd2() + gatesNormSquareScale2() + gatesNormSquareScale2();
				end if;
			when [sigma^2, sigma]:
				// print("p case 7");
				// sigma,  pr2,  pi,  Q;
				if (pr1 eq 1) then
					return (2 * gatesPolyAdd2()) + (1 * gatesPolySquareScale2(pr2, sigma, sigma)) + gatesPolySquare2();
				else
					return (2 * gatesNormAdd2()) + (1 * gatesNormSquareScale2()) + gatesNormSquare2();
				end if;
			when [1, sigma^2]:
				// print("p case 8");
				if (pr1 eq 1) then
					return (2 * gatesPolyAdd2()) + (1 * gatesPolySquareScale2(pr2, sigma, sigma)) + (1 * gatesPolySquareScale2(pr2, sigma, sigma^2));
				else
					return (2 * gatesNormAdd2()) + (1 * gatesNormSquareScale2()) + (1 * gatesNormSquareScale2());
				end if;
		end case;
	else
		// Normal basis here...
		case Eltseq(pi):
			when [0, sigma]:
				// print("case 1");
				if (pr1 eq 1) then
					return gatesPolyAdd2() + gatesPolySquareScale2(pr2, sigma, sigma) + gatesPolySquareScale2(pr2, sigma, sigma^2);
				else
					return gatesNormAdd2() + gatesNormSquareScale2() + gatesNormSquareScale2();
				end if;
			when [sigma, 0]:
				// print("case 2");
				if (pr1 eq 1) then
					return gatesPolyAdd2() + gatesPolySquareScale2(pr2, sigma, sigma) + gatesPolySquareScale2(pr2, sigma, sigma^2);
				else
					return gatesNormAdd2() + gatesNormSquareScale2() + gatesNormSquareScale2();
				end if;
			when [0, sigma^2]:
				// print("case 3");
				if (pr1 eq 1) then
					return gatesPolyAdd2() + gatesPolySquare2() + gatesPolySquareScale2(pr2, sigma, sigma^2);
				else
					return gatesNormAdd2() + gatesNormSquare2() + gatesNormSquareScale2();
				end if;
			when [sigma^2, 0]:
				// print("case 4");
				if (pr1 eq 1) then
					return gatesPolyAdd2() + gatesPolySquare2() + gatesPolySquareScale2(pr2, sigma, sigma^2);
				else
					return gatesNormAdd2() + gatesNormSquare2() + gatesNormSquareScale2();
				end if;
			when [1, sigma]:
				// print("case 5");
				if (pr1 eq 1) then
					return gatesPolySquareScale2(pr2, sigma, sigma) + gatesPolySquareScale2(pr2, sigma, sigma^2) + gatesPolyAdd2(); // common subexpression for nb^2
				else
					return gatesNormSquareScale2() + gatesNormSquareScale2() + gatesPolyAdd2(); // common subexpression for nb^2
				end if;
			when [sigma, 1]:
				// print("case 6");
				if (pr1 eq 1) then
					return gatesPolySquareScale2(pr2, sigma, sigma) + gatesPolySquareScale2(pr2, sigma, sigma^2) + gatesPolyAdd2(); // common subexpression for nb^2
				else
					return gatesNormSquareScale2() + gatesNormSquareScale2() + gatesPolyAdd2(); // common subexpression for nb^2
				end if;
			when [1, sigma^2]:
				// (a^2 + nb^2) (a^2)
				// print("case 7");
				if (pr1 eq 1) then
					return gatesPolySquare2() + gatesPolyAdd2() + gatesPolySquareScale2(pr2, sigma, sigma);
				else
					return gatesNormSquare2() + gatesNormAdd2() + gatesNormSquareScale2();
				end if;
			when [sigma^2, 1]:
				// print("case 8");
				if (pr1 eq 1) then
					return gatesPolySquare2() + gatesPolyAdd2() + gatesPolySquareScale2(pr2, sigma, sigma);
				else
					return gatesNormSquare2() + gatesNormAdd2() + gatesNormSquareScale2();
				end if;
		end case;
	end if;

	pi, " - ", sigma;
	pr1, " - ", pr2, " - ", qr1, " - ", qr2;
	print("ERROR - SHOULD NEVER GET HERE - gatesSquareScale4");
	quit;
end function;

/// GATE COUNTS FOR ARITHMETIC IN GF(2^8)/GF(2^4)

canrightInv8 := function(P, Q, sigma, pr1, pr2, qr1, qr2, pi)
	if (qr1 eq 1) then // polynomial basis (z)
		case Eltseq(pi):
			when [0, sigma]:
				// print("p case 1");
				if (pr1 eq 1) then
					if pr2 eq sigma then
						return 67;
					else
						return 67;
					end if; 
				else
					return 67;
				end if;
			when [0, sigma^2]:
				// print("p case 2");
				if (pr1 eq 1) then
					if pr2 eq sigma then
						return 67;
					else
						return 67;
					end if; 
				else
					return 67;
				end if;
			when [sigma, sigma]:
				// print("p case 3");
				if (pr1 eq 1) then
					if pr2 eq sigma then
						return 67;
					else
						return 67;
					end if; 
				else
					return 67;
				end if;
			when [sigma^2, sigma^2]:
				// print("p case 4");
				if (pr1 eq 1) then
					if pr2 eq sigma then
						return 67;
					else
						return 67;
					end if; 
				else
					return 67;
				end if;
			when [1, sigma]:
				// print("p case 5");
				if (pr1 eq 1) then
					if pr2 eq sigma then
						return 67;
					else
						return 67;
					end if; 
				else
					return 67;
				end if;
			when [sigma, sigma^2]:
				// print("p case 6");
				if (pr1 eq 1) then
					if pr2 eq sigma then
						return 67;
					else
						return 67;
					end if; 
				else
					return 67;
				end if;
			when [sigma^2, sigma]:
				// print("p case 7");
				// sigma,  pr2,  pi,  Q;
				if (pr1 eq 1) then
					if pr2 eq sigma then
						return 68;
					else
						return 68;
					end if; 
				else
					return 67;
				end if;
			when [1, sigma^2]:
				// print("p case 8");
				if (pr1 eq 1) then
					if pr2 eq sigma then
						return 67;
					else
						return 68;
					end if; 
				else
					return 67;
				end if;
		end case;
	else
		return 66; // see Canright's paper - after all optimizations are applied he gets 66 for normal GF(2^4)/GF(2^2) basis
	end if;
end function; 

// DONE
gatesInv8 := function(P, Q, R, sigma, pi, pr1, pr2, qr1, qr2, rr1, rr2)
	if (rr1 eq 1) then
		sum := 2 * gatesAdd4(); // d1 + d2
		sum := sum + gatesSquareScale4(P, Q, sigma, pr1, pr2, qr1, qr2, pi);
		sum := sum + (3 * gatesMult4(P, Q, sigma, pr1, pr2, qr1, qr2));
		sum := sum + gatesInv4(P, Q, sigma, pr1, pr2, qr1, qr2);

		return sum - 10; // -10 for shared factors of two GF(2^4) multipliers
	else // normal basis - THIS IS THE SAME AS ABOVE (but more shared factors)
		sum := 2 * gatesAdd4(); // d1 + d2
		sum := sum + gatesSquareScale4(P, Q, sigma, pr1, pr2, qr1, qr2, pi);
		sum := sum + (3 * gatesMult4(P, Q, sigma, pr1, pr2, qr1, qr2));
		sum := sum + gatesInv4(P, Q, sigma, pr1, pr2, qr1, qr2);

		// gatesSquareScale4(P, Q, sigma, pr1, pr2, qr1, qr2, pi);
		// gatesMult4(P, Q, sigma, pr1, pr2, qr1, qr2);
		// gatesInv4(P, Q, sigma, pr1, pr2, qr1, qr2);;

		return sum - 15; // -15 for shared factors for three GF(2^4) multipliers
	end if;
end function;

gatesAdd8 := function()
	return 8; // # of bits for each input element
end function;

gatesMult8 := function(P, Q, R, sigma, pi, pr1, pr2, qr1, qr2, rr1, rr2)
	if (rr1 eq 1) then
		sum := (4 * gatesAdd4());
		sum := sum + (3 * gatesMult4(P, Q, sigma, pr1, pr2, qr1, qr2));
		sum := sum + (gatesScale4(P, Q, sigma, pr1, pr2, qr1, qr2, pi));
		return sum;
	else 
		sum := (4 * gatesAdd4());
		sum := sum + (3 * gatesMult4(P, Q, sigma, pr1, pr2, qr1, qr2));
		sum := sum + (gatesScale4(P, Q, sigma, pr1, pr2, qr1, qr2, pi));
		return sum;
	end if;
end function;

gatesSquare8 := function(P, Q, R, sigma, pi, pr1, pr2, qr1, qr2, rr1, rr2)
	if rr1 eq 1 then // polynomial basis
		sum := (2 * gatesSquare4(P, Q, sigma, pr1, pr2, qr1, qr2));
		sum := sum + gatesAdd4();
		sum := sum + gatesScale4(P, Q, sigma, pr1, pr2, qr1, qr2, pi);
		return sum;
	else // normal basis
		sum := (3 * gatesAdd4());
		sum := sum + (2 * gatesSquare4(P, Q, sigma, pr1, pr2, qr1, qr2));
		sum := sum + gatesScale4(P, Q, sigma, pr1, pr2, qr1, qr2, pi);
		return sum;
	end if;
end function;

gatesScale8 := function(P, Q, R, sigma, pi, pr1, pr2, qr1, qr2, rr1, rr2, lambda)
	"NOT USED"; quit;
	return 0; // not used.
end function;

// Need to optimize (all 128 cases, really?)
gatesSquareScale8 := function(P, Q, R, sigma, pi, pr1, pr2, qr1, qr2, rr1, rr2, lambda)
	e3 := Eltseq(lambda)[2];
	e4 := Eltseq(lambda)[1];
	if (rr1 eq 1) then
		if (e4 eq 0) and (e3 eq pi^(-1)) then
			sum := 2 * gatesSquare4(P, Q, sigma, pr1, pr2, qr1, qr2);
			sum := sum + (2 * gatesMult4(P, Q, sigma, pr1, pr2, qr1, qr2));
			sum := sum + (2 * gatesAdd4());
			sum := sum + gatesScale4(P, Q, sigma, pr1, pr2, qr1, qr2, pi);
			return sum;
		elif (e3 eq pi^(-1)) then
			sum := 5 * gatesAdd4();
			sum := sum + (2 * gatesSquare4(P, Q, sigma, pr1, pr2, qr1, qr2));
			sum := sum + (3 * gatesMult4(P, Q, sigma, pr1, pr2, qr1, qr2));
			sum := sum + gatesScale4(P, Q, sigma, pr1, pr2, qr1, qr2, pi);
			return sum;
		elif (e4 eq 0 and e3 eq pi^(-1)) then
			sum := 2 * gatesAdd4();
			sum := sum + (2 * gatesSquare4(P, Q, sigma, pr1, pr2, qr1, qr2));
			sum := sum + gatesMult4(P, Q, sigma, pr1, pr2, qr1, qr2);
			return sum;
		else // regular multiplication
			return gatesMult8(P, Q, R, sigma, pi, pr1, pr2, qr1, qr2, rr1, rr2);
		end if;
	else
		// TODO: other optimizations were not implemented for the normal basis
		return gatesMult8(P, Q, R, sigma, pi, pr1, pr2, qr1, qr2, rr1, rr2);
	end if;
end function;

/// GATE COUNTS FOR ARITHMETIC IN GF(2^16)/GF(2^8)

gatesInv16 := function(P, Q, R, S, sigma, pi, lambda, pr1, pr2, qr1, qr2, rr1, rr2, sr1, sr2)
	if (sr1 eq 1) then

		// gatesSquareScale8(P, Q, R, sigma, pi, pr1, pr2, qr1, qr2, rr1, rr2, lambda);
		// gatesMult8(P, Q, R, sigma, pi, pr1, pr2, qr1, qr2, rr1, rr2);
		// gatesInv8(P, Q, R, sigma, pi, pr1, pr2, qr1, qr2, rr1, rr2);

		sum := 2 * gatesAdd8(); // d1 + d2
		sum := sum + gatesSquareScale8(P, Q, R, sigma, pi, pr1, pr2, qr1, qr2, rr1, rr2, lambda);
		sum := sum + (3 * gatesMult8(P, Q, R, sigma, pi, pr1, pr2, qr1, qr2, rr1, rr2));
		sum := sum + gatesInv8(P, Q, R, sigma, pi, pr1, pr2, qr1, qr2, rr1, rr2);
		return sum - 20; // -20 for shared factors of two GF(2^8) multipliers - see thesis for rationale
	else // normal basis - THIS IS THE SAME AS ABOVE (but more shared factors)
		sum := 2 * gatesAdd8(); // d1 + d2
		sum := sum + gatesSquareScale8(P, Q, R, sigma, pi, pr1, pr2, qr1, qr2, rr1, rr2, lambda);
		sum := sum + (3 * gatesMult8(P, Q, R, sigma, pi, pr1, pr2, qr1, qr2, rr1, rr2));
		sum := sum + gatesInv8(P, Q, R, sigma, pi, pr1, pr2, qr1, qr2, rr1, rr2);
		return sum - 30; // -30 for shared factors for three GF(2^8) multipliers - see thesis for rationale
	end if;
end function;

//////////////// START ROOT GENERATION CODE

pad := function(S, n)
	for i := 1 to n do
		S := Insert(S, 0, 0);
	end for;
	return S;
end function;

// CORRECT
buildRoot4Row := function(element, subfield) 

	// elem := Reverse(Eltseq(element));
	// elem := pad(elem, 4 - #elem);
	// element;
	// elem;
	// return elem;

	if element eq 1 then
		return [0,0,0,1];
	end if;
	elem := Eltseq(element, subfield);

	if #elem eq 1 then
		tmp := Eltseq(elem[1]);
		row := [0,0,tmp[2],tmp[1]];
		return row;
	end if;

	tmp := [Eltseq(elem[2])[2], Eltseq(elem[2])[1], Eltseq(elem[1])[2], Eltseq(elem[1])[1]];
	return tmp;
end function;

// CORRECT
buildRoot8Row := function(element, subfield) 
	if element eq 1 then
		return [0,0,0,0,0,0,0,1];
	end if;

	// Drop down to a pair of elements in the subfield.
	elem := Eltseq(element, subfield);
	// elem := Reverse(Eltseq(element));
	// elem := pad(elem, 8 - #elem);
	// element;
	// elem;
	// return elem;

	// no w term, so insert two leading zeroes
	if #elem eq 1 then
		tmp := Eltseq(elem[1]); // [2] refers to upper bits, we must have the lower bits here
		tmp1 := Eltseq(tmp)[1]; // lower
		tmp2 := Eltseq(tmp)[2]; // upper
		row := [0,0,0,0,Eltseq(tmp2)[2], Eltseq(tmp2)[1], Eltseq(tmp1)[2], Eltseq(tmp1)[1]];
		return row;
	else
		p4 := Eltseq(Eltseq(elem)[2])[2];
		p3 := Eltseq(Eltseq(elem)[2])[1];
		p2 := Eltseq(Eltseq(elem)[1])[2];
		p1 := Eltseq(Eltseq(elem)[1])[1];
		tmp := 
			[
			Eltseq(p4)[2], Eltseq(p4)[1], 
			Eltseq(p3)[2], Eltseq(p3)[1], 
			Eltseq(p2)[2], Eltseq(p2)[1], 
			Eltseq(p1)[2], Eltseq(p1)[1]
			];
		return tmp;
	end if;
end function;

// NOT TESTED
buildRoot16Row := function(element, F16, F256)
	// elem := Reverse(Eltseq(element));
	// elem := pad(elem, 16 - #elem);
	// return elem;

	if element eq 1 then
		return [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1];
	end if;

	// Drop down to a pair of elements in the subfield
	elem := Eltseq(element, F256); // sequence of elements in F256 (should be a pair)

	// no w term, so insert two leading zeroes
	if #elem eq 1 then // no upper 8 bits
		lower := buildRoot8Row(elem[1], F16);

		row := 
			[0,0,0,0,0,0,0,0,
			lower[1], lower[2],
			lower[3], lower[4],
			lower[5], lower[6],
			lower[7], lower[8]
			];
		return row;
	else
		// element;
		// elem[1];
		// elem[2];
		upper := buildRoot8Row(elem[2], F16);
		lower := buildRoot8Row(elem[1], F16);

		row := 
			[
			upper[1], upper[2],
			upper[3], upper[4],
			upper[5], upper[6],
			upper[7], upper[8],
			lower[1], lower[2],
			lower[3], lower[4],
			lower[5], lower[6],
			lower[7], lower[8]
			];
		return row;
	end if;
end function;

// sigma in GF(2^2)
// CORRECT
changeSigmaRoot := function(pr1, pr2, F4, sigma) // sigma in GF(2^2)
	if pr2 eq 1 then
		r1 := [0, 1];
	else
		r1 := Reverse(Eltseq(pr2));
	end if;
	if pr1 eq 1 then
		r2 := [0, 1];
	else
		r2 := Reverse(Eltseq(pr1));
	end if;
	M := Matrix(GF(2), [ r1, r2 ]);

	if sigma eq 0 then
		evector := [0,0];
	elif sigma eq 1 then
		evector := [0,1];
	else
		evector := Reverse(Eltseq(sigma));
	end if;

	ev := Transpose(Matrix(GF(2), [ evector ]));
	prod := Transpose(M)^(-1) * ev;
	newSigma := Seqelt([prod[2][1], prod[1][1]], F4);
	return newSigma;
end function;

// sigma in GF(2^2)
// CORRECT
changeSigmaRoot_bin := function(pr1, pr2, F4, sigma) // sigma in GF(2^2)
	if pr2 eq 1 then
		r1 := [0, 1];
	else
		r1 := Reverse(Eltseq(pr2));
	end if;
	if pr1 eq 1 then
		r2 := [0, 1];
	else
		r2 := Reverse(Eltseq(pr1));
	end if;
	M := Matrix(GF(2), [ r1, r2 ]);

	if sigma eq 0 then
		evector := [0,0];
	elif sigma eq 1 then
		evector := [0,1];
	else
		evector := Reverse(Eltseq(sigma));
	end if;

	ev := Transpose(Matrix(GF(2), [ evector ]));
	prod := Transpose(M)^(-1) * ev;
	return Transpose(prod);
end function;

// pi in GF(2^4)/GF(2^2)
// CORRECT
changePiRoot := function(pr1, pr2, qr1, qr2, F4, F16, pi) // pi in GF(2^4)/GF(2^2)
	q1p1 := pr1 * qr1;
	q2p1 := pr1 * qr2;
	q1p2 := pr2 * qr1;
	q2p2 := pr2 * qr2;
	r1 := buildRoot4Row(q2p2, F4);
	r2 := buildRoot4Row(q2p1, F4);
	r3 := buildRoot4Row(q1p2, F4);
	r4 := buildRoot4Row(q1p1, F4);

	// [r1, r2, r3, r4];

	M := Matrix(GF(2), [ r1, r2, r3, r4 ]);
	evector := [Eltseq(Eltseq(pi)[2])[2], Eltseq(Eltseq(pi)[2])[1], Eltseq(Eltseq(pi)[1])[2], Eltseq(Eltseq(pi)[1])[1]];
	ev := Transpose(Matrix(GF(2), [evector])); // correct
	prod := Transpose(M)^(-1) * ev;
	newPi := Seqelt([Seqelt([prod[4][1],prod[3][1]], F4), Seqelt([prod[2][1],prod[1][1]], F4)], F16);
	return newPi;
end function;

changePiRoot_bin := function(pr1, pr2, qr1, qr2, F4, F16, pi) // pi in GF(2^4)/GF(2^2)
	q1p1 := pr1 * qr1;
	q2p1 := pr1 * qr2;
	q1p2 := pr2 * qr1;
	q2p2 := pr2 * qr2;
	r1 := buildRoot4Row(q2p2, F4);
	r2 := buildRoot4Row(q2p1, F4);
	r3 := buildRoot4Row(q1p2, F4);
	r4 := buildRoot4Row(q1p1, F4);

	// [r1, r2, r3, r4];

	M := Matrix(GF(2), [ r1, r2, r3, r4 ]);
	evector := [Eltseq(Eltseq(pi)[2])[2], Eltseq(Eltseq(pi)[2])[1], Eltseq(Eltseq(pi)[1])[2], Eltseq(Eltseq(pi)[1])[1]];
	ev := Transpose(Matrix(GF(2), [evector])); // correct
	prod := Transpose(M)^(-1) * ev;
	return Transpose(prod);
end function;

// lambda in GF(2^8)/GF(2^4)/GF(2^2)
changeLambdaRoot_matrix := function(pr1, pr2, qr1, qr2, rr1, rr2, F4, F16, F256)
	p1q1r1 := F256 ! (pr1 * qr1 * rr1);
	p1q2r1 := F256 ! (pr1 * qr2 * rr1);
	p2q1r1 := F256 ! (pr2 * qr1 * rr1);
	p2q2r1 := F256 ! (pr2 * qr2 * rr1);
	p1q1r2 := F256 ! (pr1 * qr1 * rr2);
	p1q2r2 := F256 ! (pr1 * qr2 * rr2);
	p2q1r2 := F256 ! (pr2 * qr1 * rr2);
	p2q2r2 := F256 ! (pr2 * qr2 * rr2);
	r1 := buildRoot8Row(F256!p2q2r2, F16);
	r2 := buildRoot8Row(F256!p1q2r2, F16);
	r3 := buildRoot8Row(F256!p2q1r2, F16);
	r4 := buildRoot8Row(F256!p1q1r2, F16);
	r5 := buildRoot8Row(F256!p2q2r1, F16);
	r6 := buildRoot8Row(F256!p1q2r1, F16);
	r7 := buildRoot8Row(F256!p2q1r1, F16);
	r8 := buildRoot8Row(F256!p1q1r1, F16);

	// Create the inverse basis change matrix...
	M := Matrix(GF(2), [ r1, r2, r3, r4, r5, r6, r7, r8 ]);

	return Transpose(M);
end function;

// lambda in GF(2^8)/GF(2^4)/GF(2^2)
changeLambdaRoot_bin := function(pr1, pr2, qr1, qr2, rr1, rr2, F4, F16, F256, lambda)
	p1q1r1 := F256 ! (pr1 * qr1 * rr1);
	p1q2r1 := F256 ! (pr1 * qr2 * rr1);
	p2q1r1 := F256 ! (pr2 * qr1 * rr1);
	p2q2r1 := F256 ! (pr2 * qr2 * rr1);
	p1q1r2 := F256 ! (pr1 * qr1 * rr2);
	p1q2r2 := F256 ! (pr1 * qr2 * rr2);
	p2q1r2 := F256 ! (pr2 * qr1 * rr2);
	p2q2r2 := F256 ! (pr2 * qr2 * rr2);
	r1 := buildRoot8Row(F256!p2q2r2, F16);
	r2 := buildRoot8Row(F256!p1q2r2, F16);
	r3 := buildRoot8Row(F256!p2q1r2, F16);
	r4 := buildRoot8Row(F256!p1q1r2, F16);
	r5 := buildRoot8Row(F256!p2q2r1, F16);
	r6 := buildRoot8Row(F256!p1q2r1, F16);
	r7 := buildRoot8Row(F256!p2q1r1, F16);
	r8 := buildRoot8Row(F256!p1q1r1, F16);

	// Create the inverse basis change matrix...
	M := Matrix(GF(2), [ r1, r2, r3, r4, r5, r6, r7, r8 ]);

	// Create the element sequences
	upper := Eltseq(lambda)[2];
	lower := Eltseq(lambda)[1];
	p4 := Eltseq(upper)[2];
	p3 := Eltseq(upper)[1];
	p2 := Eltseq(lower)[2];
	p1 := Eltseq(lower)[1];
	evector := [Eltseq(p4)[2], Eltseq(p4)[1], Eltseq(p3)[2], Eltseq(p3)[1], Eltseq(p2)[2], Eltseq(p2)[1], Eltseq(p1)[2], Eltseq(p1)[1]];
	ev := Transpose(Matrix(GF(2), [evector])); 
	prod := Transpose(M)^(-1) * ev;

	return Transpose(prod);
end function;

changeLambdaRoot := function(pr1, pr2, qr1, qr2, rr1, rr2, F4, F16, F256, lambda)
	p1q1r1 := pr1 * qr1 * rr1;
	p1q2r1 := pr1 * qr2 * rr1;
	p2q1r1 := pr2 * qr1 * rr1;
	p2q2r1 := pr2 * qr2 * rr1;
	p1q1r2 := pr1 * qr1 * rr2;
	p1q2r2 := pr1 * qr2 * rr2;
	p2q1r2 := pr2 * qr1 * rr2;
	p2q2r2 := pr2 * qr2 * rr2;
	r1 := buildRoot8Row(F256!p2q2r2, F16);
	r2 := buildRoot8Row(F256!p1q2r2, F16);
	r3 := buildRoot8Row(F256!p2q1r2, F16);
	r4 := buildRoot8Row(F256!p1q1r2, F16);
	r5 := buildRoot8Row(F256!p2q2r1, F16);
	r6 := buildRoot8Row(F256!p1q2r1, F16);
	r7 := buildRoot8Row(F256!p2q1r1, F16);
	r8 := buildRoot8Row(F256!p1q1r1, F16);

	// Create the inverse basis change matrix...
	M := Matrix(GF(2), [ r1, r2, r3, r4, r5, r6, r7, r8 ]);

	// Create the element sequences
	upper := Eltseq(lambda)[2];
	lower := Eltseq(lambda)[1];
	p4 := Eltseq(upper)[2];
	p3 := Eltseq(upper)[1];
	p2 := Eltseq(lower)[2];
	p1 := Eltseq(lower)[1];
	evector := [Eltseq(p4)[2], Eltseq(p4)[1], Eltseq(p3)[2], Eltseq(p3)[1], Eltseq(p2)[2], Eltseq(p2)[1], Eltseq(p1)[2], Eltseq(p1)[1]];
	ev := Transpose(Matrix(GF(2), [evector])); 
	prod := Transpose(M)^(-1) * ev;

	newLambda := Seqelt( 
		[
			Seqelt( [ Seqelt([prod[8][1],prod[7][1]], F4), Seqelt([prod[6][1],prod[5][1]], F4) ], F16), 
			Seqelt( [ Seqelt([prod[4][1],prod[3][1]], F4), Seqelt([prod[2][1],prod[1][1]], F4) ], F16)
		], F256);
	return newLambda;
end function;

changePsiRoot_matrix := function(pr1, pr2, qr1, qr2, rr1, rr2, sr1, sr2, F4, F16, F256, F6K)
	p1q1r1s1 := pr1 * qr1 * rr1 * sr1;
	p1q2r1s1 := pr1 * qr2 * rr1 * sr1;
	p2q1r1s1 := pr2 * qr1 * rr1 * sr1;
	p2q2r1s1 := pr2 * qr2 * rr1 * sr1;
	p1q1r2s1 := pr1 * qr1 * rr2 * sr1;
	p1q2r2s1 := pr1 * qr2 * rr2 * sr1;
	p2q1r2s1 := pr2 * qr1 * rr2 * sr1;
	p2q2r2s1 := pr2 * qr2 * rr2 * sr1;

	p1q1r1s2 := pr1 * qr1 * rr1 * sr2;
	p1q2r1s2 := pr1 * qr2 * rr1 * sr2;
	p2q1r1s2 := pr2 * qr1 * rr1 * sr2;
	p2q2r1s2 := pr2 * qr2 * rr1 * sr2;
	p1q1r2s2 := pr1 * qr1 * rr2 * sr2;
	p1q2r2s2 := pr1 * qr2 * rr2 * sr2;
	p2q1r2s2 := pr2 * qr1 * rr2 * sr2;
	p2q2r2s2 := pr2 * qr2 * rr2 * sr2;

	r1 := buildRoot16Row(F6K ! p2q2r2s2, F16, F256);
	r2 := buildRoot16Row(F6K ! p1q2r2s2, F16, F256);
	r3 := buildRoot16Row(F6K ! p2q1r2s2, F16, F256);
	r4 := buildRoot16Row(F6K ! p1q1r2s2, F16, F256);
	r5 := buildRoot16Row(F6K ! p2q2r1s2, F16, F256);
	r6 := buildRoot16Row(F6K ! p1q2r1s2, F16, F256);
	r7 := buildRoot16Row(F6K ! p2q1r1s2, F16, F256);
	r8 := buildRoot16Row(F6K ! p1q1r1s2, F16, F256);

	r9  := buildRoot16Row(F6K ! p2q2r2s1, F16, F256);
	r10 := buildRoot16Row(F6K ! p1q2r2s1, F16, F256);
	r11 := buildRoot16Row(F6K ! p2q1r2s1, F16, F256);
	r12 := buildRoot16Row(F6K ! p1q1r2s1, F16, F256);
	r13 := buildRoot16Row(F6K ! p2q2r1s1, F16, F256);
	r14 := buildRoot16Row(F6K ! p1q2r1s1, F16, F256);
	r15 := buildRoot16Row(F6K ! p2q1r1s1, F16, F256);
	r16 := buildRoot16Row(F6K ! p1q1r1s1, F16, F256);

	// Create the inverse basis change matrix...
	M := Matrix(GF(2), [ r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16 ]);

	return Transpose(M);
end function;

testBasisChange8_2 := function(v, w, x, prr1, prr2, qrr1, qrr2, rrr1, rrr2, F4, F16, F256, field)
	// Map to isomorphic elements in GF(2^8)
	pr1 := field ! 1;
	pr1;
	pr2 := field ! v;
	pr2;
	qr1 := field ! 1;
	qr1;
	qr2 := field ! w;
	qr2;
	rr1 := field ! 1;
	rr1;
	rr2 := field ! x;
	rr2;

	// Build the basis change matrix rows
	p1q1r1 := Reverse(Eltseq(pr1 * qr1 * rr1));
	p1q1r1 := pad(p1q1r1, 8 - #p1q1r1);

	p1q2r1 := Reverse(Eltseq(pr1 * qr2 * rr1));
	p1q2r1 := pad(p1q2r1, 8 - #p1q2r1);

	p2q1r1 := Reverse(Eltseq(pr2 * qr1 * rr1));
	p2q1r1 := pad(p2q1r1, 8 - #p2q1r1);

	p2q2r1 := Reverse(Eltseq(pr2 * qr2 * rr1));
	p2q2r1 := pad(p2q2r1, 8 - #p2q2r1);

	p1q1r2 := Reverse(Eltseq(pr1 * qr1 * rr2));
	p1q1r2 := pad(p1q1r2, 8 - #p1q1r2);

	p1q2r2 := Reverse(Eltseq(pr1 * qr2 * rr2));
	p1q2r2 := pad(p1q2r2, 8 - #p1q2r2);

	p2q1r2 := Reverse(Eltseq(pr2 * qr1 * rr2));
	p2q1r2 := pad(p2q1r2, 8 - #p2q1r2);

	p2q2r2 := Reverse(Eltseq(pr2 * qr2 * rr2));
	p2q2r2 := pad(p2q2r2, 8 - #p2q2r2);

	r1 := p2q2r2;
	r2 := p1q2r2;
	r3 := p2q1r2;
	r4 := p1q1r2;
	r5 := p2q2r1;
	r6 := p1q2r1;
	r7 := p2q1r1;
	r8 := p1q1r1;

	// Create the basis change matrix to go from GF(2^8) to GF(((2^2)^2)^2)
	M := Transpose(Matrix(GF(2), [  r1, r2, r3, r4, r5, r6, r7, r8 ])); // M == X
	MI := M^(-1);
	// M;
	// "";
	// MI;
	// "";

	len := 0;
	repeat 
		test := Random(field);
		F := GF(2);
		// test := Seqelt([F!0,F!0,F!0,F!1,F!0,F!0,F!1,F!0], field);
		// F256 ! prr1;
		// prr1;
		// F256 ! prr2;
		// prr2;
		// F256 ! qrr1;
		// qrr1;
		// F256 ! qrr2;
		// qrr2;
		// F256 ! rrr1;
		// rrr1;
		// F256 ! rrr2;
		// rrr2;
		// DefiningPolynomial(field);
		// DefiningPolynomial(F256);
		// test;
		// test^-1;
		testseq := Reverse(Eltseq(test));
		testseq := pad(testseq, 8 - #testseq);
		// testseq;

		vector := Transpose(Matrix(GF(2),[testseq]));
		sv := MI * vector;
		// sv;

		subelem := Seqelt( 
		[
			Seqelt( [ Seqelt([sv[8][1],sv[7][1]], F4), Seqelt([sv[6][1],sv[5][1]], F4) ], F16), 
			Seqelt( [ Seqelt([sv[4][1],sv[3][1]], F4), Seqelt([sv[2][1],sv[1][1]], F4) ], F16)
		], F256);

		// "non";
		// subelem;

		// Now construct the basis change matrix for GF(((2^2)^2)^2) polynomial basis to whatever basis is used given the roots
		properRoot := changeLambdaRoot_bin(prr1, prr2, qrr1, qrr2, rrr1, rrr2, F4, F16, F256, subelem);
		// "proper";
		// properRoot;
		len := NumberOfNonZeroEntries(properRoot);
	until len eq 1;

	prr1;
	prr2;
	qrr1;
	qrr2;
	rrr1;
	rrr2;

	"proper";
	properRoot;

	// test combination!
	M2 := changeLambdaRoot_matrix(prr1, prr2, qrr1, qrr2, rrr1, rrr2, F4, F16, F256);
	sv := Transpose(M2^(-1) * MI * vector);
	sv;
	"";
	T := M2^(-1) * MI;
	T;
	"";
	"here we go";
	M * M2;
	"";
	M2^(-1) * MI;

	// quit;

	if [T[1][7], T[2][7], T[3][7], T[4][7], T[5][7], T[6][7], T[7][7], T[8][7]] eq [1,0,1,0,1,0,0,1] then
		"FUCK YES OH MY GOD";
		quit;
	end if;

	// subelem := Seqelt( 
	// [
	// 	Seqelt( [ Seqelt([sv[8][1],sv[7][1]], F4), Seqelt([sv[6][1],sv[5][1]], F4) ], F16), 
	// 	Seqelt( [ Seqelt([sv[4][1],sv[3][1]], F4), Seqelt([sv[2][1],sv[1][1]], F4) ], F16)
	// ], F256);
	// subelem;

	// test^-1;
	testseq := Reverse(Eltseq(test^-1));
	testseq := pad(testseq, 8 - #testseq);
	testseq;

	vector := Transpose(Matrix(GF(2),[testseq]));
	sv := MI * vector;
	sv;

	subeleminv := Seqelt( 
	[
		Seqelt( [ Seqelt([sv[8][1],sv[7][1]], F4), Seqelt([sv[6][1],sv[5][1]], F4) ], F16), 
		Seqelt( [ Seqelt([sv[4][1],sv[3][1]], F4), Seqelt([sv[2][1],sv[1][1]], F4) ], F16)
	], F256);

	"inv";
	subeleminv;

	// Now construct the basis change matrix for GF(((2^2)^2)^2) polynomial basis to whatever basis is used given the roots
	properRootInv := changeLambdaRoot_bin(prr1, prr2, qrr1, qrr2, rrr1, rrr2, F4, F16, F256, subeleminv);
	sv := Transpose(M2^(-1) * MI * vector);
	"proper inverse";
	properRootInv;
	sv;

	quit;

	// // Test with addition...
	// sinverse := subelem^(-1);
	// sinverse;

	// buildRoot8Row(sinverse, F16);
	// prod := M * Transpose(Matrix(GF(2),[buildRoot8Row(sinverse, F16)]));
	// prod;
	// prodseq := [prod[8][1], prod[7][1], prod[6][1], prod[5][1], prod[4][1], prod[3][1], prod[2][1], prod[1][1]];
	// inverse := Seqelt(prodseq, field);

	// // prod := M * Transpose(Matrix(GF(2),[buildRoot8Row(other, F16)]));
	// // prod;
	// // prodseq := [prod[8][1], prod[7][1], prod[6][1], prod[5][1], prod[4][1], prod[3][1], prod[2][1], prod[1][1]];
	// // addee := Seqelt(prodseq, field);

	// inverse; // squared in isomorphic field... 
	// test; // squared in extension field...
	// test^(-1);

	// assert test^(-1) eq inverse;

	return 0;
end function;

testBasisChange8 := function(prr1, prr2, qrr1, qrr2, rrr1, rrr2, F4, F16, F256, field)
	// Map to isomorphic elements in GF(2^8)
	pr1 := field ! prr1;
	pr1;
	pr2 := field ! prr2;
	pr2;
	qr1 := field ! qrr1;
	qr1;
	qr2 := field ! qrr2;
	qr2;
	rr1 := field ! rrr1;
	rr1;
	rr2 := field ! rrr2;
	rr2;

	// Build the basis change matrix rows
	p1q1r1 := Reverse(Eltseq(pr1 * qr1 * rr1));
	p1q1r1 := pad(p1q1r1, 8 - #p1q1r1);

	p1q2r1 := Reverse(Eltseq(pr1 * qr2 * rr1));
	p1q2r1 := pad(p1q2r1, 8 - #p1q2r1);

	p2q1r1 := Reverse(Eltseq(pr2 * qr1 * rr1));
	p2q1r1 := pad(p2q1r1, 8 - #p2q1r1);

	p2q2r1 := Reverse(Eltseq(pr2 * qr2 * rr1));
	p2q2r1 := pad(p2q2r1, 8 - #p2q2r1);

	p1q1r2 := Reverse(Eltseq(pr1 * qr1 * rr2));
	p1q1r2 := pad(p1q1r2, 8 - #p1q1r2);

	p1q2r2 := Reverse(Eltseq(pr1 * qr2 * rr2));
	p1q2r2 := pad(p1q2r2, 8 - #p1q2r2);

	p2q1r2 := Reverse(Eltseq(pr2 * qr1 * rr2));
	p2q1r2 := pad(p2q1r2, 8 - #p2q1r2);

	p2q2r2 := Reverse(Eltseq(pr2 * qr2 * rr2));
	p2q2r2 := pad(p2q2r2, 8 - #p2q2r2);

	r1 := p2q2r2;
	r2 := p1q2r2;
	r3 := p2q1r2;
	r4 := p1q1r2;
	r5 := p2q2r1;
	r6 := p1q2r1;
	r7 := p2q1r1;
	r8 := p1q1r1;

	// Create the inverse basis change matrix...
	M := Transpose(Matrix(GF(2), [ r1, r2, r3, r4, r5, r6, r7, r8 ])); // M == X
	MI := M^(-1);
	M;
	"";
	MI;
	"";

	test := Random(field);
	// test := Seqelt([1,0,1,0,1,0,0,0], field);
	test;
	test^-1;
	testseq := Reverse(Eltseq(test));
	testseq := pad(testseq, 8 - #testseq);
	testseq;

	vector := Transpose(Matrix(GF(2),[testseq]));
	sv := MI * vector;
	Transpose(sv);

	subelem := Seqelt( 
	[
		Seqelt( [ Seqelt([sv[8][1],sv[7][1]], F4), Seqelt([sv[6][1],sv[5][1]], F4) ], F16), 
		Seqelt( [ Seqelt([sv[4][1],sv[3][1]], F4), Seqelt([sv[2][1],sv[1][1]], F4) ], F16)
	], F256);

	"non";
	subelem;

	// test^-1;
	testseq := Reverse(Eltseq(test^-1));
	testseq := pad(testseq, 8 - #testseq);
	testseq;

	vector := Transpose(Matrix(GF(2),[testseq]));
	sv := MI * vector;
	Transpose(sv);

	subeleminv := Seqelt( 
	[
		Seqelt( [ Seqelt([sv[8][1],sv[7][1]], F4), Seqelt([sv[6][1],sv[5][1]], F4) ], F16), 
		Seqelt( [ Seqelt([sv[4][1],sv[3][1]], F4), Seqelt([sv[2][1],sv[1][1]], F4) ], F16)
	], F256);

	"inv";
	subeleminv;

	// Test with addition...
	sinverse := subelem^(-1);
	sinverse;

	buildRoot8Row(sinverse, F16);
	prod := M * Transpose(Matrix(GF(2),[buildRoot8Row(sinverse, F16)]));
	prod;
	prodseq := [prod[8][1], prod[7][1], prod[6][1], prod[5][1], prod[4][1], prod[3][1], prod[2][1], prod[1][1]];
	inverse := Seqelt(prodseq, field);

	// prod := M * Transpose(Matrix(GF(2),[buildRoot8Row(other, F16)]));
	// prod;
	// prodseq := [prod[8][1], prod[7][1], prod[6][1], prod[5][1], prod[4][1], prod[3][1], prod[2][1], prod[1][1]];
	// addee := Seqelt(prodseq, field);

	inverse; // squared in isomorphic field... 
	test; // squared in extension field...
	test^(-1);

	assert test^(-1) eq inverse;

	return 0;
end function;

testBasisChange16 := function(v, w, x, y, prr1, prr2, qrr1, qrr2, rrr1, rrr2, srr1, srr2, F4, F16, F256, F6K, field)
	// Map to isomorphic elements in GF(2^8)
	pr1 := field ! 1;
	pr2 := field ! v;
	qr1 := field ! 1;
	qr2 := field ! w;
	rr1 := field ! 1;
	rr2 := field ! x;
	sr1 := field ! 1;
	sr2 := field ! y;

	// Build the basis change matrix rows
	p1q1r1sr1 := Reverse(Eltseq(pr1 * qr1 * rr1 * sr1));
	p1q1r1sr1 := pad(p1q1r1sr1, 16 - #p1q1r1sr1);

	p1q2r1sr1 := Reverse(Eltseq(pr1 * qr2 * rr1 * sr1));
	p1q2r1sr1 := pad(p1q2r1sr1, 16 - #p1q2r1sr1);

	p2q1r1sr1 := Reverse(Eltseq(pr2 * qr1 * rr1 * sr1));
	p2q1r1sr1 := pad(p2q1r1sr1, 16 - #p2q1r1sr1);

	p2q2r1sr1 := Reverse(Eltseq(pr2 * qr2 * rr1 * sr1));
	p2q2r1sr1 := pad(p2q2r1sr1, 16 - #p2q2r1sr1);

	p1q1r2sr1 := Reverse(Eltseq(pr1 * qr1 * rr2 * sr1));
	p1q1r2sr1 := pad(p1q1r2sr1, 16 - #p1q1r2sr1);

	p1q2r2sr1 := Reverse(Eltseq(pr1 * qr2 * rr2 * sr1));
	p1q2r2sr1 := pad(p1q2r2sr1, 16 - #p1q2r2sr1);

	p2q1r2sr1 := Reverse(Eltseq(pr2 * qr1 * rr2 * sr1));
	p2q1r2sr1 := pad(p2q1r2sr1, 16 - #p2q1r2sr1);

	p2q2r2sr1 := Reverse(Eltseq(pr2 * qr2 * rr2 * sr1));
	p2q2r2sr1 := pad(p2q2r2sr1, 16 - #p2q2r2sr1);

	p1q1r1sr2 := Reverse(Eltseq(pr1 * qr1 * rr1 * sr2));
	p1q1r1sr2 := pad(p1q1r1sr2, 16 - #p1q1r1sr2);

	p1q2r1sr2 := Reverse(Eltseq(pr1 * qr2 * rr1 * sr2));
	p1q2r1sr2 := pad(p1q2r1sr2, 16 - #p1q2r1sr2);

	p2q1r1sr2 := Reverse(Eltseq(pr2 * qr1 * rr1 * sr2));
	p2q1r1sr2 := pad(p2q1r1sr2, 16 - #p2q1r1sr2);

	p2q2r1sr2 := Reverse(Eltseq(pr2 * qr2 * rr1 * sr2));
	p2q2r1sr2 := pad(p2q2r1sr2, 16 - #p2q2r1sr2);

	p1q1r2sr2 := Reverse(Eltseq(pr1 * qr1 * rr2 * sr2));
	p1q1r2sr2 := pad(p1q1r2sr2, 16 - #p1q1r2sr2);

	p1q2r2sr2 := Reverse(Eltseq(pr1 * qr2 * rr2 * sr2));
	p1q2r2sr2 := pad(p1q2r2sr2, 16 - #p1q2r2sr2);

	p2q1r2sr2 := Reverse(Eltseq(pr2 * qr1 * rr2 * sr2));
	p2q1r2sr2 := pad(p2q1r2sr2, 16 - #p2q1r2sr2);

	p2q2r2sr2 := Reverse(Eltseq(pr2 * qr2 * rr2 * sr2));
	p2q2r2sr2 := pad(p2q2r2sr2, 16 - #p2q2r2sr2);

	r1 := p2q2r2sr2;
	r2 := p1q2r2sr2;
	r3 := p2q1r2sr2;
	r4 := p1q1r2sr2;
	r5 := p2q2r1sr2;
	r6 := p1q2r1sr2;
	r7 := p2q1r1sr2;
	r8 := p1q1r1sr2;
	r9 := p2q2r2sr1;
	r10 := p1q2r2sr1;
	r11 := p2q1r2sr1;
	r12 := p1q1r2sr1;
	r13 := p2q2r1sr1;
	r14 := p1q2r1sr1;
	r15 := p2q1r1sr1;
	r16 := p1q1r1sr1;

	// r1  := buildRoot16Row(p2q2r2s2, F16, F256);
	// r2  := buildRoot16Row(p1q2r2s2, F16, F256);
	// r3  := buildRoot16Row(p2q1r2s2, F16, F256);
	// r4  := buildRoot16Row(p1q1r2s2, F16, F256);
	// r5  := buildRoot16Row(p2q2r1s2, F16, F256);
	// r6  := buildRoot16Row(p1q2r1s2, F16, F256);
	// r7  := buildRoot16Row(p2q1r1s2, F16, F256);
	// r8  := buildRoot16Row(p1q1r1s2, F16, F256);
	// r9  := buildRoot16Row(p2q2r2s1, F16, F256);
	// r10 := buildRoot16Row(p1q2r2s1, F16, F256);
	// r11 := buildRoot16Row(p2q1r2s1, F16, F256);
	// r12 := buildRoot16Row(p1q1r2s1, F16, F256);
	// r13 := buildRoot16Row(p2q2r1s1, F16, F256);
	// r14 := buildRoot16Row(p1q2r1s1, F16, F256);
	// r15 := buildRoot16Row(p2q1r1s1, F16, F256);
	// r16 := buildRoot16Row(p1q1r1s1, F16, F256);

	// [r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16];

	// Create the inverse basis change matrix...
	M := Transpose(Matrix(GF(2), [  r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16 ])); // M == X
	MI := M^(-1);

	// Create the basis change in GF(((2^2)^2)^2)
	M2 := changePsiRoot_matrix(prr1, prr2, qrr1, qrr2, rrr1, rrr2, srr1, srr2, F4, F16, F256, F6K);
	M := M * M2;
	MI := M2^(-1) * MI;
	// M * M2;
	// M2^(-1) * MI;

	// Search for an element with 2 bits set... to make verification easier on ourselves...

	en := 0;
	test := 1;
	testvect := RandomMatrix(GF(2),1,16);
	len := 0;
	repeat 
		test := Random(field);
		F := GF(2);
		testseq := Reverse(Eltseq(test));
		testseq := pad(testseq, 16 - #testseq);
		vector := Transpose(Matrix(GF(2),[testseq]));
		testvect := MI * vector;
		len := NumberOfNonZeroEntries(testvect);
	until len eq 1;

	test;
	testinv := test^-1;
	testinv;

	F := GF(2);
	testseq := Reverse(Eltseq(testinv));
	testseq := pad(testseq, 16 - #testseq);
	vector := Transpose(Matrix(GF(2),[testseq]));
	sv := MI * vector;
	Transpose(testvect);
	Transpose(sv);

end function;

// basis change matrices using  in GF(2^8)/GF(2^4)/GF(2^2)
totalGateCount8 := function(invCount, v, w, x, prr1, prr2, qrr1, qrr2, rrr1, rrr2, F4, F16, F256, field, AFFINE, C, CINV)

	// Map to isomorphic elements in GF(2^8) (THEY'RE BOTH IN A POLYNOMIAL BASIS, SO WE USE 1 AND THE SMALL ROOTS)
	pr1 := field ! 1;
	// pr1;
	pr2 := field ! v;
	// pr2;
	qr1 := field ! 1;
	// qr1;
	qr2 := field ! w;
	// qr2;
	rr1 := field ! 1;
	// rr1;
	rr2 := field ! x;
	// rr2;

	// Build the basis change matrix rows
	p1q1r1 := Reverse(Eltseq(pr1 * qr1 * rr1));
	p1q1r1 := pad(p1q1r1, 8 - #p1q1r1);

	p1q2r1 := Reverse(Eltseq(pr1 * qr2 * rr1));
	p1q2r1 := pad(p1q2r1, 8 - #p1q2r1);

	p2q1r1 := Reverse(Eltseq(pr2 * qr1 * rr1));
	p2q1r1 := pad(p2q1r1, 8 - #p2q1r1);

	p2q2r1 := Reverse(Eltseq(pr2 * qr2 * rr1));
	p2q2r1 := pad(p2q2r1, 8 - #p2q2r1);

	p1q1r2 := Reverse(Eltseq(pr1 * qr1 * rr2));
	p1q1r2 := pad(p1q1r2, 8 - #p1q1r2);

	p1q2r2 := Reverse(Eltseq(pr1 * qr2 * rr2));
	p1q2r2 := pad(p1q2r2, 8 - #p1q2r2);

	p2q1r2 := Reverse(Eltseq(pr2 * qr1 * rr2));
	p2q1r2 := pad(p2q1r2, 8 - #p2q1r2);

	p2q2r2 := Reverse(Eltseq(pr2 * qr2 * rr2));
	p2q2r2 := pad(p2q2r2, 8 - #p2q2r2);

	r1 := p2q2r2;
	r2 := p1q2r2;
	r3 := p2q1r2;
	r4 := p1q1r2;
	r5 := p2q2r1;
	r6 := p1q2r1;
	r7 := p2q1r1;
	r8 := p1q1r1;

	// Create the basis change matrix to go from GF(2^8) to GF(((2^2)^2)^2)
	M := Transpose(Matrix(GF(2), [  r1, r2, r3, r4, r5, r6, r7, r8 ])); // M == X
	MI := M^(-1);

	// Create the basis change in GF(((2^2)^2)^2)
	M2 := changeLambdaRoot_matrix(prr1, prr2, qrr1, qrr2, rrr1, rrr2, F4, F16, F256);
	M := M * M2;
	MI := M2^(-1) * MI;
	// M * M2;
	// M2^(-1) * MI;

	// Display the elements that are needed for the isomorphism...
	field ! v;
	field ! w;
	field ! x;

	// Display all of the basis change matrices and the important combinations
	// merged encryption sbox
	// (M)^-1; // T^(-1)
	MI;
	mInvCount := NumberOfNonZeroEntries(MI);
	mInvCount;
	prod := (AFFINE * M); // MT
	prod;
	maCount := NumberOfNonZeroEntries(prod);
	maCount;

	// merged decryption sbox
	prod := (AFFINE * M)^(-1); // (MT)^(-1)
	prod;
	maInvCount := NumberOfNonZeroEntries(prod);
	maInvCount;
	M; // T
	mCount := NumberOfNonZeroEntries(M);
	mCount;

	cCount := 2 * NumberOfNonZeroEntries(Matrix(GF(2),[Eltseq(C)]));
	Reverse(Eltseq(C));
	cCount;

	// Display the unoptimized totals 
	// Forward S-box = mInvCount + inv + maCount + cCount
	mInvCount + invCount + maCount + cCount;
	// Inverse S-box = maInvCount + inv + mCount + cCount
	maInvCount + invCount + mCount + cCount;
	// Merged = (mInvCount + maInvCount) + inv + (maCount + mCount) + cCount
	(mInvCount + maInvCount) + invCount + (maCount + mCount) + cCount;
	return 0; // dummy result
end function;

totalGateCount16 := function(invCount, v, w, x, y, prr1, prr2, qrr1, qrr2, rrr1, rrr2, srr1, srr2, F4, F16, F256, F6K, field, AFFINE, C, CINV)

	// Map to isomorphic elements in GF(2^8)
	pr1 := field ! 1;
	pr2 := field ! v;
	qr1 := field ! 1;
	qr2 := field ! w;
	rr1 := field ! 1;
	rr2 := field ! x;
	sr1 := field ! 1;
	sr2 := field ! y;

	// Build the basis change matrix rows
	p1q1r1sr1 := Reverse(Eltseq(pr1 * qr1 * rr1 * sr1));
	p1q1r1sr1 := pad(p1q1r1sr1, 16 - #p1q1r1sr1);

	p1q2r1sr1 := Reverse(Eltseq(pr1 * qr2 * rr1 * sr1));
	p1q2r1sr1 := pad(p1q2r1sr1, 16 - #p1q2r1sr1);

	p2q1r1sr1 := Reverse(Eltseq(pr2 * qr1 * rr1 * sr1));
	p2q1r1sr1 := pad(p2q1r1sr1, 16 - #p2q1r1sr1);

	p2q2r1sr1 := Reverse(Eltseq(pr2 * qr2 * rr1 * sr1));
	p2q2r1sr1 := pad(p2q2r1sr1, 16 - #p2q2r1sr1);

	p1q1r2sr1 := Reverse(Eltseq(pr1 * qr1 * rr2 * sr1));
	p1q1r2sr1 := pad(p1q1r2sr1, 16 - #p1q1r2sr1);

	p1q2r2sr1 := Reverse(Eltseq(pr1 * qr2 * rr2 * sr1));
	p1q2r2sr1 := pad(p1q2r2sr1, 16 - #p1q2r2sr1);

	p2q1r2sr1 := Reverse(Eltseq(pr2 * qr1 * rr2 * sr1));
	p2q1r2sr1 := pad(p2q1r2sr1, 16 - #p2q1r2sr1);

	p2q2r2sr1 := Reverse(Eltseq(pr2 * qr2 * rr2 * sr1));
	p2q2r2sr1 := pad(p2q2r2sr1, 16 - #p2q2r2sr1);

	p1q1r1sr2 := Reverse(Eltseq(pr1 * qr1 * rr1 * sr2));
	p1q1r1sr2 := pad(p1q1r1sr2, 16 - #p1q1r1sr2);

	p1q2r1sr2 := Reverse(Eltseq(pr1 * qr2 * rr1 * sr2));
	p1q2r1sr2 := pad(p1q2r1sr2, 16 - #p1q2r1sr2);

	p2q1r1sr2 := Reverse(Eltseq(pr2 * qr1 * rr1 * sr2));
	p2q1r1sr2 := pad(p2q1r1sr2, 16 - #p2q1r1sr2);

	p2q2r1sr2 := Reverse(Eltseq(pr2 * qr2 * rr1 * sr2));
	p2q2r1sr2 := pad(p2q2r1sr2, 16 - #p2q2r1sr2);

	p1q1r2sr2 := Reverse(Eltseq(pr1 * qr1 * rr2 * sr2));
	p1q1r2sr2 := pad(p1q1r2sr2, 16 - #p1q1r2sr2);

	p1q2r2sr2 := Reverse(Eltseq(pr1 * qr2 * rr2 * sr2));
	p1q2r2sr2 := pad(p1q2r2sr2, 16 - #p1q2r2sr2);

	p2q1r2sr2 := Reverse(Eltseq(pr2 * qr1 * rr2 * sr2));
	p2q1r2sr2 := pad(p2q1r2sr2, 16 - #p2q1r2sr2);

	p2q2r2sr2 := Reverse(Eltseq(pr2 * qr2 * rr2 * sr2));
	p2q2r2sr2 := pad(p2q2r2sr2, 16 - #p2q2r2sr2);

	r1 := p2q2r2sr2;
	r2 := p1q2r2sr2;
	r3 := p2q1r2sr2;
	r4 := p1q1r2sr2;
	r5 := p2q2r1sr2;
	r6 := p1q2r1sr2;
	r7 := p2q1r1sr2;
	r8 := p1q1r1sr2;
	r9 := p2q2r2sr1;
	r10 := p1q2r2sr1;
	r11 := p2q1r2sr1;
	r12 := p1q1r2sr1;
	r13 := p2q2r1sr1;
	r14 := p1q2r1sr1;
	r15 := p2q1r1sr1;
	r16 := p1q1r1sr1;

	// r1  := buildRoot16Row(p2q2r2s2, F16, F256);
	// r2  := buildRoot16Row(p1q2r2s2, F16, F256);
	// r3  := buildRoot16Row(p2q1r2s2, F16, F256);
	// r4  := buildRoot16Row(p1q1r2s2, F16, F256);
	// r5  := buildRoot16Row(p2q2r1s2, F16, F256);
	// r6  := buildRoot16Row(p1q2r1s2, F16, F256);
	// r7  := buildRoot16Row(p2q1r1s2, F16, F256);
	// r8  := buildRoot16Row(p1q1r1s2, F16, F256);
	// r9  := buildRoot16Row(p2q2r2s1, F16, F256);
	// r10 := buildRoot16Row(p1q2r2s1, F16, F256);
	// r11 := buildRoot16Row(p2q1r2s1, F16, F256);
	// r12 := buildRoot16Row(p1q1r2s1, F16, F256);
	// r13 := buildRoot16Row(p2q2r1s1, F16, F256);
	// r14 := buildRoot16Row(p1q2r1s1, F16, F256);
	// r15 := buildRoot16Row(p2q1r1s1, F16, F256);
	// r16 := buildRoot16Row(p1q1r1s1, F16, F256);

	// [r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16];

	// Create the inverse basis change matrix...
	M := Transpose(Matrix(GF(2), [  r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16 ])); // M == X
	MI := M^(-1);

	// Create the basis change in GF(((2^2)^2)^2)
	M2 := changePsiRoot_matrix(prr1, prr2, qrr1, qrr2, rrr1, rrr2, srr1, srr2, F4, F16, F256, F6K);
	M := M * M2;
	MI := M2^(-1) * MI;
	// M * M2;
	// M2^(-1) * MI;

	// Display the elements that are needed for the isomorphism...
	field ! v;
	field ! w;
	field ! x;
	field ! y;

	// Display all of the basis change matrices and the important combinations
	// merged encryption sbox
	MI; // T^(-1)
	mInvCount := NumberOfNonZeroEntries(MI);
	mInvCount;
	prod := (AFFINE * M); // MT
	prod;
	maCount := NumberOfNonZeroEntries(prod);
	maCount;

	// merged decryption sbox
	prod := (AFFINE * M)^(-1); // (MT)^(-1)
	prod;
	maInvCount := NumberOfNonZeroEntries(prod);
	maInvCount;
	M; // T
	mCount := NumberOfNonZeroEntries(M);
	mCount;

	cCount := 2 * NumberOfNonZeroEntries(Matrix(GF(2),[Eltseq(C)]));
	Reverse(Eltseq(C));
	cCount;

	// Display the unoptimized totals 
	// Forward S-box = mInvCount + inv + maCount + cCount
	mInvCount + invCount + maCount + cCount;
	// Inverse S-box = maInvCount + inv + mCount + cCount
	maInvCount + invCount + mCount + cCount;
	// Merged = (mInvCount + maInvCount) + inv + (maCount + mCount) + cCount
	(mInvCount + maInvCount) + invCount + (maCount + mCount) + cCount;

	return 0; // dummy result
end function;

coeffMap2 := function(sigma, F, F4) // these are the only two possibilities for p(v) to be irreducible...
	// sigma;
	if Eltseq(sigma) eq [1,0] then
		return Seqelt([F ! 0,F ! 1], F4); // if sigma = 1, then we want to return v
	elif Eltseq(sigma) eq [0,1] then
		return Seqelt([F ! 1,F ! 1], F4); // if sigma = v, then we want to return v^2 (v + 1)
	end if;
end function;

// Map the normal basis coefficients to those in polynomial
// Magma doesn't use normal bases
coeffMap4 := function(sigma, pi, F4, F16)
	// pi and sigma are in a normal basis representation
	// this function exists because Magma doesn't have support for operations on GF elements in normal bases
	// The mapping is defined as follows:
	// 0                (old pi) -> 0
	// 1                (old pi) -> sigma^2 
	// sigma^2          (old pi) -> sigma
	// sigma^2 + sigma  (old pi) -> 1
	c1 := F4 ! 0; // upper coefficient (c2 w^4 + c1 w) -> [c1, c2]
	c2 := F4 ! 0; // lower coefficient (c2 w^4 + c1 w) -> [c1, c2]
	// "here...";
	// Eltseq(sigma);
	// Eltseq(pi);
	// Eltseq(Eltseq(pi)[1]);
	// Eltseq(Eltseq(pi)[2]);
	case Eltseq(sigma):
		when [0, 1]: // sigma (v)
			case Eltseq(Eltseq(pi)[1]): // c1
				when [1,0]: 
					// "c1 v - 1";
					c1 := sigma;
				when [1,1]:
					// "c1 v - v + 1";
					// c1 := 1;
					// c1 := Seqelt([1], F4);
					c1 := F4 ! 1;
				when [0,1]:
					// "c1 v - v";
					c1 := sigma^2;
			end case;
			case Eltseq(Eltseq(pi)[2]): // c2
				when [1,0]:
					// "c2 v - 1";
					c2 := sigma;
				when [1,1]:
					// "c2 v - v + 1";
					// c2 := 1;
					// c2 := Seqelt([1], F4);
					c2 := F4 ! 1;
				when [0,1]:
					// "c2 v - v";
					c2 := sigma^2;
			end case;
		when [1,1]: // sigma^2 (v^2)
			case Eltseq(Eltseq(pi)[1]): // c1
				when [1,0]:
					// "c1 1 - 1";
					c1 := sigma^2;
				when [1,1]:
					// "c1 1 - v + 1";
					// c1 := 1;
					// c1 := Seqelt([1], F4);
					c1 := F4 ! 1;
				when [0,1]:
					// "c1 1 - v";
					c1 := sigma;
			end case;
			case Eltseq(Eltseq(pi)[2]): // c2
				when [1,0]:
					// "c2 1 - 1";
					c2 := sigma^2;
				when [1,1]:
					// "c2 1 - v + 1";
					// c2 := 1;
					// c2 := Seqelt([1], F4);
					c2 := F4 ! 1;
				when [0,1]:
					// "c2 1 - v";
					c2 := sigma;
			end case;
	end case;

	// if (Eltseq(pi)[1] eq 0) then
	// 	c1 := 0;
	// end if;
	// if Eltseq(pi)[2] eq 0 then
	// 	c2 := 0;
	// end if;

	// c1;
	// c2;
	// [c1, c2];

	return Seqelt([c1, c2], F16);
end function;

// Generate all tuples of basis elements (p, r, q, s)
allGen_8 := function(embed, field, S, AFFINE, C, CINV)
  F:=GF(2);
  pol2<V>:=PolynomialRing(F); // polynomial ring over F
  P:=V^2+V+1;                 // the only irreducible polynomial for GF(2^2)
  F4<v>:=ext<F | P>;          // create GF(2^2)/GF(2)

  // Embed GF(2^2) in GF(2^8)
  try 
    Embed(F4, field); 
  catch  e
    print("Embedding already done. No harm no foul.");
  end try;

  // Generate all roots of P
  pRoots:=[];
  for e in F4 do
    if Evaluate(P, e) eq 0 then
      if embed eq 0 then
        pRoots:=Append(pRoots,e);
      else
        pRoots:=Append(pRoots,field!e);
      end if;
    end if;
  end for;

  if pRoots[1] gt pRoots[2] then
  	tmp := pRoots[1];
  	pRoots[1] := pRoots[2];
  	pRoots[2] := tmp;
  end if;

  // Storage containers for the irreducible polynomials
  pIps:=Append([], P);
  qIps:=[];
  rIps:=[];
  sIps:=[];

  // Find all elements in GF(2^2) that make q(x) irreducible
  for sigma in F4 do
    pol4<W>:=PolynomialRing(F4);
    Q:=W^2 + W + sigma;
    if IsIrreducible(Q) and Q notin qIps then
      F16<w>:=ext<F4 | Q>;
      // qIps:=Append(qIps, Q);

      // Embed GF(2^4)/GF(2^2) in GF(2^8)
      try 
        Embed(F16, field); 
      catch  e
        print("Embedding already done. No harm no foul.");
      end try;

      // Find the roots of q(x) - GF(2^4)/GF(2^2)
      qRoots:=[];
      for e1 in F16 do
        if Evaluate(Q, e1) eq 0 then
          if embed eq 0 then
            qRoots:=Append(qRoots,e1);
          else
            qRoots:=Append(qRoots,field!e1);
          end if;
        end if;
      end for;

      if qRoots[1] gt qRoots[2] then
	  	tmp := qRoots[1];
	  	qRoots[1] := qRoots[2];
	  	qRoots[2] := tmp;
	  end if;

      // Find all elements in GF(2^4)/GF(2^2) that make r(y) irreducible
      for pi in F16 do
        pol8<X>:=PolynomialRing(F16);
        R:=X^2 + X + pi;

        if IsIrreducible(R) and R notin rIps then
          F256<x>:=ext<F16 | R>;
          // rIps:=Append(rIps, R);

          // Embed GF(2^8)/GF(2^4)/GF(2^2) in GF(2^8)
          try 
            Embed(F256, field); 
          catch  e
          	e;
            print("Embedding already done. No harm no foul.");
          end try;

          // Find the roots of r(y) - GF(2^8)/GF(2^4)/GF(2^2)
          rRoots:=[];
          for e2 in F256 do 
            if Evaluate(R, e2) eq 0 then
              if embed eq 0 then
                rRoots:=Append(rRoots,e2);
              else
                rRoots:=Append(rRoots,field!e2);
              end if;
            end if;
          end for;

           if rRoots[1] gt rRoots[2] then
		  	tmp := rRoots[1];
		  	rRoots[1] := rRoots[2];
		  	rRoots[2] := tmp;
		  end if;

          	// THIS WORKS - THANK THE WORLD!
          	// #pRoots;
          	// #qRoots;
          	// #rRoots;
          	// testBasisChange8(1, pRoots[1], 1, qRoots[1], 1, rRoots[1], F4, F16, F256, field);
          	// Eltseq(field!sigma);
          	// Eltseq(field!pi);

		  	vn := pRoots[2];
          	wn := qRoots[2];
          	xn := rRoots[2];

          	newPi := changePiRoot(vn, vn^2, 1, wn^4, F4, F16, pi);
          	newSigma := changeSigmaRoot(vn, vn^2, F4, sigma);
          	newSigma := coeffMap2(newSigma, F, F4); // new
          	newPi := coeffMap4(newSigma, newPi, F4, F16); // for sigma, so pi is represented in terms of sigma
          	// "";
          	// Eltseq(newSigma);
          	// Eltseq(newPi);
          	"mapped coeffs";
          	newPi;
          	newSigma;
          	S;
          	sigma;
          	pi;
          	"";
          	// if (newSigma eq v^2 and Eltseq(newPi) eq [0, newSigma^2]) then
          		"gen";
          		Generator(field);
          		PrimitiveElement(field);
          		testBasisChange8_2(v, w, x, 1, vn, 1, wn, 1, xn, F4, F16, F256, field);
          		// testBasisChange8(v, v^2, w, w^4, x, x^16, F4, F16, F256, field);
          		quit;
          	// end if;

			// // Display the number of gates for this combo...
          	// P, Q, R, S, sigma, pi, 1, pRoots[1], 1, qRoots[1], 1, rRoots[1];
			// invCount := gatesInv8(P, Q, R, sigma, pi, 1, pRoots[1], 1, qRoots[1], 1, rRoots[1]);
			// toss := totalGateCount8(invCount, v, w, x, 1, pRoots[1], 1, qRoots[1], 1, rRoots[1], F4, F16, F256, field, AFFINE, C, CINV);

			// P, Q, R, S, sigma, pi, 1, pRoots[1], 1, qRoots[1], 1, rRoots[2];
			// invCount := gatesInv8(P, Q, R, sigma, pi, 1, pRoots[1], 1, qRoots[1], 1, rRoots[2]);
			// toss := totalGateCount8(invCount, v, w, x, 1, pRoots[1], 1, qRoots[1], 1, rRoots[2], F4, F16, F256, field, AFFINE, C, CINV);

			// P, Q, R, S, sigma, pi, 1, pRoots[1], 1, qRoots[2], 1, rRoots[1];
			// invCount := gatesInv8(P, Q, R, sigma, pi, 1, pRoots[1], 1, qRoots[2], 1, rRoots[1]);
			// toss := totalGateCount8(invCount, v, w, x, 1, pRoots[1], 1, qRoots[2], 1, rRoots[1], F4, F16, F256, field, AFFINE, C, CINV);

			// P, Q, R, S, sigma, pi, 1, pRoots[1], 1, qRoots[2], 1, rRoots[2];
			// invCount := gatesInv8(P, Q, R, sigma, pi, 1, pRoots[1], 1, qRoots[2], 1, rRoots[2]);
			// toss := totalGateCount8(invCount, v, w, x, 1, pRoots[1], 1, qRoots[2], 1, rRoots[2], F4, F16, F256, field, AFFINE, C, CINV);

			// P, Q, R, S, sigma, pi, 1, pRoots[2], 1, qRoots[1], 1, rRoots[1];
			// invCount := gatesInv8(P, Q, R, sigma, pi, 1, pRoots[2], 1, qRoots[1], 1, rRoots[1]);
			// toss := totalGateCount8(invCount, v, w, x, 1, pRoots[2], 1, qRoots[1], 1, rRoots[1], F4, F16, F256, field, AFFINE, C, CINV);

			// P, Q, R, S, sigma, pi, 1, pRoots[2], 1, qRoots[1], 1, rRoots[2];
			// invCount := gatesInv8(P, Q, R, sigma, pi, 1, pRoots[2], 1, qRoots[1], 1, rRoots[2]);
			// toss := totalGateCount8(invCount, v, w, x, 1, pRoots[2], 1, qRoots[1], 1, rRoots[2], F4, F16, F256, field, AFFINE, C, CINV);

			// P, Q, R, S, sigma, pi, 1, pRoots[2], 1, qRoots[2], 1, rRoots[1];
			// invCount := gatesInv8(P, Q, R, sigma, pi, 1, pRoots[2], 1, qRoots[2], 1, rRoots[1]);
			// toss := totalGateCount8(invCount, v, w, x, 1, pRoots[2], 1, qRoots[2], 1, rRoots[1], F4, F16, F256, field, AFFINE, C, CINV);

			// P, Q, R, S, sigma, pi, 1, pRoots[2], 1, qRoots[2], 1, rRoots[2];
			// invCount := gatesInv8(P, Q, R, sigma, pi, 1, pRoots[2], 1, qRoots[2], 1, rRoots[2]);
			// toss := totalGateCount8(invCount, v, w, x, 1, pRoots[2], 1, qRoots[2], 1, rRoots[2], F4, F16, F256, field, AFFINE, C, CINV);

			// // USE COEFFICIENT MAPPING
			// newPi := changePiRoot(pRoots[1], pRoots[2], qRoots[1], qRoots[2], F4, F16, pi);
			// newSigma := changeSigmaRoot(pRoots[1], pRoots[2], F4, sigma);
			// newPi := coeffMap4(newSigma, newPi, F4, F16); // for sigma
			// P, Q, R, S, newSigma, newPi, pRoots[1], pRoots[2], qRoots[1], qRoots[2], 1, rRoots[1];
			// invCount := gatesInv8(P, Q, R, newSigma, newPi, pRoots[1], pRoots[2], qRoots[1], qRoots[2], 1, rRoots[1]);
			// toss := totalGateCount8(invCount, v, w, x, pRoots[1], pRoots[2], qRoots[1], qRoots[2], 1, rRoots[1], F4, F16, F256, field, AFFINE, C, CINV);

			// // USE COEFFICIENT MAPPING
			// newPi := changePiRoot(pRoots[1], pRoots[2], 1, qRoots[2], F4, F16, pi);
			// newSigma := changeSigmaRoot(pRoots[1], pRoots[2], F4, sigma);
			// newPi := coeffMap4(newSigma, newPi, F4, F16); // for sigma
			// P, Q, R, S, newSigma, newPi, pRoots[1], pRoots[2], 1, qRoots[2], 1, rRoots[1];
			// invCount := gatesInv8(P, Q, R, newSigma, newPi, pRoots[1], pRoots[2], 1, qRoots[2], 1, rRoots[1]);
			// toss := totalGateCount8(invCount, v, w, x, pRoots[1], pRoots[2], 1, qRoots[2], 1, rRoots[1], F4, F16, F256, field, AFFINE, C, CINV);

			// // USE COEFFICIENT MAPPING
			// newPi := changePiRoot(pRoots[1], pRoots[2], 1, qRoots[1], F4, F16, pi);
			// newSigma := changeSigmaRoot(pRoots[1], pRoots[2], F4, sigma);
			// newPi := coeffMap4(newSigma, newPi, F4, F16); // for sigma
			// P, Q, R, S, newSigma, newPi, pRoots[1], pRoots[2], 1, qRoots[1], 1, rRoots[1];
			// invCount := gatesInv8(P, Q, R, newSigma, newPi, pRoots[1], pRoots[2], 1, qRoots[1], 1, rRoots[1]);
			// toss := totalGateCount8(invCount, v, w, x, pRoots[1], pRoots[2], 1, qRoots[1], 1, rRoots[1], F4, F16, F256, field, AFFINE, C, CINV);

			// USE COEFFICIENT MAPPING
			newPi := changePiRoot(pRoots[1], pRoots[2], 1, qRoots[1], F4, F16, pi);
			newSigma := changeSigmaRoot(pRoots[1], pRoots[2], F4, sigma); 
			newSigma := coeffMap2(newSigma, F, F4); // new
			newPi := coeffMap4(newSigma, newPi, F4, F16); // for sigma, so pi is represented in terms of sigma
			P, Q, R, S; 
			sigma; 
			newSigma;
			pi; 
			newPi;
			PrimitiveElement(field);
			pRoots[1], pRoots[2], 1, qRoots[1], rRoots[1], rRoots[2];
			// invCount := gatesInv8(P, Q, R, newSigma, newPi, pRoots[1], pRoots[2], 1, qRoots[1], rRoots[1], rRoots[2]);
			invCount := canrightInv8(P, Q, newSigma, pRoots[1], pRoots[2], 1, qRoots[1], newPi);
			AFFINE; invCount; 
			toss := totalGateCount8(invCount, v, w, x, pRoots[1], pRoots[2], 1, qRoots[1], rRoots[1], rRoots[2], F4, F16, F256, field, AFFINE, C, CINV);

			// // USE COEFFICIENT MAPPING
			// newPi := changePiRoot(pRoots[1], pRoots[2], qRoots[1], qRoots[2], F4, F16, pi);
			// newSigma := changeSigmaRoot(pRoots[1], pRoots[2], F4, sigma);
			// newPi := coeffMap4(newSigma, newPi, F4, F16); // for sigma
			// P, Q, R, S, newSigma, newPi, pRoots[1], pRoots[2], qRoots[1], qRoots[2], 1, rRoots[2];
			// invCount := gatesInv8(P, Q, R, newSigma, newPi, pRoots[1], pRoots[2], qRoots[1], qRoots[2], 1, rRoots[2]);
			// toss := totalGateCount8(invCount, v, w, x, pRoots[1], pRoots[2], qRoots[1], qRoots[2], 1, rRoots[2], F4, F16, F256, field, AFFINE, C, CINV);

			// // USE COEFFICIENT MAPPING
			// newPi := changePiRoot(pRoots[1], pRoots[2], 1, qRoots[2], F4, F16, pi);
			// newSigma := changeSigmaRoot(pRoots[1], pRoots[2], F4, sigma);
			// newPi := coeffMap4(newSigma, newPi, F4, F16); // for sigma
			// P, Q, R, S, newSigma, newPi, pRoots[1], pRoots[2], 1, qRoots[2], 1, rRoots[2];
			// invCount := gatesInv8(P, Q, R, newSigma, newPi, pRoots[1], pRoots[2], 1, qRoots[2], 1, rRoots[2]);
			// toss := totalGateCount8(invCount, v, w, x, pRoots[1], pRoots[2], 1, qRoots[2], 1, rRoots[2], F4, F16, F256, field, AFFINE, C, CINV);

			// // USE COEFFICIENT MAPPING
			// newPi := changePiRoot(pRoots[1], pRoots[2], 1, qRoots[1], F4, F16, pi);
			// newSigma := changeSigmaRoot(pRoots[1], pRoots[2], F4, sigma);
			// newPi := coeffMap4(newSigma, newPi, F4, F16); // for sigma
			// P, Q, R, S, newSigma, newPi, pRoots[1], pRoots[2], 1, qRoots[1], 1, rRoots[2];
			// invCount := gatesInv8(P, Q, R, newSigma, newPi, pRoots[1], pRoots[2], 1, qRoots[1], 1, rRoots[2]);
			// toss := totalGateCount8(invCount, v, w, x, pRoots[1], pRoots[2], 1, qRoots[1], 1, rRoots[2], F4, F16, F256, field, AFFINE, C, CINV);

			// USE COEFFICIENT MAPPING
			newPi := changePiRoot(pRoots[1], pRoots[2], 1, qRoots[2], F4, F16, pi);
			newSigma := changeSigmaRoot(pRoots[1], pRoots[2], F4, sigma);
			newSigma := coeffMap2(newSigma, F, F4); // new
			newPi := coeffMap4(newSigma, newPi, F4, F16); // for sigma
			P, Q, R, S; 
			sigma; 
			newSigma;
			pi; 
			newPi;
			PrimitiveElement(field);
			pRoots[1], pRoots[2], 1, qRoots[2], rRoots[1], rRoots[2];
			// invCount := gatesInv8(P, Q, R, newSigma, newPi, pRoots[1], pRoots[2], 1, qRoots[2], rRoots[1], rRoots[2]);
			invCount := canrightInv8(P, Q, newSigma, pRoots[1], pRoots[2], 1, qRoots[2], newPi);
			AFFINE; invCount; 
			toss := totalGateCount8(invCount, v, w, x, pRoots[1], pRoots[2], 1, qRoots[2], rRoots[1], rRoots[2], F4, F16, F256, field, AFFINE, C, CINV);

			// USE COEFFICIENT MAPPING
			newPi := changePiRoot(pRoots[1], pRoots[2], qRoots[1], qRoots[2], F4, F16, pi);
			newSigma := changeSigmaRoot(pRoots[1], pRoots[2], F4, sigma);
			newSigma := coeffMap2(newSigma, F, F4); // new
			newPi := coeffMap4(newSigma, newPi, F4, F16); // for sigma
			// newPi := changePiRoot(1, pRoots[2], qRoots[1], qRoots[2], F4, F16, pi);
			// newRr := changeLambdaRoot(pRoots[1], pRoots[2], qRoots[1], qRoots[2], rRoots[1], rRoots[2], F4, F16, F256, rRoots[1]);
			// newQr := changePiRoot(pRoots[1], pRoots[2], qRoots[1], qRoots[2], F4, F16, qRoots[1]); // pi in GF((2^2)^2)
			// newPr := changeSigmaRoot(pRoots[1], pRoots[2], F4, pRoots[1]); // sigma in GF(2^2)
			// field!newPr, field!newQr, field!newRr;
			// field!pRoots[1], field!qRoots[1], field!rRoots[1];
			// field!pRoots[2], field!qRoots[2], field!rRoots[2];
			P, Q, R, S; 
			sigma; 
			newSigma;
			pi; 
			newPi;
			PrimitiveElement(field);
			pRoots[1], pRoots[2], qRoots[1], qRoots[2], rRoots[1], rRoots[2];
			// invCount := gatesInv8(P, Q, R, newSigma, newPi, pRoots[1], pRoots[2], qRoots[1], qRoots[2], rRoots[1], rRoots[2]);
			invCount := canrightInv8(P, Q, newSigma, pRoots[1], pRoots[2], qRoots[1], qRoots[2], newPi);
			AFFINE; invCount; 
			toss := totalGateCount8(invCount, v, w, x, pRoots[1], pRoots[2], qRoots[1], qRoots[2], rRoots[1], rRoots[2], F4, F16, F256, field, AFFINE, C, CINV);

			// newPi := changePiRoot(1, pRoots[1], qRoots[1], qRoots[2], F4, F16, pi);
			// P, Q, R, S, sigma, newPi, 1, pRoots[1], qRoots[1], qRoots[2], 1, rRoots[2];
			// invCount := gatesInv8(P, Q, R, sigma, newPi, 1, pRoots[1], qRoots[1], qRoots[2], 1, rRoots[2]);
			// toss := totalGateCount8(invCount, v, w, x, 1, pRoots[1], qRoots[1], qRoots[2], 1, rRoots[2], F4, F16, F256, field, AFFINE, C, CINV);

			// newPi := changePiRoot(1, pRoots[2], qRoots[1], qRoots[2], F4, F16, pi);
			// P, Q, R, S, sigma, newPi, 1, pRoots[2], qRoots[1], qRoots[2], 1, rRoots[2];
			// invCount := gatesInv8(P, Q, R, sigma, newPi, 1, pRoots[2], qRoots[1], qRoots[2], 1, rRoots[2]);
			// toss := totalGateCount8(invCount, v, w, x, 1, pRoots[2], qRoots[1], qRoots[2], 1, rRoots[2], F4, F16, F256, field, AFFINE, C, CINV);

			// newPi := changePiRoot(1, pRoots[1], qRoots[1], qRoots[2], F4, F16, pi);
			// P, Q, R, S, sigma, newPi, 1, pRoots[1], qRoots[1], qRoots[2], 1, rRoots[1];
			// invCount := gatesInv8(P, Q, R, sigma, newPi, 1, pRoots[1], qRoots[1], qRoots[2], 1, rRoots[1]);
			// toss := totalGateCount8(invCount, v, w, x, 1, pRoots[1], qRoots[1], qRoots[2], 1, rRoots[1], F4, F16, F256, field, AFFINE, C, CINV);

			// newPi := changePiRoot(1, pRoots[2], qRoots[1], qRoots[2], F4, F16, pi);
			// P, Q, R, S, sigma, newPi, 1, pRoots[2], qRoots[1], qRoots[2], 1, rRoots[1];
			// invCount := gatesInv8(P, Q, R, sigma, newPi, 1, pRoots[2], qRoots[1], qRoots[2], 1, rRoots[1]);
			// toss := totalGateCount8(invCount, v, w, x, 1, pRoots[2], qRoots[1], qRoots[2], 1, rRoots[1], F4, F16, F256, field, AFFINE, C, CINV);

			newPi := changePiRoot(1, pRoots[1], qRoots[1], qRoots[2], F4, F16, pi);
			newSigma := changeSigmaRoot(1, pRoots[1], F4, sigma); 
			P, Q, R, S; 
			sigma; 
			newSigma;
			pi; 
			newPi;
			PrimitiveElement(field);
			1, pRoots[1], qRoots[1], qRoots[2], rRoots[1], rRoots[2];
			// invCount := gatesInv8(P, Q, R, sigma, newPi, 1, pRoots[1], qRoots[1], qRoots[2], rRoots[1], rRoots[2]);
			invCount := canrightInv8(P, Q, newSigma, 1, pRoots[1], qRoots[1], qRoots[2], newPi);
			AFFINE; invCount; 
			toss := totalGateCount8(invCount, v, w, x, 1, pRoots[1], qRoots[1], qRoots[2], rRoots[1], rRoots[2], F4, F16, F256, field, AFFINE, C, CINV);



			newSigma := changeSigmaRoot(1, pRoots[2], F4, sigma); 
			newPi := changePiRoot(1, pRoots[2], qRoots[1], qRoots[2], F4, F16, pi);
			P, Q, R, S; 
			sigma; 
			newSigma;
			pi; 
			newPi;
			PrimitiveElement(field);
			1, pRoots[2], qRoots[1], qRoots[2], rRoots[1], rRoots[2];
			// invCount := gatesInv8(P, Q, R, sigma, newPi, 1, pRoots[2], qRoots[1], qRoots[2], rRoots[1], rRoots[2]);
			invCount := canrightInv8(P, Q, newSigma, 1, pRoots[2], qRoots[1], qRoots[2], newPi);
			AFFINE; invCount; 
			toss := totalGateCount8(invCount, v, w, x, 1, pRoots[2], qRoots[1], qRoots[2], rRoots[1], rRoots[2], F4, F16, F256, field, AFFINE, C, CINV);



			newSigma := changeSigmaRoot(1, pRoots[1], F4, sigma); 
			newPi := changePiRoot(1, pRoots[1], 1, qRoots[1], F4, F16, pi);
			P, Q, R, S; 
			sigma; 
			newSigma;
			pi; 
			newPi;
			PrimitiveElement(field);
			1, pRoots[1], 1, qRoots[1], rRoots[1], rRoots[2];
			// invCount := gatesInv8(P, Q, R, sigma, pi, 1, pRoots[1], 1, qRoots[1], rRoots[1], rRoots[2]);
			invCount := canrightInv8(P, Q, newSigma, 1, pRoots[1], 1, qRoots[1], newPi);
			AFFINE; invCount; 
			toss := totalGateCount8(invCount, v, w, x, 1, pRoots[1], 1, qRoots[1], rRoots[1], rRoots[2], F4, F16, F256, field, AFFINE, C, CINV);


			newSigma := changeSigmaRoot(1, pRoots[2], F4, sigma); 
			newPi := changePiRoot(1, pRoots[2], 1, qRoots[1], F4, F16, pi);
			P, Q, R, S; 
			sigma; 
			newSigma;
			pi; 
			newPi;
			PrimitiveElement(field);
			1, pRoots[2], 1, qRoots[1], rRoots[1], rRoots[2];
			// invCount := gatesInv8(P, Q, R, sigma, pi, 1, pRoots[2], 1, qRoots[1], rRoots[1], rRoots[2]);
			invCount := canrightInv8(P, Q, newSigma, 1, pRoots[2], 1, qRoots[1], newPi);
			AFFINE; invCount; 
			toss := totalGateCount8(invCount, v, w, x, 1, pRoots[2], 1, qRoots[1], rRoots[1], rRoots[2], F4, F16, F256, field, AFFINE, C, CINV);


			newSigma := changeSigmaRoot(1, pRoots[1], F4, sigma); 
			newPi := changePiRoot(1, pRoots[1], 1, qRoots[2], F4, F16, pi);
			P, Q, R, S; 
			sigma; 
			newSigma;
			pi; 
			newPi;
			PrimitiveElement(field);
			1, pRoots[1], 1, qRoots[2], rRoots[1], rRoots[2];
			// invCount := gatesInv8(P, Q, R, sigma, pi, 1, pRoots[1], 1, qRoots[2], rRoots[1], rRoots[2]);
			invCount := canrightInv8(P, Q, newSigma, 1, pRoots[1], 1, qRoots[2], newPi);
			AFFINE; invCount; 
			toss := totalGateCount8(invCount, v, w, x, 1, pRoots[1], 1, qRoots[2], rRoots[1], rRoots[2], F4, F16, F256, field, AFFINE, C, CINV);

			newSigma := changeSigmaRoot(1, pRoots[2], F4, sigma); 
			newPi := changePiRoot(1, pRoots[2], 1, qRoots[2], F4, F16, pi);
			P, Q, R, S; 
			sigma; 
			newSigma;
			pi; 
			newPi;
			PrimitiveElement(field);
			1, pRoots[2], 1, qRoots[2], rRoots[1], rRoots[2];
			// invCount := gatesInv8(P, Q, R, sigma, pi, 1, pRoots[2], 1, qRoots[2], rRoots[1], rRoots[2]);
			invCount := canrightInv8(P, Q, newSigma, 1, pRoots[2], 1, qRoots[2], newPi);
			AFFINE; invCount; 
			toss := totalGateCount8(invCount, v, w, x, 1, pRoots[2], 1, qRoots[2], rRoots[1], rRoots[2], F4, F16, F256, field, AFFINE, C, CINV);
        end if;
      end for;
    end if;
  end for;
  return [* pIps, qIps, rIps *];
end function;

allGen_16 := function(embed, field, T, AFFINE, C, CINV) //, AFFINE, C, CINV)
	F:=GF(2);
	pol2<V>:=PolynomialRing(F); // polynomial ring over F
	P:=V^2+V+1;                 // the only irreducible polynomial for GF(2^2)
	F4<v>:=ext<F | P>;          // create GF(2^2)/GF(2)

	// Embed GF(2^2) in GF(2^8)
	try 
		Embed(F4, field); 
	catch  e
		print("Embedding already done. No harm no foul.");
	end try;

	// Generate all roots of P
	pRoots:=[];
	for e in F4 do
		if Evaluate(P, e) eq 0 then
			if embed eq 0 then
				pRoots:=Append(pRoots,e);
			else
				pRoots:=Append(pRoots,field!e);
			end if;
		end if;
	end for;

	// Storage containers for the irreducible polynomials
	pIps:=Append([], P);
	qIps:=[];
	rIps:=[];
	sIps:=[];

	// Find all elements in GF(2^2) that make q(x) irreducible
	for sigma in F4 do
		pol4<W>:=PolynomialRing(F4);
		Q:=W^2 + W + sigma;
		if IsIrreducible(Q) and Q notin qIps then
			F16<w>:=ext<F4 | Q>;
			// qIps:=Append(qIps, Q);

			// Embed GF(2^4)/GF(2^2) in GF(2^8)
			try 
				Embed(F16, field); 
			catch  e
				print("Embedding already done. No harm no foul.");
			end try;

			// Find the roots of q(x) - GF(2^4)/GF(2^2)
			qRoots:=[];
			for e1 in F16 do
				if Evaluate(Q, e1) eq 0 then
					if embed eq 0 then
						qRoots:=Append(qRoots,e1);
					else
						qRoots:=Append(qRoots,field!e1);
					end if;
				end if;
			end for;

			// Find all elements in GF(2^4)/GF(2^2) that make r(y) irreducible
			for pi in F16 do
				pol8<X>:=PolynomialRing(F16);
				R:=X^2 + X + pi;

				if IsIrreducible(R) and R notin rIps then
					F256<x>:=ext<F16 | R>;
					// rIps:=Append(rIps, R);

					// Embed GF(2^8)/GF(2^4)/GF(2^2) in GF(2^8)
					try 
						Embed(F256, field); 
					catch  e
						print("Embedding already done. No harm no foul.");
					end try;

					// Find the roots of r(y) - GF(2^8)/GF(2^4)/GF(2^2)
					rRoots:=[];
					for e2 in F256 do 
						if Evaluate(R, e2) eq 0 then
							if embed eq 0 then
								rRoots:=Append(rRoots,e2);
							else
								rRoots:=Append(rRoots,field!e2);
							end if;
						end if;
					end for;

					for lambda in F256 do
						pol16<Y> := PolynomialRing(F256);
						S := Y^2 + Y + lambda;

						if IsIrreducible(S) and S notin sIps then
							F6K<y> := ext<F256 | S>;
							// sIps:=Append(sIps, S);

							try
								// F6K;
								// field;
								Embed(F6K, field);
							catch e
								print e;
								print("Embedding already done. No harm no foul.");
							end try;

							try
								sRoots := [];
								for e3 in F6K do 
									if Evaluate(S, e3) eq 0 then
										if embed eq 0 then
											sRoots:=Append(sRoots,e3);
										else
											sRoots:=Append(sRoots,field!e3);
										end if;
									end if;
								end for;
							catch e
								e;
							end try;

							// BASIS CHANGE PASSES!
							// test...
							// (invCount, pr1, pr2, qr1, qr2, rr1, rr2, sr1, sr2, F4, F16, F256, F6K, field, AFFINE, C, CINV)
							// totalGateCount16(10, pRoots[1], pRoots[2], qRoots[1], qRoots[2], rRoots[1], rRoots[2], sRoots[1], sRoots[2], F4, F16, F256, F6K, field, RandomMatrix(GF(2),16,16), v, v);

							// newPi := changePiRoot(pRoots[1],pRoots[2],qRoots[1],qRoots[2], F4, F16, pi);
							// newSigma := changeSigmaRoot(pRoots[1],pRoots[2], F4, sigma);
							// newSigma := coeffMap2(newSigma, F, F4); // new
							// newPi := coeffMap4(newSigma, newPi, F4, F16); // for sigma
							// newLambda := changeLambdaRoot(pRoots[1], pRoots[2], qRoots[1], qRoots[2], rRoots[1], rRoots[2], F4, F16, F256, lambda);
							// P, Q, R, S, T; 
							// sigma; 
							// newSigma;
							// pi; 
							// newPi;
							// lambda;
							// newLambda;
							// testBasisChange16(v, w, x, y, pRoots[1], pRoots[2], qRoots[1], qRoots[2], rRoots[1], rRoots[2], sRoots[1], sRoots[2], F4, F16, F256, F6K, field);
							// quit;

							// //// EXAMPLE
							// // // USE COEFFICIENT MAPPING
							// // newPi := changePiRoot(pRoots[1], pRoots[2], 1, qRoots[2], F4, F16, pi);
							// // newSigma := changeSigmaRoot(pRoots[1], pRoots[2], F4, sigma);
							// // newSigma := coeffMap2(newSigma, F, F4); // new
							// // newPi := coeffMap4(newSigma, newPi, F4, F16); // for sigma
							// // P, Q, R, S; 
							// // sigma; 
							// // newSigma;
							// // pi; 
							// // newPi;
							// // PrimitiveElement(field);
							// // pRoots[1], pRoots[2], 1, qRoots[2], rRoots[1], rRoots[2];
							// // invCount := gatesInv8(P, Q, R, newSigma, newPi, pRoots[1], pRoots[2], 1, qRoots[2], rRoots[1], rRoots[2]);
							// // invCount := canrightInv8(P, Q, newSigma, pRoots[1], pRoots[2], 1, qRoots[2], newPi);
							// // AFFINE; invCount; 
							// // toss := totalGateCount8(invCount, v, w, x, pRoots[1], pRoots[2], 1, qRoots[2], rRoots[1], rRoots[2], F4, F16, F256, field, AFFINE, C, CINV);
							// //// END EXAMPLE

							newPi := changePiRoot(1,pRoots[1],1,qRoots[1], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[1], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[1],1,qRoots[1],1,rRoots[1],1,sRoots[1];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[1],1,qRoots[1],1,rRoots[1],1,sRoots[1]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[1],1,qRoots[1],1,rRoots[1],1,sRoots[1], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[2],1,qRoots[1], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[2], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[2],1,qRoots[1],1,rRoots[1],1,sRoots[1];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[2],1,qRoots[1],1,rRoots[1],1,sRoots[1]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[2],1,qRoots[1],1,rRoots[1],1,sRoots[1], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[1],1,qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[1], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[1],1,qRoots[2],1,rRoots[1],1,sRoots[1];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[1],1,qRoots[2],1,rRoots[1],1,sRoots[1]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[1],1,qRoots[2],1,rRoots[1],1,sRoots[1], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[2],1,qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[2], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[2],1,qRoots[2],1,rRoots[1],1,sRoots[1];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[2],1,qRoots[2],1,rRoots[1],1,sRoots[1]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[2],1,qRoots[2],1,rRoots[1],1,sRoots[1], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[1],qRoots[1],qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[1], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[1],qRoots[1],qRoots[2],1,rRoots[1],1,sRoots[1];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[1],qRoots[1],qRoots[2],1,rRoots[1],1,sRoots[1]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[1],qRoots[1],qRoots[2],1,rRoots[1],1,sRoots[1], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[2],qRoots[1],qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[2], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[2],qRoots[1],qRoots[2],1,rRoots[1],1,sRoots[1];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[2],qRoots[1],qRoots[2],1,rRoots[1],1,sRoots[1]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[2],qRoots[1],qRoots[2],1,rRoots[1],1,sRoots[1], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[1],1,qRoots[1], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[1], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[1],1,qRoots[1],1,rRoots[2],1,sRoots[1];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[1],1,qRoots[1],1,rRoots[2],1,sRoots[1]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[1],1,qRoots[1],1,rRoots[2],1,sRoots[1], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[2],1,qRoots[1], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[2], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[2],1,qRoots[1],1,rRoots[2],1,sRoots[1];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[2],1,qRoots[1],1,rRoots[2],1,sRoots[1]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[2],1,qRoots[1],1,rRoots[2],1,sRoots[1], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[1],1,qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[1], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[1],1,qRoots[2],1,rRoots[2],1,sRoots[1];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[1],1,qRoots[2],1,rRoots[2],1,sRoots[1]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[1],1,qRoots[2],1,rRoots[2],1,sRoots[1], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[2],1,qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[2], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[2],1,qRoots[2],1,rRoots[2],1,sRoots[1];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[2],1,qRoots[2],1,rRoots[2],1,sRoots[1]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[2],1,qRoots[2],1,rRoots[2],1,sRoots[1], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[1],qRoots[1],qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[1], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[1],qRoots[1],qRoots[2],1,rRoots[2],1,sRoots[1];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[1],qRoots[1],qRoots[2],1,rRoots[2],1,sRoots[1]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[1],qRoots[1],qRoots[2],1,rRoots[2],1,sRoots[1], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[2],qRoots[1],qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[2], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[2],qRoots[1],qRoots[2],1,rRoots[2],1,sRoots[1];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[2],qRoots[1],qRoots[2],1,rRoots[2],1,sRoots[1]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[2],qRoots[1],qRoots[2],1,rRoots[2],1,sRoots[1], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[1],1,qRoots[1], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[1], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[1],1,qRoots[1],rRoots[1],rRoots[2],1,sRoots[1];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[1],1,qRoots[1],rRoots[1],rRoots[2],1,sRoots[1]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[1],1,qRoots[1],rRoots[1],rRoots[2],1,sRoots[1], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[2],1,qRoots[1], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[2], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[2],1,qRoots[1],rRoots[1],rRoots[2],1,sRoots[1];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[2],1,qRoots[1],rRoots[1],rRoots[2],1,sRoots[1]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[2],1,qRoots[1],rRoots[1],rRoots[2],1,sRoots[1], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[1],1,qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[1], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[1],1,qRoots[2],rRoots[1],rRoots[2],1,sRoots[1];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[1],1,qRoots[2],rRoots[1],rRoots[2],1,sRoots[1]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[1],1,qRoots[2],rRoots[1],rRoots[2],1,sRoots[1], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[2],1,qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[2], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[2],1,qRoots[2],rRoots[1],rRoots[2],1,sRoots[1];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[2],1,qRoots[2],rRoots[1],rRoots[2],1,sRoots[1]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[2],1,qRoots[2],rRoots[1],rRoots[2],1,sRoots[1], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[1],qRoots[1],qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[1], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[1],qRoots[1],qRoots[2],rRoots[1],rRoots[2],1,sRoots[1];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[1],qRoots[1],qRoots[2],rRoots[1],rRoots[2],1,sRoots[1]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[1],qRoots[1],qRoots[2],rRoots[1],rRoots[2],1,sRoots[1], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[2],qRoots[1],qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[2], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[2],qRoots[1],qRoots[2],rRoots[1],rRoots[2],1,sRoots[1];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[2],qRoots[1],qRoots[2],rRoots[1],rRoots[2],1,sRoots[1]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[2],qRoots[1],qRoots[2],rRoots[1],rRoots[2],1,sRoots[1], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[1],1,qRoots[1], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[1], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[1],1,qRoots[1],1,rRoots[1],1,sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[1],1,qRoots[1],1,rRoots[1],1,sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[1],1,qRoots[1],1,rRoots[1],1,sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[2],1,qRoots[1], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[2], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[2],1,qRoots[1],1,rRoots[1],1,sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[2],1,qRoots[1],1,rRoots[1],1,sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[2],1,qRoots[1],1,rRoots[1],1,sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[1],1,qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[1], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[1],1,qRoots[2],1,rRoots[1],1,sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[1],1,qRoots[2],1,rRoots[1],1,sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[1],1,qRoots[2],1,rRoots[1],1,sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[2],1,qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[2], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[2],1,qRoots[2],1,rRoots[1],1,sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[2],1,qRoots[2],1,rRoots[1],1,sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[2],1,qRoots[2],1,rRoots[1],1,sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[1],qRoots[1],qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[1], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[1],qRoots[1],qRoots[2],1,rRoots[1],1,sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[1],qRoots[1],qRoots[2],1,rRoots[1],1,sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[1],qRoots[1],qRoots[2],1,rRoots[1],1,sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[2],qRoots[1],qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[2], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[2],qRoots[1],qRoots[2],1,rRoots[1],1,sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[2],qRoots[1],qRoots[2],1,rRoots[1],1,sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[2],qRoots[1],qRoots[2],1,rRoots[1],1,sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[1],1,qRoots[1], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[1], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[1],1,qRoots[1],1,rRoots[2],1,sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[1],1,qRoots[1],1,rRoots[2],1,sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[1],1,qRoots[1],1,rRoots[2],1,sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[2],1,qRoots[1], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[2], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[2],1,qRoots[1],1,rRoots[2],1,sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[2],1,qRoots[1],1,rRoots[2],1,sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[2],1,qRoots[1],1,rRoots[2],1,sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[1],1,qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[1], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[1],1,qRoots[2],1,rRoots[2],1,sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[1],1,qRoots[2],1,rRoots[2],1,sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[1],1,qRoots[2],1,rRoots[2],1,sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[2],1,qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[2], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[2],1,qRoots[2],1,rRoots[2],1,sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[2],1,qRoots[2],1,rRoots[2],1,sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[2],1,qRoots[2],1,rRoots[2],1,sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[1],qRoots[1],qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[1], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[1],qRoots[1],qRoots[2],1,rRoots[2],1,sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[1],qRoots[1],qRoots[2],1,rRoots[2],1,sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[1],qRoots[1],qRoots[2],1,rRoots[2],1,sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[2],qRoots[1],qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[2], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[2],qRoots[1],qRoots[2],1,rRoots[2],1,sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[2],qRoots[1],qRoots[2],1,rRoots[2],1,sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[2],qRoots[1],qRoots[2],1,rRoots[2],1,sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[1],1,qRoots[1], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[1], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[1],1,qRoots[1],rRoots[1],rRoots[2],1,sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[1],1,qRoots[1],rRoots[1],rRoots[2],1,sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[1],1,qRoots[1],rRoots[1],rRoots[2],1,sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[2],1,qRoots[1], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[2], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[2],1,qRoots[1],rRoots[1],rRoots[2],1,sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[2],1,qRoots[1],rRoots[1],rRoots[2],1,sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[2],1,qRoots[1],rRoots[1],rRoots[2],1,sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[1],1,qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[1], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[1],1,qRoots[2],rRoots[1],rRoots[2],1,sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[1],1,qRoots[2],rRoots[1],rRoots[2],1,sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[1],1,qRoots[2],rRoots[1],rRoots[2],1,sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[2],1,qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[2], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[2],1,qRoots[2],rRoots[1],rRoots[2],1,sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[2],1,qRoots[2],rRoots[1],rRoots[2],1,sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[2],1,qRoots[2],rRoots[1],rRoots[2],1,sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[1],qRoots[1],qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[1], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[1],qRoots[1],qRoots[2],rRoots[1],rRoots[2],1,sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[1],qRoots[1],qRoots[2],rRoots[1],rRoots[2],1,sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[1],qRoots[1],qRoots[2],rRoots[1],rRoots[2],1,sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[2],qRoots[1],qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[2], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[2],qRoots[1],qRoots[2],rRoots[1],rRoots[2],1,sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[2],qRoots[1],qRoots[2],rRoots[1],rRoots[2],1,sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[2],qRoots[1],qRoots[2],rRoots[1],rRoots[2],1,sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[1],1,qRoots[1], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[1], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[1],1,qRoots[1],1,rRoots[1],sRoots[1],sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[1],1,qRoots[1],1,rRoots[1],sRoots[1],sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[1],1,qRoots[1],1,rRoots[1],sRoots[1],sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[2],1,qRoots[1], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[2], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[2],1,qRoots[1],1,rRoots[1],sRoots[1],sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[2],1,qRoots[1],1,rRoots[1],sRoots[1],sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[2],1,qRoots[1],1,rRoots[1],sRoots[1],sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[1],1,qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[1], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[1],1,qRoots[2],1,rRoots[1],sRoots[1],sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[1],1,qRoots[2],1,rRoots[1],sRoots[1],sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[1],1,qRoots[2],1,rRoots[1],sRoots[1],sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[2],1,qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[2], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[2],1,qRoots[2],1,rRoots[1],sRoots[1],sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[2],1,qRoots[2],1,rRoots[1],sRoots[1],sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[2],1,qRoots[2],1,rRoots[1],sRoots[1],sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[1],qRoots[1],qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[1], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[1],qRoots[1],qRoots[2],1,rRoots[1],sRoots[1],sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[1],qRoots[1],qRoots[2],1,rRoots[1],sRoots[1],sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[1],qRoots[1],qRoots[2],1,rRoots[1],sRoots[1],sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[2],qRoots[1],qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[2], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[2],qRoots[1],qRoots[2],1,rRoots[1],sRoots[1],sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[2],qRoots[1],qRoots[2],1,rRoots[1],sRoots[1],sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[2],qRoots[1],qRoots[2],1,rRoots[1],sRoots[1],sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[1],1,qRoots[1], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[1], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[1],1,qRoots[1],1,rRoots[2],sRoots[1],sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[1],1,qRoots[1],1,rRoots[2],sRoots[1],sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[1],1,qRoots[1],1,rRoots[2],sRoots[1],sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[2],1,qRoots[1], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[2], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[2],1,qRoots[1],1,rRoots[2],sRoots[1],sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[2],1,qRoots[1],1,rRoots[2],sRoots[1],sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[2],1,qRoots[1],1,rRoots[2],sRoots[1],sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[1],1,qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[1], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[1],1,qRoots[2],1,rRoots[2],sRoots[1],sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[1],1,qRoots[2],1,rRoots[2],sRoots[1],sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[1],1,qRoots[2],1,rRoots[2],sRoots[1],sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[2],1,qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[2], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[2],1,qRoots[2],1,rRoots[2],sRoots[1],sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[2],1,qRoots[2],1,rRoots[2],sRoots[1],sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[2],1,qRoots[2],1,rRoots[2],sRoots[1],sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[1],qRoots[1],qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[1], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[1],qRoots[1],qRoots[2],1,rRoots[2],sRoots[1],sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[1],qRoots[1],qRoots[2],1,rRoots[2],sRoots[1],sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[1],qRoots[1],qRoots[2],1,rRoots[2],sRoots[1],sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[2],qRoots[1],qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[2], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);1,pRoots[2],qRoots[1],qRoots[2],1,rRoots[2],sRoots[1],sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[2],qRoots[1],qRoots[2],1,rRoots[2],sRoots[1],sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[2],qRoots[1],qRoots[2],1,rRoots[2],sRoots[1],sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[1],1,qRoots[1], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[1], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[1],1,qRoots[1],rRoots[1],rRoots[2],sRoots[1],sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[1],1,qRoots[1],rRoots[1],rRoots[2],sRoots[1],sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[1],1,qRoots[1],rRoots[1],rRoots[2],sRoots[1],sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[2],1,qRoots[1], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[2], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[2],1,qRoots[1],rRoots[1],rRoots[2],sRoots[1],sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[2],1,qRoots[1],rRoots[1],rRoots[2],sRoots[1],sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, 1,pRoots[2],1,qRoots[1],rRoots[1],rRoots[2],sRoots[1],sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[1],1,qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[1], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[1],1,qRoots[2],rRoots[1],rRoots[2],sRoots[1],sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[1],1,qRoots[2],rRoots[1],rRoots[2],sRoots[1],sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y,1,pRoots[1],1,qRoots[2],rRoots[1],rRoots[2],sRoots[1],sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[2],1,qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[2], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[2],1,qRoots[2],rRoots[1],rRoots[2],sRoots[1],sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[2],1,qRoots[2],rRoots[1],rRoots[2],sRoots[1],sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y,1,pRoots[2],1,qRoots[2],rRoots[1],rRoots[2],sRoots[1],sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[1],qRoots[1],qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[1], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[1],qRoots[1],qRoots[2],rRoots[1],rRoots[2],sRoots[1],sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[1],qRoots[1],qRoots[2],rRoots[1],rRoots[2],sRoots[1],sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y,1,pRoots[1],qRoots[1],qRoots[2],rRoots[1],rRoots[2],sRoots[1],sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(1,pRoots[2],qRoots[1],qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(1,pRoots[2], F4, sigma);
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							1,pRoots[2],qRoots[1],qRoots[2],rRoots[1],rRoots[2],sRoots[1],sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, 1,pRoots[2],qRoots[1],qRoots[2],rRoots[1],rRoots[2],sRoots[1],sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y,1,pRoots[2],qRoots[1],qRoots[2],rRoots[1],rRoots[2],sRoots[1],sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							////////////////////////////////////////////////////////////////
							//////// coeff mapping needed below this line
							////////////////////////////////////////////////////////////////

							newPi := changePiRoot(pRoots[1],pRoots[2],qRoots[1],qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(pRoots[1],pRoots[2], F4, sigma);
							newSigma := coeffMap2(newSigma, F, F4); // new
							newPi := coeffMap4(newSigma, newPi, F4, F16); // for sigma
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							pRoots[1],pRoots[2],qRoots[1],qRoots[2],rRoots[1],rRoots[2],sRoots[1],sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, pRoots[1],pRoots[2],qRoots[1],qRoots[2],rRoots[1],rRoots[2],sRoots[1],sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, pRoots[1],pRoots[2],qRoots[1],qRoots[2],rRoots[1],rRoots[2],sRoots[1],sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(pRoots[1],pRoots[2],1,qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(pRoots[1],pRoots[2], F4, sigma);
							newSigma := coeffMap2(newSigma, F, F4); // new
							newPi := coeffMap4(newSigma, newPi, F4, F16); // for sigma
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							pRoots[1],pRoots[2],1,qRoots[2],rRoots[1],rRoots[2],sRoots[1],sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, pRoots[1],pRoots[2],1,qRoots[2],rRoots[1],rRoots[2],sRoots[1],sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, pRoots[1],pRoots[2],1,qRoots[2],rRoots[1],rRoots[2],sRoots[1],sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(pRoots[1],pRoots[2],1,qRoots[1], F4, F16, pi);
							newSigma := changeSigmaRoot(pRoots[1],pRoots[2], F4, sigma);
							newSigma := coeffMap2(newSigma, F, F4); // new
							newPi := coeffMap4(newSigma, newPi, F4, F16); // for sigma
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							pRoots[1],pRoots[2],1,qRoots[1],rRoots[1],rRoots[2],sRoots[1],sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, pRoots[1],pRoots[2],1,qRoots[1],rRoots[1],rRoots[2],sRoots[1],sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, pRoots[1],pRoots[2],1,qRoots[1],rRoots[1],rRoots[2],sRoots[1],sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(pRoots[1],pRoots[2],qRoots[1],qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(pRoots[1],pRoots[2], F4, sigma);
							newSigma := coeffMap2(newSigma, F, F4); // new
							newPi := coeffMap4(newSigma, newPi, F4, F16); // for sigma
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							pRoots[1],pRoots[2],qRoots[1],qRoots[2],1,rRoots[2],sRoots[1],sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, pRoots[1],pRoots[2],qRoots[1],qRoots[2],1,rRoots[2],sRoots[1],sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, pRoots[1],pRoots[2],qRoots[1],qRoots[2],1,rRoots[2],sRoots[1],sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(pRoots[1],pRoots[2],1,qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(pRoots[1],pRoots[2], F4, sigma);
							newSigma := coeffMap2(newSigma, F, F4); // new
							newPi := coeffMap4(newSigma, newPi, F4, F16); // for sigma
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							pRoots[1],pRoots[2],1,qRoots[2],1,rRoots[2],sRoots[1],sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, pRoots[1],pRoots[2],1,qRoots[2],1,rRoots[2],sRoots[1],sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, pRoots[1],pRoots[2],1,qRoots[2],1,rRoots[2],sRoots[1],sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(pRoots[1],pRoots[2],1,qRoots[1], F4, F16, pi);
							newSigma := changeSigmaRoot(pRoots[1],pRoots[2], F4, sigma);
							newSigma := coeffMap2(newSigma, F, F4); // new
							newPi := coeffMap4(newSigma, newPi, F4, F16); // for sigma
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							pRoots[1],pRoots[2],1,qRoots[1],1,rRoots[2],sRoots[1],sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, pRoots[1],pRoots[2],1,qRoots[1],1,rRoots[2],sRoots[1],sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, pRoots[1],pRoots[2],1,qRoots[1],1,rRoots[2],sRoots[1],sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(pRoots[1],pRoots[2],qRoots[1],qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(pRoots[1],pRoots[2], F4, sigma);
							newSigma := coeffMap2(newSigma, F, F4); // new
							newPi := coeffMap4(newSigma, newPi, F4, F16); // for sigma
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							pRoots[1],pRoots[2],qRoots[1],qRoots[2],1,rRoots[1],sRoots[1],sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, pRoots[1],pRoots[2],qRoots[1],qRoots[2],1,rRoots[1],sRoots[1],sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, pRoots[1],pRoots[2],qRoots[1],qRoots[2],1,rRoots[1],sRoots[1],sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(pRoots[1],pRoots[2],1,qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(pRoots[1],pRoots[2], F4, sigma);
							newSigma := coeffMap2(newSigma, F, F4); // new
							newPi := coeffMap4(newSigma, newPi, F4, F16); // for sigma
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							pRoots[1],pRoots[2],1,qRoots[2],1,rRoots[1],sRoots[1],sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, pRoots[1],pRoots[2],1,qRoots[2],1,rRoots[1],sRoots[1],sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, pRoots[1],pRoots[2],1,qRoots[2],1,rRoots[1],sRoots[1],sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(pRoots[1],pRoots[2],1,qRoots[1], F4, F16, pi);
							newSigma := changeSigmaRoot(pRoots[1],pRoots[2], F4, sigma);
							newSigma := coeffMap2(newSigma, F, F4); // new
							newPi := coeffMap4(newSigma, newPi, F4, F16); // for sigma
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							pRoots[1],pRoots[2],1,qRoots[1],1,rRoots[1],sRoots[1],sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, pRoots[1],pRoots[2],1,qRoots[1],1,rRoots[1],sRoots[1],sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, pRoots[1],pRoots[2],1,qRoots[1],1,rRoots[1],sRoots[1],sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(pRoots[1],pRoots[2],qRoots[1],qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(pRoots[1],pRoots[2], F4, sigma);
							newSigma := coeffMap2(newSigma, F, F4); // new
							newPi := coeffMap4(newSigma, newPi, F4, F16); // for sigma
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							pRoots[1],pRoots[2],qRoots[1],qRoots[2],rRoots[1],rRoots[2],1,sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, pRoots[1],pRoots[2],qRoots[1],qRoots[2],rRoots[1],rRoots[2],1,sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, pRoots[1],pRoots[2],qRoots[1],qRoots[2],rRoots[1],rRoots[2],1,sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(pRoots[1],pRoots[2],1,qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(pRoots[1],pRoots[2], F4, sigma);
							newSigma := coeffMap2(newSigma, F, F4); // new
							newPi := coeffMap4(newSigma, newPi, F4, F16); // for sigma
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							pRoots[1],pRoots[2],1,qRoots[2],rRoots[1],rRoots[2],1,sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, pRoots[1],pRoots[2],1,qRoots[2],rRoots[1],rRoots[2],1,sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, pRoots[1],pRoots[2],1,qRoots[2],rRoots[1],rRoots[2],1,sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(pRoots[1],pRoots[2],1,qRoots[1], F4, F16, pi);
							newSigma := changeSigmaRoot(pRoots[1],pRoots[2], F4, sigma);
							newSigma := coeffMap2(newSigma, F, F4); // new
							newPi := coeffMap4(newSigma, newPi, F4, F16); // for sigma
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							pRoots[1],pRoots[2],1,qRoots[1],rRoots[1],rRoots[2],1,sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, pRoots[1],pRoots[2],1,qRoots[1],rRoots[1],rRoots[2],1,sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, pRoots[1],pRoots[2],1,qRoots[1],rRoots[1],rRoots[2],1,sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(pRoots[1],pRoots[2],qRoots[1],qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(pRoots[1],pRoots[2], F4, sigma);
							newSigma := coeffMap2(newSigma, F, F4); // new
							newPi := coeffMap4(newSigma, newPi, F4, F16); // for sigma
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							pRoots[1],pRoots[2],qRoots[1],qRoots[2],1,rRoots[2],1,sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, pRoots[1],pRoots[2],qRoots[1],qRoots[2],1,rRoots[2],1,sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, pRoots[1],pRoots[2],qRoots[1],qRoots[2],1,rRoots[2],1,sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(pRoots[1],pRoots[2],1,qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(pRoots[1],pRoots[2], F4, sigma);
							newSigma := coeffMap2(newSigma, F, F4); // new
							newPi := coeffMap4(newSigma, newPi, F4, F16); // for sigma
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							pRoots[1],pRoots[2],1,qRoots[2],1,rRoots[2],1,sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, pRoots[1],pRoots[2],1,qRoots[2],1,rRoots[2],1,sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, pRoots[1],pRoots[2],1,qRoots[2],1,rRoots[2],1,sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(pRoots[1],pRoots[2],1,qRoots[1], F4, F16, pi);
							newSigma := changeSigmaRoot(pRoots[1],pRoots[2], F4, sigma);
							newSigma := coeffMap2(newSigma, F, F4); // new
							newPi := coeffMap4(newSigma, newPi, F4, F16); // for sigma
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							pRoots[1],pRoots[2],1,qRoots[1],1,rRoots[2],1,sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, pRoots[1],pRoots[2],1,qRoots[1],1,rRoots[2],1,sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, pRoots[1],pRoots[2],1,qRoots[1],1,rRoots[2],1,sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(pRoots[1],pRoots[2],qRoots[1],qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(pRoots[1],pRoots[2], F4, sigma);
							newSigma := coeffMap2(newSigma, F, F4); // new
							newPi := coeffMap4(newSigma, newPi, F4, F16); // for sigma
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							pRoots[1],pRoots[2],qRoots[1],qRoots[2],1,rRoots[1],1,sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, pRoots[1],pRoots[2],qRoots[1],qRoots[2],1,rRoots[1],1,sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, pRoots[1],pRoots[2],qRoots[1],qRoots[2],1,rRoots[1],1,sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(pRoots[1],pRoots[2],1,qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(pRoots[1],pRoots[2], F4, sigma);
							newSigma := coeffMap2(newSigma, F, F4); // new
							newPi := coeffMap4(newSigma, newPi, F4, F16); // for sigma
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							pRoots[1],pRoots[2],1,qRoots[2],1,rRoots[1],1,sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, pRoots[1],pRoots[2],1,qRoots[2],1,rRoots[1],1,sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, pRoots[1],pRoots[2],1,qRoots[2],1,rRoots[1],1,sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(pRoots[1],pRoots[2],1,qRoots[1], F4, F16, pi);
							newSigma := changeSigmaRoot(pRoots[1],pRoots[2], F4, sigma);
							newSigma := coeffMap2(newSigma, F, F4); // new
							newPi := coeffMap4(newSigma, newPi, F4, F16); // for sigma
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							pRoots[1],pRoots[2],1,qRoots[1],1,rRoots[1],1,sRoots[2];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, pRoots[1],pRoots[2],1,qRoots[1],1,rRoots[1],1,sRoots[2]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, pRoots[1],pRoots[2],1,qRoots[1],1,rRoots[1],1,sRoots[2], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(pRoots[1],pRoots[2],qRoots[1],qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(pRoots[1],pRoots[2], F4, sigma);
							newSigma := coeffMap2(newSigma, F, F4); // new
							newPi := coeffMap4(newSigma, newPi, F4, F16); // for sigma
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							pRoots[1],pRoots[2],qRoots[1],qRoots[2],rRoots[1],rRoots[2],1,sRoots[1];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, pRoots[1],pRoots[2],qRoots[1],qRoots[2],rRoots[1],rRoots[2],1,sRoots[1]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, pRoots[1],pRoots[2],qRoots[1],qRoots[2],rRoots[1],rRoots[2],1,sRoots[1], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(pRoots[1],pRoots[2],1,qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(pRoots[1],pRoots[2], F4, sigma);
							newSigma := coeffMap2(newSigma, F, F4); // new
							newPi := coeffMap4(newSigma, newPi, F4, F16); // for sigma
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							pRoots[1],pRoots[2],1,qRoots[2],rRoots[1],rRoots[2],1,sRoots[1];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, pRoots[1],pRoots[2],1,qRoots[2],rRoots[1],rRoots[2],1,sRoots[1]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, pRoots[1],pRoots[2],1,qRoots[2],rRoots[1],rRoots[2],1,sRoots[1], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(pRoots[1],pRoots[2],1,qRoots[1], F4, F16, pi);
							newSigma := changeSigmaRoot(pRoots[1],pRoots[2], F4, sigma);
							newSigma := coeffMap2(newSigma, F, F4); // new
							newPi := coeffMap4(newSigma, newPi, F4, F16); // for sigma
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							pRoots[1],pRoots[2],1,qRoots[1],rRoots[1],rRoots[2],1,sRoots[1];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, pRoots[1],pRoots[2],1,qRoots[1],rRoots[1],rRoots[2],1,sRoots[1]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, pRoots[1],pRoots[2],1,qRoots[1],rRoots[1],rRoots[2],1,sRoots[1], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(pRoots[1],pRoots[2],qRoots[1],qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(pRoots[1],pRoots[2], F4, sigma);
							newSigma := coeffMap2(newSigma, F, F4); // new
							newPi := coeffMap4(newSigma, newPi, F4, F16); // for sigma
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							pRoots[1],pRoots[2],qRoots[1],qRoots[2],1,rRoots[2],1,sRoots[1];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, pRoots[1],pRoots[2],qRoots[1],qRoots[2],1,rRoots[2],1,sRoots[1]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, pRoots[1],pRoots[2],qRoots[1],qRoots[2],1,rRoots[2],1,sRoots[1], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(pRoots[1],pRoots[2],1,qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(pRoots[1],pRoots[2], F4, sigma);
							newSigma := coeffMap2(newSigma, F, F4); // new
							newPi := coeffMap4(newSigma, newPi, F4, F16); // for sigma
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							pRoots[1],pRoots[2],1,qRoots[2],1,rRoots[2],1,sRoots[1];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, pRoots[1],pRoots[2],1,qRoots[2],1,rRoots[2],1,sRoots[1]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, pRoots[1],pRoots[2],1,qRoots[2],1,rRoots[2],1,sRoots[1], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(pRoots[1],pRoots[2],1,qRoots[1], F4, F16, pi);
							newSigma := changeSigmaRoot(pRoots[1],pRoots[2], F4, sigma);
							newSigma := coeffMap2(newSigma, F, F4); // new
							newPi := coeffMap4(newSigma, newPi, F4, F16); // for sigma
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							pRoots[1],pRoots[2],1,qRoots[1],1,rRoots[2],1,sRoots[1];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, pRoots[1],pRoots[2],1,qRoots[1],1,rRoots[2],1,sRoots[1]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, pRoots[1],pRoots[2],1,qRoots[1],1,rRoots[2],1,sRoots[1], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(pRoots[1],pRoots[2],qRoots[1],qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(pRoots[1],pRoots[2], F4, sigma);
							newSigma := coeffMap2(newSigma, F, F4); // new
							newPi := coeffMap4(newSigma, newPi, F4, F16); // for sigma
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							pRoots[1],pRoots[2],qRoots[1],qRoots[2],1,rRoots[1],1,sRoots[1];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, pRoots[1],pRoots[2],qRoots[1],qRoots[2],1,rRoots[1],1,sRoots[1]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, pRoots[1],pRoots[2],qRoots[1],qRoots[2],1,rRoots[1],1,sRoots[1], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(pRoots[1],pRoots[2],1,qRoots[2], F4, F16, pi);
							newSigma := changeSigmaRoot(pRoots[1],pRoots[2], F4, sigma);
							newSigma := coeffMap2(newSigma, F, F4); // new
							newPi := coeffMap4(newSigma, newPi, F4, F16); // for sigma
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							pRoots[1],pRoots[2],1,qRoots[2],1,rRoots[1],1,sRoots[1];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, pRoots[1],pRoots[2],1,qRoots[2],1,rRoots[1],1,sRoots[1]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, pRoots[1],pRoots[2],1,qRoots[2],1,rRoots[1],1,sRoots[1], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							newPi := changePiRoot(pRoots[1],pRoots[2],1,qRoots[1], F4, F16, pi);
							newSigma := changeSigmaRoot(pRoots[1],pRoots[2], F4, sigma);
							newSigma := coeffMap2(newSigma, F, F4); // new
							newPi := coeffMap4(newSigma, newPi, F4, F16); // for sigma
							P, Q, R, S, T; 
							sigma; 
							newSigma;
							pi; 
							newPi;
							lambda; 
							PrimitiveElement(field);
							pRoots[1],pRoots[2],1,qRoots[1],1,rRoots[1],1,sRoots[1];
							invCount := gatesInv16(P, Q, R, S, newSigma, newPi, lambda, pRoots[1],pRoots[2],1,qRoots[1],1,rRoots[1],1,sRoots[1]);
							AFFINE; invCount; 
							toss := totalGateCount16(invCount,v,w,x,y, pRoots[1],pRoots[2],1,qRoots[1],1,rRoots[1],1,sRoots[1], F4, F16, F256, F6K, field, AFFINE, C, CINV);

							// 1,pRoots[1],1,qRoots[1],1,rRoots[1],1,sRoots[1];
							// 1,pRoots[2],1,qRoots[1],1,rRoots[1],1,sRoots[1];
							// pRoots[1],pRoots[2],1,qRoots[1],1,rRoots[1],1,sRoots[1];
							// 1,pRoots[1],1,qRoots[2],1,rRoots[1],1,sRoots[1];
							// 1,pRoots[2],1,qRoots[2],1,rRoots[1],1,sRoots[1];
							// pRoots[1],pRoots[2],1,qRoots[2],1,rRoots[1],1,sRoots[1];
							// 1,pRoots[1],qRoots[1],qRoots[2],1,rRoots[1],1,sRoots[1];
							// 1,pRoots[2],qRoots[1],qRoots[2],1,rRoots[1],1,sRoots[1];
							// pRoots[1],pRoots[2],qRoots[1],qRoots[2],1,rRoots[1],1,sRoots[1];
							// 1,pRoots[1],1,qRoots[1],1,rRoots[2],1,sRoots[1];
							// 1,pRoots[2],1,qRoots[1],1,rRoots[2],1,sRoots[1];
							// pRoots[1],pRoots[2],1,qRoots[1],1,rRoots[2],1,sRoots[1];
							// 1,pRoots[1],1,qRoots[2],1,rRoots[2],1,sRoots[1];
							// 1,pRoots[2],1,qRoots[2],1,rRoots[2],1,sRoots[1];
							// pRoots[1],pRoots[2],1,qRoots[2],1,rRoots[2],1,sRoots[1];
							// 1,pRoots[1],qRoots[1],qRoots[2],1,rRoots[2],1,sRoots[1];
							// 1,pRoots[2],qRoots[1],qRoots[2],1,rRoots[2],1,sRoots[1];
							// pRoots[1],pRoots[2],qRoots[1],qRoots[2],1,rRoots[2],1,sRoots[1];
							// 1,pRoots[1],1,qRoots[1],rRoots[1],rRoots[2],1,sRoots[1];
							// 1,pRoots[2],1,qRoots[1],rRoots[1],rRoots[2],1,sRoots[1];
							// pRoots[1],pRoots[2],1,qRoots[1],rRoots[1],rRoots[2],1,sRoots[1];
							// 1,pRoots[1],1,qRoots[2],rRoots[1],rRoots[2],1,sRoots[1];
							// 1,pRoots[2],1,qRoots[2],rRoots[1],rRoots[2],1,sRoots[1];
							// pRoots[1],pRoots[2],1,qRoots[2],rRoots[1],rRoots[2],1,sRoots[1];
							// 1,pRoots[1],qRoots[1],qRoots[2],rRoots[1],rRoots[2],1,sRoots[1];
							// 1,pRoots[2],qRoots[1],qRoots[2],rRoots[1],rRoots[2],1,sRoots[1];
							// pRoots[1],pRoots[2],qRoots[1],qRoots[2],rRoots[1],rRoots[2],1,sRoots[1];
							// 1,pRoots[1],1,qRoots[1],1,rRoots[1],1,sRoots[2];
							// 1,pRoots[2],1,qRoots[1],1,rRoots[1],1,sRoots[2];
							// pRoots[1],pRoots[2],1,qRoots[1],1,rRoots[1],1,sRoots[2];
							// 1,pRoots[1],1,qRoots[2],1,rRoots[1],1,sRoots[2];
							// 1,pRoots[2],1,qRoots[2],1,rRoots[1],1,sRoots[2];
							// pRoots[1],pRoots[2],1,qRoots[2],1,rRoots[1],1,sRoots[2];
							// 1,pRoots[1],qRoots[1],qRoots[2],1,rRoots[1],1,sRoots[2];
							// 1,pRoots[2],qRoots[1],qRoots[2],1,rRoots[1],1,sRoots[2];
							// pRoots[1],pRoots[2],qRoots[1],qRoots[2],1,rRoots[1],1,sRoots[2];
							// 1,pRoots[1],1,qRoots[1],1,rRoots[2],1,sRoots[2];
							// 1,pRoots[2],1,qRoots[1],1,rRoots[2],1,sRoots[2];
							// pRoots[1],pRoots[2],1,qRoots[1],1,rRoots[2],1,sRoots[2];
							// 1,pRoots[1],1,qRoots[2],1,rRoots[2],1,sRoots[2];
							// 1,pRoots[2],1,qRoots[2],1,rRoots[2],1,sRoots[2];
							// pRoots[1],pRoots[2],1,qRoots[2],1,rRoots[2],1,sRoots[2];
							// 1,pRoots[1],qRoots[1],qRoots[2],1,rRoots[2],1,sRoots[2];
							// 1,pRoots[2],qRoots[1],qRoots[2],1,rRoots[2],1,sRoots[2];
							// pRoots[1],pRoots[2],qRoots[1],qRoots[2],1,rRoots[2],1,sRoots[2];
							// 1,pRoots[1],1,qRoots[1],rRoots[1],rRoots[2],1,sRoots[2];
							// 1,pRoots[2],1,qRoots[1],rRoots[1],rRoots[2],1,sRoots[2];
							// pRoots[1],pRoots[2],1,qRoots[1],rRoots[1],rRoots[2],1,sRoots[2];
							// 1,pRoots[1],1,qRoots[2],rRoots[1],rRoots[2],1,sRoots[2];
							// 1,pRoots[2],1,qRoots[2],rRoots[1],rRoots[2],1,sRoots[2];
							// pRoots[1],pRoots[2],1,qRoots[2],rRoots[1],rRoots[2],1,sRoots[2];
							// 1,pRoots[1],qRoots[1],qRoots[2],rRoots[1],rRoots[2],1,sRoots[2];
							// 1,pRoots[2],qRoots[1],qRoots[2],rRoots[1],rRoots[2],1,sRoots[2];
							// pRoots[1],pRoots[2],qRoots[1],qRoots[2],rRoots[1],rRoots[2],1,sRoots[2];
							// 1,pRoots[1],1,qRoots[1],1,rRoots[1],sRoots[1],sRoots[2];
							// 1,pRoots[2],1,qRoots[1],1,rRoots[1],sRoots[1],sRoots[2];
							// pRoots[1],pRoots[2],1,qRoots[1],1,rRoots[1],sRoots[1],sRoots[2];
							// 1,pRoots[1],1,qRoots[2],1,rRoots[1],sRoots[1],sRoots[2];
							// 1,pRoots[2],1,qRoots[2],1,rRoots[1],sRoots[1],sRoots[2];
							// pRoots[1],pRoots[2],1,qRoots[2],1,rRoots[1],sRoots[1],sRoots[2];
							// 1,pRoots[1],qRoots[1],qRoots[2],1,rRoots[1],sRoots[1],sRoots[2];
							// 1,pRoots[2],qRoots[1],qRoots[2],1,rRoots[1],sRoots[1],sRoots[2];
							// pRoots[1],pRoots[2],qRoots[1],qRoots[2],1,rRoots[1],sRoots[1],sRoots[2];
							// 1,pRoots[1],1,qRoots[1],1,rRoots[2],sRoots[1],sRoots[2];
							// 1,pRoots[2],1,qRoots[1],1,rRoots[2],sRoots[1],sRoots[2];
							// pRoots[1],pRoots[2],1,qRoots[1],1,rRoots[2],sRoots[1],sRoots[2];
							// 1,pRoots[1],1,qRoots[2],1,rRoots[2],sRoots[1],sRoots[2];
							// 1,pRoots[2],1,qRoots[2],1,rRoots[2],sRoots[1],sRoots[2];
							// pRoots[1],pRoots[2],1,qRoots[2],1,rRoots[2],sRoots[1],sRoots[2];
							// 1,pRoots[1],qRoots[1],qRoots[2],1,rRoots[2],sRoots[1],sRoots[2];
							// 1,pRoots[2],qRoots[1],qRoots[2],1,rRoots[2],sRoots[1],sRoots[2];
							// pRoots[1],pRoots[2],qRoots[1],qRoots[2],1,rRoots[2],sRoots[1],sRoots[2];
							// 1,pRoots[1],1,qRoots[1],rRoots[1],rRoots[2],sRoots[1],sRoots[2];
							// 1,pRoots[2],1,qRoots[1],rRoots[1],rRoots[2],sRoots[1],sRoots[2];
							// pRoots[1],pRoots[2],1,qRoots[1],rRoots[1],rRoots[2],sRoots[1],sRoots[2];
							// 1,pRoots[1],1,qRoots[2],rRoots[1],rRoots[2],sRoots[1],sRoots[2];
							// 1,pRoots[2],1,qRoots[2],rRoots[1],rRoots[2],sRoots[1],sRoots[2];
							// pRoots[1],pRoots[2],1,qRoots[2],rRoots[1],rRoots[2],sRoots[1],sRoots[2];
							// 1,pRoots[1],qRoots[1],qRoots[2],rRoots[1],rRoots[2],sRoots[1],sRoots[2];
							// 1,pRoots[2],qRoots[1],qRoots[2],rRoots[1],rRoots[2],sRoots[1],sRoots[2];
							// pRoots[1],pRoots[2],qRoots[1],qRoots[2],rRoots[1],rRoots[2],sRoots[1],sRoots[2];
						end if;
					end for;
				end if;
			end for;
		end if;
	end for;

	return [* pIps, qIps, rIps, sIps *];
end function;

//////////////// END ROOT GENERATION CODE

F:=GF(2);
polRing<V>:=PolynomialRing(F);

////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////
// START COUNTING GATE CODE HERE - polynomial basis in GF(2^4)/GF(2^2)
////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////

P:=V^2+V+1;
F4<v>:=ext<F | P>; 
pol4<W>:=PolynomialRing(F4);

// VERIFYING CANRIGHTS MIXED BASIS RESULTS FOR SQUARE/SCALE
// row 1, col 1
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := sigma * w;
// gatesSquareScale4(P, Q, sigma, v, w, pi);
assert gatesSquareScale4(P, Q, sigma, 1, sigma, 1, w, pi) eq 4; // v == w^2
"pass 1/1";

// row 1, col 2
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := sigma * w;
// gatesSquareScale4(P, Q, sigma, sigma^2, w, pi);
assert gatesSquareScale4(P, Q, sigma, 1, sigma^2, 1, w, pi) eq 4; // v == w^2
"pass 1/2";

// row 1, col 3
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := sigma * w;
// gatesSquareScale4(P, Q, sigma, sigma^2, w, pi);
assert gatesSquareScale4(P, Q, sigma, sigma, sigma^2, 1, w, pi) eq 4; // v == w^2
"pass 1/3";

// row 1, col 1 - v2
sigma := v^2;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := sigma * w;
// gatesSquareScale4(P, Q, sigma, v, w, pi);
assert gatesSquareScale4(P, Q, sigma, 1, sigma, 1, w, pi) eq 4; // v == w^2
"pass 1/1 - 2";

// row 1, col 2 - v2
sigma := v^2;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := sigma * w;
// gatesSquareScale4(P, Q, sigma, v^2, w, pi);
assert gatesSquareScale4(P, Q, sigma, 1, sigma^2, 1, w, pi) eq 4; // v == w^2
"pass 1/2 - 2";

// row 1, col 3 - v2
sigma := v^2;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := sigma * w;
// gatesSquareScale4(P, Q, sigma, v^2, w, pi);
assert gatesSquareScale4(P, Q, sigma, sigma, sigma^2, 1, w, pi) eq 4; // v == w^2
"pass 1/3 - 2";

// row 2, col 1
sigma := v;
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := sigma^2 * w;
// gatesSquareScale4(P, Q, sigma, v, w, pi);
assert gatesSquareScale4(P, Q, sigma, 1, sigma, 1, w, pi) eq 4;  // v == w 
"pass 2/1";

// row 2, col 2
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := sigma^2 * w;
// gatesSquareScale4(P, Q, sigma, v^2, w, pi);
assert gatesSquareScale4(P, Q, sigma, 1, sigma^2, 1, w, pi) eq 4; // v == w^2
"pass 2/2";

// row 2, col 3
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := sigma^2 * w;
// gatesSquareScale4(P, Q, sigma, v^2, w, pi);
assert gatesSquareScale4(P, Q, sigma, sigma, sigma^2, 1, w, pi) eq 4; // v == w^2
"pass 2/3";

// row 2, col 1 - v2
sigma := v^2;
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := sigma^2 * w;
// gatesSquareScale4(P, Q, sigma, v, w, pi);
assert gatesSquareScale4(P, Q, sigma, 1, sigma, 1, w, pi) eq 4;  // v == w 
"pass 2/1 - 1";

// row 2, col 2 - v2
sigma := v^2;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := sigma^2 * w;
// gatesSquareScale4(P, Q, sigma, v^2, w, pi);
assert gatesSquareScale4(P, Q, sigma, 1, sigma^2, 1, w, pi) eq 4; // v == w^2
"pass 2/2 - 2";

// row 2, col 3 - v2
sigma := v^2;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := sigma^2 * w;
// gatesSquareScale4(P, Q, sigma, v^2, w, pi);
assert gatesSquareScale4(P, Q, sigma, sigma, sigma^2, 1, w, pi) eq 4; // v == w^2
"pass 2/3 - 2";

// row 3, col 1
sigma := v;
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (sigma * w) + sigma;
// gatesSquareScale4(P, Q, sigma, v, w, pi);
assert gatesSquareScale4(P, Q, sigma, 1, sigma, 1, w, pi) eq 3;  // v == w 
"pass 3/1";

// row 3, col 2
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (sigma * w) + sigma;
// gatesSquareScale4(P, Q, sigma, v^2, w, pi);
assert gatesSquareScale4(P, Q, sigma, 1, sigma^2, 1, w, pi) eq 3; // v == w^2
"pass 3/2";

// row 3, col 3
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (sigma * w) + sigma;
// gatesSquareScale4(P, Q, sigma, v^2, w, pi);
assert gatesSquareScale4(P, Q, sigma, sigma, sigma^2, 1, w, pi) eq 4; // v == w^2
"pass 3/3";

// row 4, col 1
sigma := v;
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (sigma^2 * w) + sigma^2;
// gatesSquareScale4(P, Q, sigma, v, w, pi);
assert gatesSquareScale4(P, Q, sigma, 1, sigma, 1, w, pi) eq 4;  // v == w 
"pass 4/1";

// row 4, col 2
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (sigma^2 * w) + sigma^2;
// gatesSquareScale4(P, Q, sigma, v^2, w, pi);
assert gatesSquareScale4(P, Q, sigma, 1, sigma^2, 1, w, pi) eq 3; // v == w^2
"pass 4/2";

// row 4, col 3
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (sigma^2 * w) + sigma^2;
// gatesSquareScale4(P, Q, sigma, v^2, w, pi);
assert gatesSquareScale4(P, Q, sigma, sigma, sigma^2, 1, w, pi) eq 3; // v == w^2
"pass 4/3";

// row 5, col 1
sigma := v;
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (sigma * w) + 1;
// gatesSquareScale4(P, Q, sigma, v, w, pi);
assert gatesSquareScale4(P, Q, sigma, 1, sigma, 1, w, pi) eq 3;  // v == w 
"pass 5/1";

// row 5, col 2
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (sigma * w) + 1;
// gatesSquareScale4(P, Q, sigma, v^2, w, pi);
assert gatesSquareScale4(P, Q, sigma, 1, sigma^2, 1, w, pi) eq 4; // v == w^2
// CANRIGHT WAS WRONG HERE
"pass 5/2";

// row 5, col 3
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (sigma * w) + 1;
// gatesSquareScale4(P, Q, sigma, v^2, w, pi);
assert gatesSquareScale4(P, Q, sigma, sigma, sigma^2, 1, w, pi) eq 3; // v == w^2
"pass 5/3";

// row 6, col 1
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (sigma^2 * w) + sigma;
// gatesSquareScale4(P, Q, sigma, v^2, w, pi);
assert gatesSquareScale4(P, Q, sigma, 1, sigma, 1, w, pi) eq 3; // v == w^2
"pass 6/1";

// row 6, col 2
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (sigma^2 * w) + sigma;
// gatesSquareScale4(P, Q, sigma, v^2, w, pi);
assert gatesSquareScale4(P, Q, sigma, 1, sigma^2, 1, w, pi) eq 3; // v == w^2
"pass 6/2";

// row 6, col 3
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (sigma^2 * w) + sigma;
// gatesSquareScale4(P, Q, sigma, v^2, w, pi);
assert gatesSquareScale4(P, Q, sigma, sigma, sigma^2, 1, w, pi) eq 4; // v == w^2
"pass 6/3";

// row 6, col 1 - v2
sigma := v^2;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (sigma^2 * w) + sigma;
// gatesSquareScale4(P, Q, sigma, sigma, w, pi);
assert gatesSquareScale4(P, Q, sigma, 1, sigma, 1, w, pi) eq 3; // v == w^2
"pass 6/1 - 2";

// row 6, col 2 - v2
sigma := v^2;
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (sigma^2 * w) + sigma;
// gatesSquareScale4(P, Q, sigma, v^2, w, pi);
assert gatesSquareScale4(P, Q, sigma, 1, sigma^2, 1, w, pi) eq 3; // v == w^2
"pass 6/2 - 2";

// row 6, col 3 - v2
sigma := v^2;
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (sigma^2 * w) + sigma;
// gatesSquareScale4(P, Q, sigma, v^2, w, pi);
assert gatesSquareScale4(P, Q, sigma, sigma, sigma^2, 1, w, pi) eq 4; // v == w^2
"pass 6/3 - 2";

// row 7, col 1
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (sigma * w) + sigma^2;
// gatesSquareScale4(P, Q, sigma, v^2, w, pi);
assert gatesSquareScale4(P, Q, sigma, 1, sigma, 1, w, pi) eq 5; // v == w^2
"pass 7/1";

// row 7, col 2
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (sigma * w) + v^2;
assert gatesSquareScale4(P, Q, sigma, 1, sigma^2, 1, w, pi) eq 6; // v == w^2
// CANRIGHT WAS WRONG HERE
"pass 7/2";

// row 7, col 3
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (sigma * w) + v^2;
assert gatesSquareScale4(P, Q, sigma, sigma, sigma^2, 1, w, pi) eq 5; // v == w^2
"pass 7/3";

// row 8, col 1
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (sigma^2 * w) + 1;
// gatesSquareScale4(P, Q, sigma, v^2, w, pi);
assert gatesSquareScale4(P, Q, sigma, 1, sigma, 1, w, pi) eq 5; // v == w^2
"pass 8/1";

// row 8, col 2
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (sigma^2 * w) + 1;
assert gatesSquareScale4(P, Q, sigma, 1, sigma^2, 1, w, pi) eq 5; // v == w^2
"pass 8/2";

// row 8, col 3
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (sigma^2 * w) + 1;
assert gatesSquareScale4(P, Q, sigma, sigma, sigma^2, 1, w, pi) eq 6; // v == w^2
"pass 8/3";

//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
// START COUNTING GATE CODE HERE - normal basis in GF(2^4)/GF(2^2)
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

// row 1, col 1
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (sigma * w) + 0;
// gatesSquareScale4(P, Q, sigma, v^2, w, pi);
assert gatesSquareScale4(P, Q, sigma, 1, sigma, w, w^4, pi) eq 3; // v == w^2
"pass 1/1";

// row 1, col 2
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (sigma * w) + 0;
assert gatesSquareScale4(P, Q, sigma, 1, sigma^2, w, w^4, pi) eq 3; // v == w^2
"pass 1/2";

// row 1, col 3
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (sigma * w) + 0;
assert gatesSquareScale4(P, Q, sigma, sigma, sigma^2, w, w^4, pi) eq 4; // v == w^2
"pass 1/3";

// 2

// row 2, col 1
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (0 * w) + sigma;
// gatesSquareScale4(P, Q, sigma, v^2, w, pi);
assert gatesSquareScale4(P, Q, sigma, 1, sigma, w, w^4, pi) eq 3; // v == w^2
"pass 2/1";

// row 2, col 2
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (0 * w) + sigma;
assert gatesSquareScale4(P, Q, sigma, 1, sigma^2, w, w^4, pi) eq 3; // v == w^2
"pass 2/2";

// row 2, col 3
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (0 * w) + sigma;
assert gatesSquareScale4(P, Q, sigma, sigma, sigma^2, w, w^4, pi) eq 4; // v == w^2
"pass 2/3";

// 3

// row 3, col 1
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (sigma^2 * w);
// gatesSquareScale4(P, Q, sigma, v^2, w, pi);
assert gatesSquareScale4(P, Q, sigma, 1, sigma, w, w^4, pi) eq 4; // v == w^2
"pass 3/1";

// row 3, col 2
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (sigma^2 * w);
assert gatesSquareScale4(P, Q, sigma, 1, sigma^2, w, w^4, pi) eq 3; // v == w^2
"pass 3/2";

// row 3, col 3
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (sigma^2 * w);
assert gatesSquareScale4(P, Q, sigma, sigma, sigma^2, w, w^4, pi) eq 3; // v == w^2
"pass 3/3";

// 4

// row 4, col 1
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (0 * w) + sigma^2;
// gatesSquareScale4(P, Q, sigma, v^2, w, pi);
assert gatesSquareScale4(P, Q, sigma, 1, sigma, w, w^4, pi) eq 4; // v == w^2
"pass 4/1";

// row 4, col 2
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (0 * w) + sigma^2;
assert gatesSquareScale4(P, Q, sigma, 1, sigma^2, w, w^4, pi) eq 3; // v == w^2
"pass 4/2";

// row 4, col 3
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (0 * w) + sigma^2;
assert gatesSquareScale4(P, Q, sigma, sigma, sigma^2, w, w^4, pi) eq 3; // v == w^2
"pass 4/3";

// 5

// row 5, col 1
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (sigma * w) + 1;
// gatesSquareScale4(P, Q, sigma, v^2, w, pi);
assert gatesSquareScale4(P, Q, sigma, 1, sigma, w, w^4, pi) eq 3; // v == w^2
"pass 5/1";

// row 5, col 2
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (sigma * w) + 1;
assert gatesSquareScale4(P, Q, sigma, 1, sigma^2, w, w^4, pi) eq 3; // v == w^2
"pass 5/2";

// row 5, col 3
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (sigma * w) + 1;
assert gatesSquareScale4(P, Q, sigma, sigma, sigma^2, w, w^4, pi) eq 4; // v == w^2
"pass 5/3";

// 6

// row 6, col 1
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (1 * w) + sigma;
// gatesSquareScale4(P, Q, sigma, v^2, w, pi);
assert gatesSquareScale4(P, Q, sigma, 1, sigma, w, w^4, pi) eq 3; // v == w^2
"pass 6/1";

// row 6, col 2
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (1 * w) + sigma;
assert gatesSquareScale4(P, Q, sigma, 1, sigma^2, w, w^4, pi) eq 3; // v == w^2
"pass 6/2";

// row 6, col 3
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (1 * w) + sigma;
assert gatesSquareScale4(P, Q, sigma, sigma, sigma^2, w, w^4, pi) eq 4; // v == w^2
"pass 6/3";

// 7

// row 7, col 1
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (sigma^2 * w) + 1;
// gatesSquareScale4(P, Q, sigma, v^2, w, pi);
assert gatesSquareScale4(P, Q, sigma, 1, sigma, w, w^4, pi) eq 3; // v == w^2
"pass 7/1";

// row 7, col 2
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (sigma^2 * w) + 1;
assert gatesSquareScale4(P, Q, sigma, 1, sigma^2, w, w^4, pi) eq 4; // v == w^2
"pass 7/2";

// row 7, col 3
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (sigma^2 * w) + 1;
assert gatesSquareScale4(P, Q, sigma, sigma, sigma^2, w, w^4, pi) eq 3; // v == w^2
"pass 7/3";

// 8

// row 8, col 1
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (1 * w) + sigma^2;
// gatesSquareScale4(P, Q, sigma, v^2, w, pi);
assert gatesSquareScale4(P, Q, sigma, 1, sigma, w, w^4, pi) eq 3; // v == w^2
"pass 8/1";

// row 8, col 2
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (1 * w) + sigma^2;
assert gatesSquareScale4(P, Q, sigma, 1, sigma^2, w, w^4, pi) eq 4; // v == w^2
"pass 8/2";

// row 8, col 3
sigma := v;  
Q := W^2 + W + sigma;
F16<w> := ext<F4 | Q>;
pi := (1 * w) + sigma^2;
assert gatesSquareScale4(P, Q, sigma, sigma, sigma^2, w, w^4, pi) eq 3; // v == w^2
"pass 8/3";

////////

// AFFINE VECTOR IS DEFINED AS [7,6,5,4,3,2,1,0]^T (high bit at the top)

affine_8 := function(F, fullElem, constant)
	// Build up the domain/range map for interpolation
	Input1:=[];
	Input1:=[];
	Output1:=[];
	Output2:=[];

	repeat
	  fixed := 0;
	  affine := RandomMatrix(GF(2), 8, 8);
//		affine := Matrix(GF(2), 8, 8,
//			[
//				[1,1,1,1,1,0,0,0],
//				[0,1,1,1,1,1,0,0],
//				[0,0,1,1,1,1,1,0],
//				[0,0,0,1,1,1,1,1],
//				[1,0,0,0,1,1,1,1],
//				[1,1,0,0,0,1,1,1],
//				[1,1,1,0,0,0,1,1],
//				[1,1,1,1,0,0,0,1]
//			]);

	  try
		toss := affine^(-1);

//	    "Trying new invertible affine matrix";
//	    affine;
	    
	    power := -1;
	    v:=Transpose(Matrix([Reverse(Eltseq(constant))]));
	    ci := affine^(-1) * v;
	    // ci;
	    cinverse := Seqelt(Reverse([ci[1][1], ci[2][1], ci[3][1], ci[4][1], ci[5][1], ci[6][1], ci[7][1], ci[8][1]]), F);
	    // cinverse;

	    Input1:=[];
	    Input2:=[];
	    Output1:=[];
	    Output2:=[];

//	    "Got here.";

	    // Generate the mapping for interpolation
	    for e in F do
	      Input1:=Append(Input1,e);

	      // 0 has no inverse, so treat it carefully
	      if e eq 0 then
		s:=ElementToSequence(e);
	      else
		s:=ElementToSequence(e^power);
	      end if;

	      // perform the matrix computation
	      v:=Transpose(Matrix([Reverse(s)]));
	      prod:=affine*v;

	      // Transform back to the output (we don't transpose...)
	      es:=
		[
		  prod[1][1], prod[2][1], prod[3][1], prod[4][1], prod[5][1], prod[6][1], prod[7][1], prod[8][1]
		];
	      elem:=SequenceToElement(Reverse(es), F) + constant;

	      if (elem in Output1) then
//		"Duplicate element found.";
		fixed := 1;
		break;
	      end if;

	      Output1:=Append(Output1, elem);

	      if (e + elem) eq 0 or (e + elem) eq fullElem then
//		"Found a fixed point. Discarding this matrix";
		fixed := 1;
		break;
	      end if;

	      // Now do the inverse S-box
	      Input2 := Append(Input2, elem); // elem = y
	      s:=Reverse(Eltseq(elem));

	      // Perform the matrix computation
	      v:=Transpose(Matrix([s]));
	      prod:=affine^(-1) * v; // A^(-1) * y

	      // Transform back to the output (we don't transpose...)
	      es:=Reverse([prod[1][1], prod[2][1], prod[3][1], prod[4][1], prod[5][1], prod[6][1], prod[7][1], prod[8][1]]);
	      elem := SequenceToElement(es, F) + cinverse; // cinverse = A^(-1) * b
	      if elem ne 0 then
		elem := elem^power;
	      end if;
	      Output2 := Append(Output2, elem);

	      // "output";
	      // elem;

	      if Eltseq(elem) ne Eltseq(e) then
//		"not equal - exiting now.";
		fixed := 1;
		break;
	      end if;

	    end for;

	    if fixed eq 0 then
	      // Perform Lagrangian interpolation and spit out the complexity (# terms)
	      // affine;
	      // constant;
	      // NumberOfNonZeroEntries(affine);
	      // affine^-1;
	      // cinverse;
	      // NumberOfNonZeroEntries(affine^-1);
	      // constant;
	      Fx:=Interpolation(Input1,Output1);
	      // Fx;
	      //Fx1:=Interpolation(Input2,Output2);
	      //Fx1;
	      // #Terms(Fx);
	  
	      if #Terms(Fx) ne 9 then
	      	fixed := 1;
	      end if;

	      if (fixed eq 0) then
			return affine; 
			end if;
	    end if;

	  catch e
	  //  e;
	    fixed := 1;
	  end try;
	until fixed eq 0;
end function;

affine_16 := function(F, fullElem, constant)
	// Build up the domain/range map for interpolation
	Input1:=[];
	Input1:=[];
	Output1:=[];
	Output2:=[];

	repeat
	  fixed := 0;
	  affine := RandomMatrix(GF(2), 16, 16);

	  try
	    toss := affine^(-1);

//	    "Trying new invertible affine matrix";
//	    affine;
	//    constant := x^16 + x^5 + x^3 + x + 1;
	    constant := Random(F);
	    power := -1;
	    v:=Transpose(Matrix([Reverse(Eltseq(constant))]));
	    ci := affine^(-1) * v;
	    // ci;
	    cinverse := Seqelt(Reverse([ci[1][1], ci[2][1], ci[3][1], ci[4][1], ci[5][1], ci[6][1], ci[7][1], ci[8][1], ci[9][1], ci[10][1], ci[11][1], ci[12][1], ci[13][1], ci[14][1], ci[15][1], ci[16][1]]), F);
	    // cinverse;

	    Input1:=[];
	    Input2:=[];
	    Output1:=[];
	    Output2:=[];

//	    "Got here.";

	    // Generate the mapping for interpolation
	    for e in F do
	      Input1:=Append(Input1,e);

	      // 0 has no inverse, so treat it carefully
	      if e eq 0 then
		s:=ElementToSequence(e);
	      else
		s:=ElementToSequence(e^power);
	      end if;

	      // perform the matrix computation
	      v:=Transpose(Matrix([Reverse(s)]));
	      prod:=affine*v;

	      // Transform back to the output (we don't transpose...)
	      es:=
		[
		  prod[1][1], prod[2][1], prod[3][1], prod[4][1], prod[5][1], prod[6][1], prod[7][1], prod[8][1],
		  prod[9][1], prod[10][1], prod[11][1], prod[12][1], prod[13][1], prod[14][1], prod[15][1], prod[16][1]
		];
	      elem:=SequenceToElement(Reverse(es), F) + constant;

	      if (elem in Output1) then
//		"Duplicate element found.";
		fixed := 1;
		break;
	      end if;

	      Output1:=Append(Output1, elem);

	      if (e + elem) eq 0 or (e + elem) eq fullElem then
//		"Found a fixed point. Discarding this matrix";
		fixed := 1;
		break;
	      end if;

	      // Now do the inverse S-box
	      Input2 := Append(Input2, elem); // elem = y
	      s:=Reverse(Eltseq(elem));

	      // Perform the matrix computation
	      v:=Transpose(Matrix([s]));
	      prod:=affine^(-1) * v; // A^(-1) * y

	      // Transform back to the output (we don't transpose...)
	      es:=Reverse([prod[1][1], prod[2][1], prod[3][1], prod[4][1], prod[5][1], prod[6][1], prod[7][1], prod[8][1], prod[9][1], prod[10][1], prod[11][1], prod[12][1], prod[13][1], prod[14][1], prod[15][1], prod[16][1]]);
	      elem := SequenceToElement(es, F) + cinverse; // cinverse = A^(-1) * b
	      if elem ne 0 then
		elem := elem^power;
	      end if;
	      Output2 := Append(Output2, elem);

	      // "output";
	      // elem;

	      if Eltseq(elem) ne Eltseq(e) then
		"not equal - exiting now.";
		fixed := 1;
		break;
	      end if;

	    end for;

	    if fixed eq 0 then
	      // Perform Lagrangian interpolation and spit out the complexity (# terms)
//	      "Affine and inverse affine found - performing interpolation.";
	      // affine;
	      // constant;
	      // NumberOfNonZeroEntries(affine);
	      // affine^-1;
	      // cinverse;
	      // NumberOfNonZeroEntries(affine^-1);
	      // constant;
	      // Fx:=Interpolation(Input1,Output1);
	      // Fx;
	      // //Fx1:=Interpolation(Input2,Output2);
	      // //Fx1;
	      // #Terms(Fx);
	      //#Terms(Fx1);

		// Return the stuff for the affine transformation
		// return affine, constant, affine^(-1), cinverse, Fx, #Terms(Fx);
	    	return affine; //, constant, cinverse;//, Fx, #Terms(Fx);
	    end if;

	  catch e
	//    e;
	    fixed := 1;
	  end try;
	until fixed eq 0;
end function;

// ONLY USED ONCE - TRY AND TOSS LATER.
constantAffineInv := function(affine, constant, F)
	v:=Transpose(Matrix([Reverse(Eltseq(constant))]));
	ci := affine^(-1) * v;
	cinverse := Seqelt([ci[8][1], ci[7][1], ci[6][1], ci[5][1], ci[4][1], ci[3][1], ci[2][1], ci[1][1]], F);
	return cinverse;
end function;

// "NOW DOING GATE COUNTS";
F:=GF(2);
polRing<V>:=PolynomialRing(F);
S:=V^8+V^4+V^3+V+1;
// F256<x>:=ext<F|S>;
// p := allGen_8(0, F256); // capture output

////////////////////////////////////////////////////////////
/////////////// START AES ALTERNATIVE SEARCH ///////////////
////////////////////////////////////////////////////////////

S := V^8 + V^4 + V^3 + V + 1; // fixed affine for AES polynomial
F256<x>:=ext<F | S>;
// if PrimitiveElement(F256) ne x + 1 then
// 	quit;
// end if;
affine:=Matrix(GF(2),8,8, // affine == M
			[
      [1,1,1,1,1,0,0,0],
      [0,1,1,1,1,1,0,0],
      [0,0,1,1,1,1,1,0],
      [0,0,0,1,1,1,1,1],
      [1,0,0,0,1,1,1,1],
      [1,1,0,0,0,1,1,1],
      [1,1,1,0,0,0,1,1],
      [1,1,1,1,0,0,0,1]
			]);
constant := x^6 + x^5 + x + 1;
cinv := constantAffineInv(affine, constant, F256);
p := allGen_8(0, F256, S, affine, constant, cinv); // capture output
// S := V^8 + V^4 + V^3 + V^2 + 1;
// F256<x>:=ext<F|S>;
// constant := Random(F256);
// fullElem := x^7 + x^6 + x^5 + x^4 + x^3 + x^2 + x + 1;
// affine := affine_8(F256, fullElem, constant);
// // "DANGER DANGER";
// // affine;
// // quit;
// // "YEAH YEAH";
// p := allGen_8(0, F256, S, affine, constant, cinv); // capture output
// S := V^8 + V^5 + V^3 + V + 1;
// F256<x>:=ext<F|S>;
// constant := Random(F256);
// fullElem := x^7 + x^6 + x^5 + x^4 + x^3 + x^2 + x + 1;
// affine := affine_8(F256, fullElem, constant);
// p := allGen_8(0, F256, S, affine, constant, cinv); // capture output
// S := V^8 + V^5 + V^3 + V^2 + 1;
// F256<x>:=ext<F|S>;
// constant := Random(F256);
// fullElem := x^7 + x^6 + x^5 + x^4 + x^3 + x^2 + x + 1;
// affine := affine_8(F256, fullElem, constant);
// p := allGen_8(0, F256, S, affine, constant, cinv); // capture output
// S := V^8 + V^5 + V^4 + V^3 + 1;
// F256<x>:=ext<F|S>;
// constant := Random(F256);
// fullElem := x^7 + x^6 + x^5 + x^4 + x^3 + x^2 + x + 1;
// affine := affine_8(F256, fullElem, constant);
// p := allGen_8(0, F256, S, affine, constant, cinv); // capture output
// S := V^8 + V^5 + V^4 + V^3 + V^2 + V + 1;
// F256<x>:=ext<F|S>;
// constant := Random(F256);
// fullElem := x^7 + x^6 + x^5 + x^4 + x^3 + x^2 + x + 1;
// affine := affine_8(F256, fullElem, constant);
// p := allGen_8(0, F256, S, affine, constant, cinv); // capture output
// S := V^8 + V^6 + V^3 + V^2 + 1;
// F256<x>:=ext<F|S>;
// constant := Random(F256);
// fullElem := x^7 + x^6 + x^5 + x^4 + x^3 + x^2 + x + 1;
// p := allGen_8(0, F256, S, affine, constant, cinv); // capture output
// S := V^8 + V^6 + V^4 + V^3 + V^2 + V + 1;
// F256<x>:=ext<F|S>;
// constant := Random(F256);
// fullElem := x^7 + x^6 + x^5 + x^4 + x^3 + x^2 + x + 1;
// affine := affine_8(F256, fullElem, constant);
// p := allGen_8(0, F256, S, affine, constant, cinv); // capture output
// S := V^8 + V^6 + V^5 + V + 1;
// F256<x>:=ext<F|S>;
// constant := Random(F256);
// fullElem := x^7 + x^6 + x^5 + x^4 + x^3 + x^2 + x + 1;
// affine := affine_8(F256, fullElem, constant);
// p := allGen_8(0, F256, S, affine, constant, cinv); // capture output
// S := V^8 + V^6 + V^5 + V^2 + 1;
// F256<x>:=ext<F|S>;
// constant := Random(F256);
// fullElem := x^7 + x^6 + x^5 + x^4 + x^3 + x^2 + x + 1;
// affine := affine_8(F256, fullElem, constant);
// p := allGen_8(0, F256, S, affine, constant, cinv); // capture output
// S := V^8 + V^6 + V^5 + V^3 + 1;
// F256<x>:=ext<F|S>;
// constant := Random(F256);
// fullElem := x^7 + x^6 + x^5 + x^4 + x^3 + x^2 + x + 1;
// affine := affine_8(F256, fullElem, constant);
// p := allGen_8(0, F256, S, affine, constant, cinv); // capture output
// S := V^8 + V^6 + V^5 + V^4 + 1;
// F256<x>:=ext<F|S>;
// constant := Random(F256);
// fullElem := x^7 + x^6 + x^5 + x^4 + x^3 + x^2 + x + 1;
// affine := affine_8(F256, fullElem, constant);
// p := allGen_8(0, F256, S, affine, constant, cinv); // capture output
// S := V^8 + V^6 + V^5 + V^4 + V^2 + V + 1;
// F256<x>:=ext<F|S>;
// constant := Random(F256);
// fullElem := x^7 + x^6 + x^5 + x^4 + x^3 + x^2 + x + 1;
// affine := affine_8(F256, fullElem, constant);
// p := allGen_8(0, F256, S, affine, constant, cinv); // capture output
// S := V^8 + V^6 + V^5 + V^4 + V^3 + V + 1;
// F256<x>:=ext<F|S>;
// constant := Random(F256);
// fullElem := x^7 + x^6 + x^5 + x^4 + x^3 + x^2 + x + 1;
// affine := affine_8(F256, fullElem, constant);
// p := allGen_8(0, F256, S, affine, constant, cinv); // capture output
// S := V^8 + V^7 + V^2 + V + 1;
// F256<x>:=ext<F|S>;
// constant := Random(F256);
// fullElem := x^7 + x^6 + x^5 + x^4 + x^3 + x^2 + x + 1;
// affine := affine_8(F256, fullElem, constant);
// p := allGen_8(0, F256, S, affine, constant, cinv); // capture output
// S := V^8 + V^7 + V^3 + V + 1;
// F256<x>:=ext<F|S>;
// constant := Random(F256);
// fullElem := x^7 + x^6 + x^5 + x^4 + x^3 + x^2 + x + 1;
// affine := affine_8(F256, fullElem, constant);
// p := allGen_8(0, F256, S, affine, constant, cinv); // capture output
// S := V^8 + V^7 + V^3 + V^2 + 1;
// F256<x>:=ext<F|S>;
// constant := Random(F256);
// fullElem := x^7 + x^6 + x^5 + x^4 + x^3 + x^2 + x + 1;
// affine := affine_8(F256, fullElem, constant);
// p := allGen_8(0, F256, S, affine, constant, cinv); // capture output
// S := V^8 + V^7 + V^4 + V^3 + V^2 + V + 1;
// F256<x>:=ext<F|S>;
// constant := Random(F256);
// fullElem := x^7 + x^6 + x^5 + x^4 + x^3 + x^2 + x + 1;
// affine := affine_8(F256, fullElem, constant);
// p := allGen_8(0, F256, S, affine, constant, cinv); // capture output
// S := V^8 + V^7 + V^5 + V + 1;
// F256<x>:=ext<F|S>;
// constant := Random(F256);
// fullElem := x^7 + x^6 + x^5 + x^4 + x^3 + x^2 + x + 1;
// affine := affine_8(F256, fullElem, constant);
// p := allGen_8(0, F256, S, affine, constant, cinv); // capture output
// S := V^8 + V^7 + V^5 + V^3 + 1;
// F256<x>:=ext<F|S>;
// constant := Random(F256);
// fullElem := x^7 + x^6 + x^5 + x^4 + x^3 + x^2 + x + 1;
// affine := affine_8(F256, fullElem, constant);
// p := allGen_8(0, F256, S, affine, constant, cinv); // capture output
// S := V^8 + V^7 + V^5 + V^4 + 1;
// F256<x>:=ext<F|S>;
// constant := Random(F256);
// fullElem := x^7 + x^6 + x^5 + x^4 + x^3 + x^2 + x + 1;
// affine := affine_8(F256, fullElem, constant);
// p := allGen_8(0, F256, S, affine, constant, cinv); // capture output
// S := V^8 + V^7 + V^5 + V^4 + V^3 + V^2 + 1;
// F256<x>:=ext<F|S>;
// constant := Random(F256);
// fullElem := x^7 + x^6 + x^5 + x^4 + x^3 + x^2 + x + 1;
// affine := affine_8(F256, fullElem, constant);
// p := allGen_8(0, F256, S, affine, constant, cinv); // capture output
// S := V^8 + V^7 + V^6 + V + 1;
// F256<x>:=ext<F|S>;
// constant := Random(F256);
// fullElem := x^7 + x^6 + x^5 + x^4 + x^3 + x^2 + x + 1;
// affine := affine_8(F256, fullElem, constant);
// p := allGen_8(0, F256, S, affine, constant, cinv); // capture output
// S := V^8 + V^7 + V^6 + V^3 + V^2 + V + 1;
// F256<x>:=ext<F|S>;
// constant := Random(F256);
// fullElem := x^7 + x^6 + x^5 + x^4 + x^3 + x^2 + x + 1;
// affine := affine_8(F256, fullElem, constant);
// p := allGen_8(0, F256, S, affine, constant, cinv); // capture output
// S := V^8 + V^7 + V^6 + V^4 + V^2 + V + 1;
// F256<x>:=ext<F|S>;
// constant := Random(F256);
// fullElem := x^7 + x^6 + x^5 + x^4 + x^3 + x^2 + x + 1;
// affine := affine_8(F256, fullElem, constant);
// p := allGen_8(0, F256, S, affine, constant, cinv); // capture output
// S := V^8 + V^7 + V^6 + V^4 + V^3 + V^2 + 1;
// F256<x>:=ext<F|S>;
// constant := Random(F256);
// fullElem := x^7 + x^6 + x^5 + x^4 + x^3 + x^2 + x + 1;
// affine := affine_8(F256, fullElem, constant);
// p := allGen_8(0, F256, S, affine, constant, cinv); // capture output
// S := V^8 + V^7 + V^6 + V^5 + V^2 + V + 1;
// F256<x>:=ext<F|S>;
// constant := Random(F256);
// fullElem := x^7 + x^6 + x^5 + x^4 + x^3 + x^2 + x + 1;
// affine := affine_8(F256, fullElem, constant);
// p := allGen_8(0, F256, S, affine, constant, cinv); // capture output
// S := V^8 + V^7 + V^6 + V^5 + V^4 + V + 1;
// F256<x>:=ext<F|S>;
// constant := Random(F256);
// fullElem := x^7 + x^6 + x^5 + x^4 + x^3 + x^2 + x + 1;
// affine := affine_8(F256, fullElem, constant);
// p := allGen_8(0, F256, S, affine, constant, cinv); // capture output
// S := V^8 + V^7 + V^6 + V^5 + V^4 + V^2 + 1;
// F256<x>:=ext<F|S>;
// constant := Random(F256);
// fullElem := x^7 + x^6 + x^5 + x^4 + x^3 + x^2 + x + 1;
// affine := affine_8(F256, fullElem, constant);
// p := allGen_8(0, F256, S, affine, constant, cinv); // capture output
// S := V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + 1;
// F256<x>:=ext<F|S>;
// constant := Random(F256);
// fullElem := x^7 + x^6 + x^5 + x^4 + x^3 + x^2 + x + 1;
// affine := affine_8(F256, fullElem, constant);
// p := allGen_8(0, F256, S, affine, constant, cinv); // capture output

////////////////////////////////////////////////////////////
///////////////  END AES ALTERNATIVE SEARCH  ///////////////
////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////
///////////////   START THESIS TEST CASE 1   ///////////////
////////////////////////////////////////////////////////////
F2 := GF(2);
Poly2<V> := PolynomialRing(F2);
P := V^2 + V + 1;
F4<v> := ext<F2 | P>;
Poly4<W> := PolynomialRing(F4);
Q := W^2 + W + v;
F16<w> := ext<F4 | Q>;
Poly16<X> := PolynomialRing(F16);
R := X^2 + X + (v + 1)*w + v;
F256<x> := ext<F16 | R>;
newSigma := changeSigmaRoot(1, v, F4, v);
newPi := changePiRoot(1, v, w, w^4, F4, F16, (v + 1)*w + v);
gatesInv8(P, Q, R, newSigma, newPi, 1, v, w, w^4, x, x^16);
////////////////////////////////////////////////////////////
///////////////    END THESIS TEST CASE 1    ///////////////
////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////
///////////////   START THESIS TEST CASE 2   ///////////////
////////////////////////////////////////////////////////////
F2 := GF(2);
Poly2<V> := PolynomialRing(F2);
P := V^2 + V + 1;
F4<v> := ext<F2 | P>;
Poly4<W> := PolynomialRing(F4);
Q := W^2 + W + v;
F16<w> := ext<F4 | Q>;
Poly16<X> := PolynomialRing(F16);
R := X^2 + X + ((v + 1)*w + v);
F256<x> := ext<F16 | R>;
Poly256<Y> := PolynomialRing(F256);
S := Y^2 + Y + (v*w + v)*x + w;
F6K<y> := ext<F256 | S>;
gatesInv16(P, Q, R, S, v, ((v + 1)*w + v), (v*w*x + (w + v)), 1, v, 1, w, 1, x, 1, y);
gatesInv16(P, Q, R, S, v, ((v + 1)*w + v), (v*w*x + (w + v)), 1, v, 1, w, x^16, x, 1, y);
gatesInv16(P, Q, R, S, v, ((v + 1)*w + v), (v*w*x + (w + v)), 1, v, 1, w, 1, x^16, 1, y);
gatesInv16(P, Q, R, S, v, ((v + 1)*w + v), (v*w*x + (w + v)), 1, v, 1, w, 1, x, y^256, y);
////////////////////////////////////////////////////////////
///////////////    END THESIS TEST CASE 2    ///////////////
////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////
///////////////    START 16-BIT SEARCH       ///////////////
////////////////////////////////////////////////////////////

// "STARTING BELOW THIS LINE";

// cinv := 1;
// T := V^16 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;

// T := V^16 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;

// T := V^16 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;

// T := V^16 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;

// T := V^16 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;

// T := V^16 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;

// T := V^16 + V^7 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;

// T := V^16 + V^7 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^7 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^7 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^8 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^8 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^8 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^8 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^8 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^8 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^8 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^8 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^8 + V^7 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^8 + V^7 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^8 + V^7 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^8 + V^7 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^8 + V^7 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^8 + V^7 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^8 + V^7 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^8 + V^7 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^8 + V^7 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^8 + V^7 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^9 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^9 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^9 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^9 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^9 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^9 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^9 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^9 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^9 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^9 + V^7 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^9 + V^7 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^9 + V^7 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^9 + V^7 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^9 + V^7 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^9 + V^7 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^9 + V^7 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^9 + V^7 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^9 + V^7 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^9 + V^8 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^9 + V^8 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^9 + V^8 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^9 + V^8 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^9 + V^8 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^9 + V^8 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^9 + V^8 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^9 + V^8 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^9 + V^8 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^9 + V^8 + V^7 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^9 + V^8 + V^7 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^9 + V^8 + V^7 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^9 + V^8 + V^7 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^9 + V^8 + V^7 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^9 + V^8 + V^7 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^9 + V^8 + V^7 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^9 + V^8 + V^7 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^7 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^7 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^7 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^7 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^7 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^7 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^7 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^7 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^8 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^8 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^8 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^8 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^8 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^8 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^8 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^8 + V^7 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^8 + V^7 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^8 + V^7 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^8 + V^7 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^8 + V^7 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^8 + V^7 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^8 + V^7 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^8 + V^7 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^9 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^9 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^9 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^9 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^9 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^9 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^9 + V^7 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^9 + V^7 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^9 + V^7 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^9 + V^7 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^9 + V^7 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^9 + V^7 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^9 + V^8 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^9 + V^8 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^9 + V^8 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^9 + V^8 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^9 + V^8 + V^7 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^9 + V^8 + V^7 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^9 + V^8 + V^7 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^7 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^7 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^7 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^7 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^7 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^7 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^7 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^7 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^7 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^7 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^8 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^8 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^8 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^8 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^8 + V^7 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^8 + V^7 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^8 + V^7 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^8 + V^7 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^8 + V^7 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^8 + V^7 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^8 + V^7 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^8 + V^7 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^8 + V^7 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^9 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^9 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^9 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^9 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^9 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^9 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^9 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^9 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^9 + V^7 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^9 + V^7 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^9 + V^7 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^9 + V^7 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^9 + V^7 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^9 + V^7 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^9 + V^7 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^9 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^9 + V^8 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^9 + V^8 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^9 + V^8 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^9 + V^8 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^9 + V^8 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^9 + V^8 + V^7 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^9 + V^8 + V^7 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^9 + V^8 + V^7 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^9 + V^8 + V^7 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^9 + V^8 + V^7 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^9 + V^8 + V^7 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^9 + V^8 + V^7 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^7 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^7 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^7 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^7 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^7 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^7 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^7 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^7 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^8 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^8 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^8 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^8 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^8 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^8 + V^7 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^8 + V^7 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^8 + V^7 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^8 + V^7 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^8 + V^7 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^8 + V^7 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^8 + V^7 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^8 + V^7 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^8 + V^7 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^9 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^9 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^9 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^9 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^9 + V^7 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^9 + V^7 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^9 + V^7 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^9 + V^7 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^9 + V^7 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^9 + V^7 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^9 + V^7 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^9 + V^7 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^9 + V^8 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^9 + V^8 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^9 + V^8 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^9 + V^8 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^9 + V^8 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^9 + V^8 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^9 + V^8 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^9 + V^8 + V^7 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^9 + V^8 + V^7 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^9 + V^8 + V^7 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^9 + V^8 + V^7 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^9 + V^8 + V^7 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^9 + V^8 + V^7 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^7 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^7 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^7 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^7 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^7 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^7 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^7 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^8 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^8 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^8 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^8 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^8 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^8 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^8 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^8 + V^7 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^8 + V^7 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^8 + V^7 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^8 + V^7 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^8 + V^7 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^8 + V^7 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^9 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^9 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^9 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^9 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^9 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^9 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^9 + V^7 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^9 + V^7 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^9 + V^7 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^9 + V^7 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^9 + V^7 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^9 + V^7 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^9 + V^7 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^9 + V^7 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^9 + V^7 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^9 + V^7 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^9 + V^7 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^9 + V^7 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^9 + V^7 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^9 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^9 + V^8 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^9 + V^8 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^9 + V^8 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^9 + V^8 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^9 + V^8 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^9 + V^8 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^9 + V^8 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^9 + V^8 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^9 + V^8 + V^7 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^9 + V^8 + V^7 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^9 + V^8 + V^7 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^7 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^7 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^7 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^7 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^7 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^7 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^7 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^7 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^8 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^8 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^8 + V^7 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^8 + V^7 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^8 + V^7 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^8 + V^7 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^8 + V^7 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^8 + V^7 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^8 + V^7 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^8 + V^7 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^8 + V^7 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^9 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^9 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^9 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^9 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^9 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^9 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^9 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^9 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^9 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^9 + V^7 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^9 + V^7 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^9 + V^7 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^9 + V^7 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^9 + V^7 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^9 + V^8 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^9 + V^8 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^9 + V^8 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^9 + V^8 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^9 + V^8 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^9 + V^8 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^9 + V^8 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^9 + V^8 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^9 + V^8 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^9 + V^8 + V^7 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^9 + V^8 + V^7 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^9 + V^8 + V^7 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^9 + V^8 + V^7 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^9 + V^8 + V^7 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^7 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^7 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^7 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^7 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^7 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^7 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^7 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^7 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^7 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^7 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^8 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^8 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^8 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^8 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^8 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^8 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^8 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^8 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^8 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^8 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^8 + V^7 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^8 + V^7 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^8 + V^7 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^8 + V^7 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^9 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^9 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^9 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^9 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^9 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^9 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^9 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^9 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^9 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^9 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^9 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^9 + V^7 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^9 + V^7 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^9 + V^7 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^9 + V^7 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^9 + V^7 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^9 + V^8 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^9 + V^8 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^9 + V^8 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^9 + V^8 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^9 + V^8 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^9 + V^8 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^9 + V^8 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^9 + V^8 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^9 + V^8 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^9 + V^8 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^9 + V^8 + V^7 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^9 + V^8 + V^7 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^9 + V^8 + V^7 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^9 + V^8 + V^7 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^9 + V^8 + V^7 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^9 + V^8 + V^7 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^9 + V^8 + V^7 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^9 + V^8 + V^7 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^9 + V^8 + V^7 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^7 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^7 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^7 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^7 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^7 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^7 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^7 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^7 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^7 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^7 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^8 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^8 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^8 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^8 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^8 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^8 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^8 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^8 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^8 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^8 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^8 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^8 + V^7 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^8 + V^7 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^8 + V^7 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^8 + V^7 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^9 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^9 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^9 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^9 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^9 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^9 + V^7 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^9 + V^7 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^9 + V^7 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^9 + V^7 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^9 + V^8 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^9 + V^8 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^9 + V^8 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^9 + V^8 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^9 + V^8 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^9 + V^8 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^9 + V^8 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^9 + V^8 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^9 + V^8 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^9 + V^8 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^7 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^7 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^7 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^7 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^7 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^7 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^7 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^8 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^8 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^8 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^8 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^8 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^8 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^8 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^8 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^8 + V^7 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^8 + V^7 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^8 + V^7 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^8 + V^7 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^8 + V^7 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^8 + V^7 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^8 + V^7 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^8 + V^7 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^9 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^9 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^9 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^9 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^9 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^9 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^9 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^9 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^9 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^9 + V^7 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^9 + V^7 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^9 + V^7 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^9 + V^7 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^9 + V^7 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^9 + V^7 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^9 + V^7 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^9 + V^7 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^9 + V^7 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^9 + V^7 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^9 + V^8 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^9 + V^8 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^9 + V^8 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^9 + V^8 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^9 + V^8 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^9 + V^8 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^9 + V^8 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^9 + V^8 + V^7 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^9 + V^8 + V^7 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^9 + V^8 + V^7 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^9 + V^8 + V^7 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^9 + V^8 + V^7 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^9 + V^8 + V^7 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^7 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^7 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^7 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^7 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^7 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^7 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^7 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^8 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^8 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^8 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^8 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^8 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^8 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^8 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^8 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^8 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^8 + V^7 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^8 + V^7 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^8 + V^7 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^8 + V^7 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^8 + V^7 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^8 + V^7 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^9 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^9 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^9 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^9 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^9 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^9 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^9 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^9 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^9 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^9 + V^7 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^9 + V^7 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^9 + V^7 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^9 + V^7 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^9 + V^7 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^9 + V^8 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^9 + V^8 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^9 + V^8 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^9 + V^8 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^9 + V^8 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^9 + V^8 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^9 + V^8 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^9 + V^8 + V^7 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^9 + V^8 + V^7 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^9 + V^8 + V^7 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^9 + V^8 + V^7 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^7 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^7 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^7 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^7 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^7 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^7 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^8 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^8 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^8 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^8 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^8 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^8 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^8 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^8 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^8 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^8 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^8 + V^7 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^8 + V^7 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^8 + V^7 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^8 + V^7 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^8 + V^7 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^8 + V^7 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^8 + V^7 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^8 + V^7 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^8 + V^7 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^9 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^9 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^9 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^9 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^9 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^9 + V^7 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^9 + V^7 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^9 + V^7 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^9 + V^7 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^9 + V^7 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^9 + V^7 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^9 + V^7 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^9 + V^7 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^9 + V^7 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^9 + V^8 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^9 + V^8 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^9 + V^8 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^9 + V^8 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^9 + V^8 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^9 + V^8 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^9 + V^8 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^9 + V^8 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^9 + V^8 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^9 + V^8 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^9 + V^8 + V^7 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^9 + V^8 + V^7 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^9 + V^8 + V^7 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^9 + V^8 + V^7 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^9 + V^8 + V^7 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^9 + V^8 + V^7 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^9 + V^8 + V^7 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^7 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^7 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^7 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^7 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^7 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^7 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^7 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^7 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^8 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^8 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^8 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^8 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^8 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^8 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^8 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^8 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^8 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^8 + V^7 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^8 + V^7 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^8 + V^7 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^8 + V^7 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^8 + V^7 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^8 + V^7 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^8 + V^7 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^9 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^9 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^9 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^9 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^9 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^9 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^9 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^9 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^9 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^9 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^9 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^9 + V^7 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^9 + V^7 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^9 + V^7 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^9 + V^7 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^9 + V^7 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^9 + V^7 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^9 + V^8 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^9 + V^8 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^9 + V^8 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^9 + V^8 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^9 + V^8 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^9 + V^8 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^9 + V^8 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^9 + V^8 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^9 + V^8 + V^7 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^9 + V^8 + V^7 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^9 + V^8 + V^7 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^9 + V^8 + V^7 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^9 + V^8 + V^7 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^9 + V^8 + V^7 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^7 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^7 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^7 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^7 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^7 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^7 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^7 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^7 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^7 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^7 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^8 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^8 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^8 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^8 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^8 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^8 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^8 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^8 + V^7 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^8 + V^7 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^8 + V^7 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^8 + V^7 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^8 + V^7 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^9 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^9 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^9 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^9 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^9 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^9 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^9 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^9 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^9 + V^7 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^9 + V^7 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^9 + V^7 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^9 + V^7 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^9 + V^7 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^9 + V^7 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^9 + V^7 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^9 + V^7 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^9 + V^7 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^9 + V^8 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^9 + V^8 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^9 + V^8 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^9 + V^8 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^9 + V^8 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^9 + V^8 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^9 + V^8 + V^7 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^9 + V^8 + V^7 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^9 + V^8 + V^7 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^9 + V^8 + V^7 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^9 + V^8 + V^7 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^9 + V^8 + V^7 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^7 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^7 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^7 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^7 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^7 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^8 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^8 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^8 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^8 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^8 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^8 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^8 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^8 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^8 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^8 + V^7 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^8 + V^7 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^8 + V^7 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^8 + V^7 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^8 + V^7 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^8 + V^7 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^9 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^9 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^9 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^9 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^9 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^9 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^9 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^9 + V^7 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^9 + V^7 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^9 + V^7 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^9 + V^7 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^9 + V^7 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^9 + V^7 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^9 + V^7 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^9 + V^7 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^9 + V^8 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^9 + V^8 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^9 + V^8 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^9 + V^8 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^9 + V^8 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^9 + V^8 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^9 + V^8 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^9 + V^8 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^9 + V^8 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^9 + V^8 + V^7 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^9 + V^8 + V^7 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^9 + V^8 + V^7 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^9 + V^8 + V^7 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^9 + V^8 + V^7 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^7 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^7 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^7 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^7 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^7 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^7 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^7 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^8 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^8 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^8 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^8 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^8 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^8 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^8 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^8 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^8 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^8 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^8 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^8 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^8 + V^7 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^8 + V^7 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^8 + V^7 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^8 + V^7 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^8 + V^7 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^8 + V^7 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^8 + V^7 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^9 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^9 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^9 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^9 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^9 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^9 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^9 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^9 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^9 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^9 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^9 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^9 + V^7 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^9 + V^7 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^9 + V^7 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^9 + V^7 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^9 + V^7 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^9 + V^7 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^9 + V^7 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^9 + V^7 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^9 + V^8 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^9 + V^8 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^9 + V^8 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^9 + V^8 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^9 + V^8 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^9 + V^8 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^9 + V^8 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^9 + V^8 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^9 + V^8 + V^7 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^9 + V^8 + V^7 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^9 + V^8 + V^7 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^9 + V^8 + V^7 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^9 + V^8 + V^7 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^9 + V^8 + V^7 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^9 + V^8 + V^7 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^9 + V^8 + V^7 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^7 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^7 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^7 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^7 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^7 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^8 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^8 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^8 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^8 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^8 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^8 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^8 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^8 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^8 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^8 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^8 + V^7 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^8 + V^7 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^8 + V^7 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^8 + V^7 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^8 + V^7 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^8 + V^7 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^8 + V^7 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^8 + V^7 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^9 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^9 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^9 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^9 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^9 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^9 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^9 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^9 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^9 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^9 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^9 + V^7 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^9 + V^7 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^9 + V^7 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^9 + V^7 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^7 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^7 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^7 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^7 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^7 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^7 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^7 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^7 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^8 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^8 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^8 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^8 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^8 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^8 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^8 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^8 + V^7 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^8 + V^7 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^8 + V^7 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^8 + V^7 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^8 + V^7 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^8 + V^7 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^8 + V^7 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^8 + V^7 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^8 + V^7 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^9 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^9 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^9 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^9 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^9 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^9 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^9 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^9 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^9 + V^7 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^9 + V^7 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^9 + V^7 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^9 + V^7 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^9 + V^7 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^9 + V^7 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^9 + V^7 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^9 + V^7 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^9 + V^7 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^9 + V^7 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^9 + V^8 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^9 + V^8 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^9 + V^8 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^9 + V^8 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^9 + V^8 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^9 + V^8 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^9 + V^8 + V^7 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^9 + V^8 + V^7 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^9 + V^8 + V^7 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^9 + V^8 + V^7 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^7 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^7 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^7 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^7 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^7 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^7 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^7 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^7 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^7 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^8 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^8 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^8 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^8 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^8 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^8 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^8 + V^7 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^8 + V^7 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^8 + V^7 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^8 + V^7 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^8 + V^7 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^8 + V^7 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^8 + V^7 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^8 + V^7 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^9 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^9 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^9 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^9 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^9 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^9 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^9 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^9 + V^7 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^9 + V^7 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^9 + V^7 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^9 + V^7 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^9 + V^7 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^9 + V^7 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^9 + V^7 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^9 + V^8 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^9 + V^8 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^9 + V^8 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^9 + V^8 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^9 + V^8 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^9 + V^8 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^9 + V^8 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^9 + V^8 + V^7 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^9 + V^8 + V^7 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^9 + V^8 + V^7 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^9 + V^8 + V^7 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^9 + V^8 + V^7 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^9 + V^8 + V^7 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^9 + V^8 + V^7 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^7 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^7 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^7 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^7 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^7 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^7 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^7 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^8 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^8 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^8 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^8 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^8 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^8 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^8 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^8 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^8 + V^7 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^8 + V^7 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^8 + V^7 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^8 + V^7 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^9 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^9 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^9 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^9 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^9 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^9 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^9 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^9 + V^7 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^9 + V^7 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^9 + V^7 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^9 + V^7 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^9 + V^7 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^9 + V^7 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^9 + V^7 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^9 + V^7 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^9 + V^7 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^9 + V^7 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^9 + V^7 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^9 + V^7 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^9 + V^8 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^9 + V^8 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^9 + V^8 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^9 + V^8 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^9 + V^8 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^9 + V^8 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^9 + V^8 + V^7 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^9 + V^8 + V^7 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^9 + V^8 + V^7 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^9 + V^8 + V^7 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^9 + V^8 + V^7 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^9 + V^8 + V^7 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^9 + V^8 + V^7 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^9 + V^8 + V^7 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^7 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^7 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^7 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^7 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^7 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^7 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^7 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^8 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^8 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^8 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^8 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^8 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^8 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^8 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^8 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^8 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^8 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^8 + V^7 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^8 + V^7 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^8 + V^7 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^8 + V^7 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^8 + V^7 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^8 + V^7 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^8 + V^7 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^9 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^9 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^9 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^9 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^9 + V^7 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^9 + V^7 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^9 + V^7 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^9 + V^7 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^9 + V^7 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^9 + V^7 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^9 + V^7 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^9 + V^7 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^9 + V^8 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^9 + V^8 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^9 + V^8 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^9 + V^8 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^9 + V^8 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^9 + V^8 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^9 + V^8 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^9 + V^8 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^9 + V^8 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^9 + V^8 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^9 + V^8 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^9 + V^8 + V^7 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^9 + V^8 + V^7 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^7 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^7 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^7 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^7 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^7 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^7 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^7 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^7 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^8 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^8 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^8 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^8 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^8 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^8 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^8 + V^7 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^8 + V^7 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^8 + V^7 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^8 + V^7 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^8 + V^7 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^8 + V^7 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^8 + V^7 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^8 + V^7 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^8 + V^7 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^9 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^9 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^9 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^9 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^9 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^9 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^9 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^9 + V^7 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^9 + V^7 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^9 + V^7 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^9 + V^7 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^9 + V^7 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^9 + V^7 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^9 + V^7 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^9 + V^7 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^9 + V^7 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^9 + V^8 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^9 + V^8 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^9 + V^8 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^9 + V^8 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^9 + V^8 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^9 + V^8 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^9 + V^8 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^9 + V^8 + V^7 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^9 + V^8 + V^7 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^9 + V^8 + V^7 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^9 + V^8 + V^7 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^9 + V^8 + V^7 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^9 + V^8 + V^7 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^9 + V^8 + V^7 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^9 + V^8 + V^7 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^7 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^7 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^7 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^7 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^7 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^7 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^7 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^7 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^7 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^7 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^8 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^8 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^8 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^8 + V^7 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^8 + V^7 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^8 + V^7 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^8 + V^7 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^8 + V^7 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^8 + V^7 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^8 + V^7 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^8 + V^7 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^9 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^9 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^9 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^9 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^9 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^9 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^9 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^9 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^9 + V^7 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^9 + V^7 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^9 + V^7 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^9 + V^7 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^9 + V^7 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^9 + V^7 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^9 + V^7 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^9 + V^7 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^9 + V^7 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^9 + V^8 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^9 + V^8 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^9 + V^8 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^9 + V^8 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^9 + V^8 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^9 + V^8 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^9 + V^8 + V^7 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^9 + V^8 + V^7 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^9 + V^8 + V^7 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^9 + V^8 + V^7 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^9 + V^8 + V^7 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^10 + V^9 + V^8 + V^7 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^7 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^7 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^7 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^7 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^7 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^7 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^7 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^7 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^7 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^7 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^8 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^8 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^8 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^8 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^8 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^8 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^8 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^8 + V^7 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^8 + V^7 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^8 + V^7 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^8 + V^7 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^8 + V^7 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^8 + V^7 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^8 + V^7 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^8 + V^7 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^8 + V^7 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^8 + V^7 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^8 + V^7 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^9 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^9 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^9 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^9 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^9 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^9 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^9 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^9 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^9 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^9 + V^7 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^9 + V^7 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^9 + V^7 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^9 + V^7 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^9 + V^7 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^9 + V^7 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^9 + V^7 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^9 + V^7 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^9 + V^8 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^9 + V^8 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^9 + V^8 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^9 + V^8 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^9 + V^8 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^9 + V^8 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^9 + V^8 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^9 + V^8 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^9 + V^8 + V^7 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^9 + V^8 + V^7 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^9 + V^8 + V^7 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^9 + V^8 + V^7 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^9 + V^8 + V^7 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^7 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^7 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^7 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^7 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^7 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^7 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^7 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^7 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^7 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^7 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^8 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^8 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^8 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^8 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^8 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^8 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^8 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^8 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^8 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^8 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^8 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^8 + V^7 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^8 + V^7 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^8 + V^7 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^8 + V^7 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^8 + V^7 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^8 + V^7 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^9 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^9 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^9 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^9 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^9 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^9 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^9 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^9 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^9 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^9 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^9 + V^7 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^9 + V^7 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^9 + V^7 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^9 + V^8 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^9 + V^8 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^9 + V^8 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^9 + V^8 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^9 + V^8 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^7 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^7 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^7 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^7 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^8 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^8 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^8 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^8 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^8 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^8 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^8 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^8 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^8 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^8 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^8 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^8 + V^7 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^8 + V^7 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^8 + V^7 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^8 + V^7 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^8 + V^7 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^8 + V^7 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^9 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^9 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^9 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^9 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^9 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^9 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^9 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^9 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^9 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^9 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^9 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^9 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^9 + V^7 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^9 + V^7 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^9 + V^7 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^9 + V^7 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^9 + V^7 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^9 + V^7 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^9 + V^7 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^9 + V^7 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^9 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^9 + V^8 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^9 + V^8 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^9 + V^8 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^9 + V^8 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^9 + V^8 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^9 + V^8 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^9 + V^8 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^9 + V^8 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^9 + V^8 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^9 + V^8 + V^7 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^9 + V^8 + V^7 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^9 + V^8 + V^7 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^9 + V^8 + V^7 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^9 + V^8 + V^7 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^7 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^7 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^7 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^7 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^7 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^7 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^8 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^8 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^8 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^8 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^8 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^8 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^8 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^8 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^8 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^8 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^8 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^8 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^8 + V^7 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^8 + V^7 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^8 + V^7 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^8 + V^7 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^8 + V^7 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^8 + V^7 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^8 + V^7 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^8 + V^7 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^8 + V^7 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^9 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^9 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^9 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^9 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^9 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^9 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^9 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^9 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^9 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^9 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^9 + V^7 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^9 + V^7 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^9 + V^7 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^9 + V^7 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^9 + V^8 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^9 + V^8 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^9 + V^8 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^9 + V^8 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^9 + V^8 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^9 + V^8 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^9 + V^8 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^9 + V^8 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^9 + V^8 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^9 + V^8 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^9 + V^8 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^9 + V^8 + V^7 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^9 + V^8 + V^7 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^9 + V^8 + V^7 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^9 + V^8 + V^7 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^9 + V^8 + V^7 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^7 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^7 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^7 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^7 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^7 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^7 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^7 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^7 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^8 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^8 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^8 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^8 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^8 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^8 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^8 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^8 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^8 + V^7 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^8 + V^7 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^8 + V^7 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^8 + V^7 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^8 + V^7 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^8 + V^7 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^8 + V^7 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^8 + V^7 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^9 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^9 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^9 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^9 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^9 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^9 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^9 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^9 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^9 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^9 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^9 + V^7 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^9 + V^7 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^9 + V^7 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^9 + V^7 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^9 + V^7 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^9 + V^7 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^9 + V^7 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^9 + V^7 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^9 + V^7 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^9 + V^7 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^9 + V^8 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^9 + V^8 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^9 + V^8 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^9 + V^8 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^9 + V^8 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^9 + V^8 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^9 + V^8 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^9 + V^8 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^9 + V^8 + V^7 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^9 + V^8 + V^7 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^9 + V^8 + V^7 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^9 + V^8 + V^7 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^9 + V^8 + V^7 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^9 + V^8 + V^7 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^9 + V^8 + V^7 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^7 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^7 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^7 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^7 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^7 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^7 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^7 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^8 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^8 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^8 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^8 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^8 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^8 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^8 + V^7 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^8 + V^7 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^8 + V^7 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^8 + V^7 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^8 + V^7 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^8 + V^7 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^8 + V^7 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^8 + V^7 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^8 + V^7 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^9 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^9 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^9 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^9 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^9 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^9 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^9 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^9 + V^7 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^9 + V^7 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^9 + V^7 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^9 + V^7 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^9 + V^7 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^9 + V^7 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^9 + V^7 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^9 + V^7 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^9 + V^8 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^9 + V^8 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^9 + V^8 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^9 + V^8 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^9 + V^8 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^9 + V^8 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^9 + V^8 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^9 + V^8 + V^7 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^9 + V^8 + V^7 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^9 + V^8 + V^7 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^9 + V^8 + V^7 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^9 + V^8 + V^7 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^7 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^7 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^7 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^7 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^7 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^7 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^7 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^8 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^8 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^8 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^8 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^8 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^8 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^8 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^8 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^8 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^8 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^8 + V^7 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^8 + V^7 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^8 + V^7 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^8 + V^7 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^8 + V^7 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^8 + V^7 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^9 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^9 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^9 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^9 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^9 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^9 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^9 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^9 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^9 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^9 + V^7 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^9 + V^7 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^9 + V^7 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^9 + V^7 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^9 + V^7 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^9 + V^7 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^9 + V^7 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^9 + V^7 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^9 + V^7 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^9 + V^7 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^9 + V^7 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^9 + V^8 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^9 + V^8 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^9 + V^8 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^9 + V^8 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^9 + V^8 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^9 + V^8 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^9 + V^8 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^9 + V^8 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^9 + V^8 + V^7 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^9 + V^8 + V^7 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^9 + V^8 + V^7 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^9 + V^8 + V^7 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^9 + V^8 + V^7 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^9 + V^8 + V^7 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^9 + V^8 + V^7 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^7 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^7 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^7 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^7 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^7 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^7 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^7 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^7 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^7 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^7 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^7 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^8 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^8 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^8 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^8 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^8 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^8 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^8 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^8 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^8 + V^7 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^8 + V^7 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^8 + V^7 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^8 + V^7 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^8 + V^7 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^8 + V^7 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^8 + V^7 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^9 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^9 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^9 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^9 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^9 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^9 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^9 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^9 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^9 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^9 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^9 + V^7 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^9 + V^7 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^9 + V^7 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^9 + V^7 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^9 + V^7 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^9 + V^7 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^9 + V^8 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^9 + V^8 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^9 + V^8 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^9 + V^8 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^9 + V^8 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^9 + V^8 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^9 + V^8 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^9 + V^8 + V^7 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^9 + V^8 + V^7 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^9 + V^8 + V^7 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^9 + V^8 + V^7 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^9 + V^8 + V^7 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^9 + V^8 + V^7 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^9 + V^8 + V^7 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^7 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^7 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^7 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^7 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^7 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^7 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^7 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^7 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^7 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^7 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^8 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^8 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^8 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^8 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^8 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^8 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^8 + V^7 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^8 + V^7 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^8 + V^7 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^8 + V^7 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^8 + V^7 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^8 + V^7 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^8 + V^7 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^8 + V^7 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^9 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^9 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^9 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^9 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^9 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^9 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^9 + V^7 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^9 + V^7 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^9 + V^7 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^9 + V^7 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^9 + V^7 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^9 + V^7 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^9 + V^7 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^9 + V^7 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^9 + V^7 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^9 + V^7 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^9 + V^8 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^9 + V^8 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^9 + V^8 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^9 + V^8 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^9 + V^8 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^9 + V^8 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^9 + V^8 + V^7 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^9 + V^8 + V^7 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^9 + V^8 + V^7 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^9 + V^8 + V^7 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^9 + V^8 + V^7 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^9 + V^8 + V^7 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^9 + V^8 + V^7 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^9 + V^8 + V^7 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^7 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^7 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^7 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^7 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^7 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^7 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^7 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^8 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^8 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^8 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^8 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^8 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^8 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^8 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^8 + V^7 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^8 + V^7 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^8 + V^7 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^8 + V^7 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^8 + V^7 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^8 + V^7 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^8 + V^7 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^7 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^7 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^7 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^7 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^7 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^7 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^7 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^7 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^7 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^7 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^7 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^8 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^8 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^8 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^8 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^8 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^8 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^8 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^8 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^8 + V^7 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^8 + V^7 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^8 + V^7 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^8 + V^7 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^8 + V^7 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^8 + V^7 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^9 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^9 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^9 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^9 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^9 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^9 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^9 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^9 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^9 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^9 + V^7 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^9 + V^7 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^9 + V^7 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^9 + V^7 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^9 + V^7 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^9 + V^7 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^9 + V^7 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^9 + V^7 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^9 + V^7 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^9 + V^7 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^9 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^9 + V^8 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^9 + V^8 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^9 + V^8 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^9 + V^8 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^9 + V^8 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^9 + V^8 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^9 + V^8 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^9 + V^8 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^9 + V^8 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^9 + V^8 + V^7 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^9 + V^8 + V^7 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^9 + V^8 + V^7 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^9 + V^8 + V^7 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^9 + V^8 + V^7 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^9 + V^8 + V^7 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^9 + V^8 + V^7 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^9 + V^8 + V^7 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^9 + V^8 + V^7 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^7 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^7 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^7 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^7 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^7 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^7 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^7 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^7 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^8 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^8 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^8 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^8 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^8 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^8 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^8 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^8 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^8 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^8 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^8 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^8 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^8 + V^7 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^8 + V^7 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^8 + V^7 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^8 + V^7 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^8 + V^7 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^8 + V^7 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^8 + V^7 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^9 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^9 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^9 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^9 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^9 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^9 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^9 + V^7 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^9 + V^7 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^9 + V^7 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^9 + V^7 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^9 + V^7 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^9 + V^8 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^9 + V^8 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^9 + V^8 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^9 + V^8 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^9 + V^8 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^9 + V^8 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^9 + V^8 + V^7 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^9 + V^8 + V^7 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^9 + V^8 + V^7 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^9 + V^8 + V^7 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^9 + V^8 + V^7 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^7 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^7 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^7 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^7 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^7 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^7 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^7 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^7 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^8 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^8 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^8 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^8 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^8 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^8 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^8 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^8 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^8 + V^7 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^8 + V^7 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^8 + V^7 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^8 + V^7 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^8 + V^7 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^8 + V^7 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^8 + V^7 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^9 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^9 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^9 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^9 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^9 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^9 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^9 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^9 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^9 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^9 + V^7 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^9 + V^7 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^9 + V^7 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^9 + V^7 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^9 + V^7 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^9 + V^7 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^9 + V^8 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^9 + V^8 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^9 + V^8 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^9 + V^8 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^9 + V^8 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^9 + V^8 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^9 + V^8 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^9 + V^8 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^9 + V^8 + V^7 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^9 + V^8 + V^7 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^9 + V^8 + V^7 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^9 + V^8 + V^7 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^9 + V^8 + V^7 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^9 + V^8 + V^7 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^7 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^7 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^7 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^7 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^7 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^7 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^7 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^7 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^7 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^8 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^8 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^8 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^8 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^8 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^8 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^8 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^8 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^8 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^8 + V^7 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^8 + V^7 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^8 + V^7 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^8 + V^7 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^8 + V^7 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^8 + V^7 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^8 + V^7 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^8 + V^7 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^9 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^9 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^9 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^9 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^9 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^9 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^9 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^9 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^9 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^9 + V^7 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^9 + V^7 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^9 + V^7 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^9 + V^7 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^9 + V^7 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^9 + V^7 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^9 + V^7 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^9 + V^8 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^9 + V^8 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^9 + V^8 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^9 + V^8 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^9 + V^8 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^9 + V^8 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^9 + V^8 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^9 + V^8 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^9 + V^8 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^9 + V^8 + V^7 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^9 + V^8 + V^7 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^9 + V^8 + V^7 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^7 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^7 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^7 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^7 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^7 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^7 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^7 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^8 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^8 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^8 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^8 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^8 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^8 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^8 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^8 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^8 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^8 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^8 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^8 + V^7 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^8 + V^7 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^8 + V^7 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^8 + V^7 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^8 + V^7 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^8 + V^7 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^8 + V^7 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^8 + V^7 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^9 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^9 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^9 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^9 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^9 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^9 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^9 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^9 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^9 + V^7 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^9 + V^7 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^9 + V^7 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^9 + V^7 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^9 + V^7 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^9 + V^7 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^9 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^9 + V^8 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^9 + V^8 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^9 + V^8 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^9 + V^8 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^9 + V^8 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^9 + V^8 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^9 + V^8 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^9 + V^8 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^9 + V^8 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^9 + V^8 + V^7 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^9 + V^8 + V^7 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^9 + V^8 + V^7 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^9 + V^8 + V^7 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^9 + V^8 + V^7 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^9 + V^8 + V^7 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^9 + V^8 + V^7 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^9 + V^8 + V^7 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^7 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^7 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^7 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^7 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^7 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^7 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^7 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^7 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^8 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^8 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^8 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^8 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^8 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^8 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^8 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^8 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^8 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^8 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^8 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^8 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^8 + V^7 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^8 + V^7 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^8 + V^7 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^8 + V^7 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^8 + V^7 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^8 + V^7 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^8 + V^7 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^9 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^9 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^9 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^9 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^9 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^9 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^9 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^9 + V^7 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^9 + V^7 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^9 + V^7 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^9 + V^7 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^9 + V^7 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^9 + V^8 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^9 + V^8 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^9 + V^8 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^9 + V^8 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^9 + V^8 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^9 + V^8 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^9 + V^8 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^9 + V^8 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^9 + V^8 + V^7 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^9 + V^8 + V^7 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^9 + V^8 + V^7 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^9 + V^8 + V^7 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^9 + V^8 + V^7 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^9 + V^8 + V^7 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^7 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^7 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^7 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^7 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^7 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^8 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^8 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^8 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^8 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^8 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^8 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^8 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^8 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^8 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^8 + V^7 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^8 + V^7 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^8 + V^7 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^8 + V^7 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^8 + V^7 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^8 + V^7 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^8 + V^7 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^8 + V^7 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^9 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^9 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^9 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^9 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^9 + V^7 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^9 + V^7 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^9 + V^7 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^9 + V^7 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^9 + V^7 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^9 + V^7 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^9 + V^7 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^9 + V^8 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^9 + V^8 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^9 + V^8 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^9 + V^8 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^9 + V^8 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^9 + V^8 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^9 + V^8 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^9 + V^8 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^9 + V^8 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^9 + V^8 + V^7 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^9 + V^8 + V^7 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^9 + V^8 + V^7 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^9 + V^8 + V^7 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^9 + V^8 + V^7 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^9 + V^8 + V^7 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^9 + V^8 + V^7 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^7 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^7 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^7 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^7 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^7 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^7 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^7 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^7 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^8 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^8 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^8 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^8 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^8 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^8 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^8 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^8 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^8 + V^7 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^8 + V^7 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^8 + V^7 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^8 + V^7 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^8 + V^7 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^8 + V^7 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^8 + V^7 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^8 + V^7 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^9 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^9 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^9 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^9 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^9 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^9 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^9 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^9 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^9 + V^7 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^9 + V^7 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^9 + V^7 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^9 + V^7 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^9 + V^7 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^9 + V^8 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^9 + V^8 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^9 + V^8 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^9 + V^8 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^9 + V^8 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^9 + V^8 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^9 + V^8 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^9 + V^8 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^9 + V^8 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^9 + V^8 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^9 + V^8 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^7 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^7 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^7 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^7 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^7 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^7 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^8 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^8 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^8 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^8 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^8 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^8 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^8 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^8 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^8 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^8 + V^7 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^8 + V^7 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^8 + V^7 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^8 + V^7 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^8 + V^7 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^9 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^9 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^9 + V^7 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^9 + V^7 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^9 + V^7 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^9 + V^7 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^9 + V^7 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^9 + V^7 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^9 + V^7 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^9 + V^7 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^9 + V^7 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^9 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^9 + V^8 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^9 + V^8 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^9 + V^8 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^9 + V^8 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^9 + V^8 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^9 + V^8 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^9 + V^8 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^9 + V^8 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^9 + V^8 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^9 + V^8 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^9 + V^8 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^9 + V^8 + V^7 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^9 + V^8 + V^7 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^9 + V^8 + V^7 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^9 + V^8 + V^7 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^9 + V^8 + V^7 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^9 + V^8 + V^7 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^7 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^7 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^7 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^7 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^7 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^7 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^7 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^7 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^7 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^8 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^8 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^8 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^8 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^8 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^8 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^8 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^8 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^8 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^8 + V^7 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^8 + V^7 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^8 + V^7 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^8 + V^7 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^8 + V^7 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^8 + V^7 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^8 + V^7 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^8 + V^7 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^8 + V^7 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^9 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^9 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^9 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^9 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^9 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^9 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^9 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^9 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^9 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^9 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^9 + V^7 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^9 + V^7 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^9 + V^7 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^9 + V^7 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^9 + V^7 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^9 + V^7 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^9 + V^8 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^9 + V^8 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^9 + V^8 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^9 + V^8 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^9 + V^8 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^9 + V^8 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^9 + V^8 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^9 + V^8 + V^7 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^9 + V^8 + V^7 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^9 + V^8 + V^7 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^9 + V^8 + V^7 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^9 + V^8 + V^7 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^7 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^7 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^7 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^7 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^8 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^8 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^8 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^8 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^8 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^8 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^8 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^8 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^8 + V^7 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^8 + V^7 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^8 + V^7 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^8 + V^7 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^8 + V^7 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^8 + V^7 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^8 + V^7 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^8 + V^7 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^9 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^9 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^9 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^9 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^9 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^9 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^9 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^9 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^9 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^9 + V^7 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^9 + V^7 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^9 + V^7 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^9 + V^7 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^9 + V^7 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^9 + V^7 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^9 + V^7 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^9 + V^7 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^9 + V^7 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^9 + V^8 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^9 + V^8 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^9 + V^8 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^9 + V^8 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^9 + V^8 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^9 + V^8 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^9 + V^8 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^9 + V^8 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^9 + V^8 + V^7 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^9 + V^8 + V^7 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^9 + V^8 + V^7 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^9 + V^8 + V^7 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^9 + V^8 + V^7 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^9 + V^8 + V^7 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^9 + V^8 + V^7 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^9 + V^8 + V^7 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^9 + V^8 + V^7 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^9 + V^8 + V^7 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^7 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^7 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^7 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^7 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^7 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^7 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^7 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^8 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^8 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^8 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^8 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^8 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^8 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^8 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^8 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^8 + V^7 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^8 + V^7 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^8 + V^7 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^8 + V^7 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^8 + V^7 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^8 + V^7 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^8 + V^7 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^8 + V^7 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^9 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^9 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^9 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^9 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^9 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^9 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^9 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^9 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^9 + V^7 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^9 + V^7 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^9 + V^7 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^9 + V^7 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^9 + V^7 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^9 + V^7 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^9 + V^7 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^9 + V^7 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^9 + V^8 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^9 + V^8 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^9 + V^8 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^9 + V^8 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^9 + V^8 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^9 + V^8 + V^7 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^9 + V^8 + V^7 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^9 + V^8 + V^7 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^9 + V^8 + V^7 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^7 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^7 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^7 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^7 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^7 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^7 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^7 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^7 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^7 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^7 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^8 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^8 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^8 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^8 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^8 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^8 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^8 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^8 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^8 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^8 + V^7 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^8 + V^7 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^8 + V^7 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^8 + V^7 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^8 + V^7 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^8 + V^7 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^8 + V^7 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^8 + V^7 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^9 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^9 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^9 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^9 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^9 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^9 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^9 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^9 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^9 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^9 + V^7 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^9 + V^7 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^9 + V^7 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^9 + V^7 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^9 + V^7 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^9 + V^7 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^9 + V^7 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^9 + V^7 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^9 + V^8 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^9 + V^8 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^9 + V^8 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^9 + V^8 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^9 + V^8 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^9 + V^8 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^9 + V^8 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^9 + V^8 + V^7 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^9 + V^8 + V^7 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^9 + V^8 + V^7 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^9 + V^8 + V^7 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^9 + V^8 + V^7 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^9 + V^8 + V^7 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^9 + V^8 + V^7 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^7 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^7 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^7 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^7 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^7 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^8 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^8 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^8 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^8 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^8 + V^7 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^8 + V^7 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^8 + V^7 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^8 + V^7 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^8 + V^7 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^8 + V^7 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^8 + V^7 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^8 + V^7 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^8 + V^7 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^8 + V^7 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^9 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^9 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^9 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^9 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^9 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^9 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^9 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^9 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^9 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^9 + V^7 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^9 + V^7 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^9 + V^7 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^9 + V^7 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^9 + V^7 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^9 + V^7 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^9 + V^7 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^9 + V^8 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^9 + V^8 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^9 + V^8 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^9 + V^8 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^9 + V^8 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^9 + V^8 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^9 + V^8 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^9 + V^8 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^9 + V^8 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^9 + V^8 + V^7 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^9 + V^8 + V^7 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^9 + V^8 + V^7 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^9 + V^8 + V^7 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^9 + V^8 + V^7 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^9 + V^8 + V^7 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^9 + V^8 + V^7 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^7 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^7 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^7 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^7 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^7 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^7 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^7 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^8 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^8 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^8 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^8 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^8 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^8 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^8 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^8 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^8 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^8 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^8 + V^7 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^8 + V^7 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^8 + V^7 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^8 + V^7 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^8 + V^7 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^8 + V^7 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^8 + V^7 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^9 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^9 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^9 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^9 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^9 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^9 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^9 + V^7 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^9 + V^7 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^9 + V^7 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^9 + V^7 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^9 + V^7 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^9 + V^7 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^9 + V^7 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^9 + V^7 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^9 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^9 + V^8 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^9 + V^8 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^9 + V^8 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^9 + V^8 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^9 + V^8 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^9 + V^8 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^9 + V^8 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^9 + V^8 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^9 + V^8 + V^7 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^9 + V^8 + V^7 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^9 + V^8 + V^7 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^9 + V^8 + V^7 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^9 + V^8 + V^7 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^7 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^7 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^7 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^7 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^7 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^7 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^7 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^7 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^8 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^8 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^8 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^8 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^8 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^8 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^8 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^8 + V^7 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^8 + V^7 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^8 + V^7 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^8 + V^7 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^8 + V^7 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^8 + V^7 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^8 + V^7 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^8 + V^7 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^9 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^9 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^9 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^9 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^9 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^9 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^9 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^9 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^9 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^9 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^9 + V^7 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^9 + V^7 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^9 + V^7 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^7 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^7 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^7 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^7 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^7 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^7 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^7 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^7 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^7 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^8 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^8 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^8 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^8 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^8 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^8 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^8 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^8 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^8 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^8 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^8 + V^7 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^8 + V^7 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^8 + V^7 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^8 + V^7 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^8 + V^7 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^8 + V^7 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^8 + V^7 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^8 + V^7 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^9 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^9 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^9 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^9 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^9 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^9 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^9 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^9 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^9 + V^7 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^9 + V^7 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^9 + V^7 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^9 + V^7 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^9 + V^7 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^9 + V^7 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^9 + V^7 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^9 + V^7 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^9 + V^8 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^9 + V^8 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^9 + V^8 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^9 + V^8 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^9 + V^8 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^9 + V^8 + V^7 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^9 + V^8 + V^7 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^9 + V^8 + V^7 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^9 + V^8 + V^7 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^9 + V^8 + V^7 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^9 + V^8 + V^7 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^9 + V^8 + V^7 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^9 + V^8 + V^7 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^9 + V^8 + V^7 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^7 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^7 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^7 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^7 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^7 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^8 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^8 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^8 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^8 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^8 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^8 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^8 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^8 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^8 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^8 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^8 + V^7 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^8 + V^7 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^8 + V^7 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^8 + V^7 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^8 + V^7 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^8 + V^7 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^8 + V^7 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^8 + V^7 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^9 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^9 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^9 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^9 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^9 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^9 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^9 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^9 + V^7 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^9 + V^7 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^9 + V^7 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^9 + V^7 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^9 + V^7 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^9 + V^8 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^9 + V^8 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^9 + V^8 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^9 + V^8 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^9 + V^8 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^9 + V^8 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^9 + V^8 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^9 + V^8 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^9 + V^8 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^9 + V^8 + V^7 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^9 + V^8 + V^7 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^9 + V^8 + V^7 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^9 + V^8 + V^7 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^9 + V^8 + V^7 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^9 + V^8 + V^7 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^7 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^7 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^7 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^7 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^7 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^7 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^7 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^7 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^8 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^8 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^8 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^8 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^8 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^8 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^8 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^8 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^8 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^8 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^8 + V^7 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^8 + V^7 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^8 + V^7 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^8 + V^7 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^8 + V^7 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^8 + V^7 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^8 + V^7 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^8 + V^7 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^9 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^9 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^9 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^9 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^9 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^9 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^9 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^9 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^9 + V^7 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^9 + V^7 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^9 + V^7 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^9 + V^7 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^9 + V^7 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^9 + V^7 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^9 + V^7 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^9 + V^7 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^9 + V^7 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^9 + V^7 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^9 + V^8 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^9 + V^8 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^9 + V^8 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^9 + V^8 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^9 + V^8 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^9 + V^8 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^9 + V^8 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^9 + V^8 + V^7 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^9 + V^8 + V^7 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^9 + V^8 + V^7 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^9 + V^8 + V^7 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^9 + V^8 + V^7 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^9 + V^8 + V^7 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^7 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^7 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^7 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^7 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^7 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^7 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^7 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^7 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^8 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^8 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^8 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^8 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^8 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^8 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^8 + V^7 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^8 + V^7 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^8 + V^7 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^8 + V^7 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^8 + V^7 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^8 + V^7 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^8 + V^7 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^8 + V^7 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^9 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^9 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^9 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^9 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^9 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^9 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^9 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^9 + V^7 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^9 + V^7 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^9 + V^7 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^9 + V^7 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^9 + V^7 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^9 + V^7 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^9 + V^7 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^9 + V^7 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^9 + V^7 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^9 + V^8 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^9 + V^8 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^9 + V^8 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^9 + V^8 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^9 + V^8 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^9 + V^8 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^9 + V^8 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^9 + V^8 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^9 + V^8 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^9 + V^8 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^9 + V^8 + V^7 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^7 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^7 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^7 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^7 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^7 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^7 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^7 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^7 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^8 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^8 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^8 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^8 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^8 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^8 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^8 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^8 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^8 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^8 + V^7 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^8 + V^7 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^8 + V^7 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^8 + V^7 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^8 + V^7 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^8 + V^7 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^9 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^9 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^9 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^9 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^9 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^9 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^9 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^9 + V^7 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^9 + V^7 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^9 + V^7 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^9 + V^7 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^9 + V^7 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^9 + V^7 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^9 + V^7 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^9 + V^7 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^9 + V^8 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^9 + V^8 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^9 + V^8 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^9 + V^8 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^9 + V^8 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^9 + V^8 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^9 + V^8 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^9 + V^8 + V^7 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^9 + V^8 + V^7 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^9 + V^8 + V^7 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^9 + V^8 + V^7 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^9 + V^8 + V^7 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^9 + V^8 + V^7 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^9 + V^8 + V^7 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^9 + V^8 + V^7 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^9 + V^8 + V^7 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^9 + V^8 + V^7 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^7 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^7 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^7 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^7 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^7 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^7 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^7 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^7 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^7 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^7 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^8 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^8 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^8 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^8 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^8 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^8 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^8 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^8 + V^7 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^8 + V^7 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^8 + V^7 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^8 + V^7 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^8 + V^7 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^8 + V^7 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^8 + V^7 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^8 + V^7 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^8 + V^7 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^8 + V^7 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^8 + V^7 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^8 + V^7 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^8 + V^7 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^9 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^9 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^9 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^9 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^9 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^9 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^9 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^9 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^9 + V^7 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^9 + V^7 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^9 + V^7 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^9 + V^7 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^9 + V^7 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^9 + V^7 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^9 + V^8 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^9 + V^8 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^9 + V^8 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^9 + V^8 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^9 + V^8 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^9 + V^8 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^9 + V^8 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^9 + V^8 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^9 + V^8 + V^7 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^9 + V^8 + V^7 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^9 + V^8 + V^7 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^9 + V^8 + V^7 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^9 + V^8 + V^7 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^9 + V^8 + V^7 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^7 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^7 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^7 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^7 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^7 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^7 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^8 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^8 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^8 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^8 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^8 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^8 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^8 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^8 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^8 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^8 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^8 + V^7 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^8 + V^7 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^8 + V^7 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^9 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^9 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^9 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^9 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^9 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^9 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^9 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^9 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^9 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^9 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^9 + V^7 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^9 + V^7 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^9 + V^7 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^9 + V^7 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^9 + V^7 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^9 + V^7 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^9 + V^7 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^9 + V^7 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^9 + V^7 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^9 + V^8 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^9 + V^8 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^9 + V^8 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^9 + V^8 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^9 + V^8 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^9 + V^8 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^9 + V^8 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^9 + V^8 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^9 + V^8 + V^7 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^9 + V^8 + V^7 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^9 + V^8 + V^7 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^9 + V^8 + V^7 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^9 + V^8 + V^7 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^9 + V^8 + V^7 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^9 + V^8 + V^7 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^7 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^7 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^7 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^7 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^7 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^7 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^7 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^7 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^7 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^8 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^8 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^8 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^8 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^8 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^8 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^8 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^8 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^8 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^8 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^8 + V^7 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^8 + V^7 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^8 + V^7 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^8 + V^7 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^8 + V^7 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^8 + V^7 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^8 + V^7 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^9 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^9 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^9 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^9 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^9 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^9 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^9 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^9 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^9 + V^7 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^9 + V^7 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^9 + V^7 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^9 + V^7 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^9 + V^7 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^9 + V^8 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^9 + V^8 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^9 + V^8 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^9 + V^8 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^9 + V^8 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^9 + V^8 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^9 + V^8 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^9 + V^8 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^7 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^7 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^7 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^7 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^7 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^7 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^7 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^7 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^7 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^8 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^8 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^8 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^8 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^8 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^8 + V^7 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^8 + V^7 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^8 + V^7 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^8 + V^7 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^8 + V^7 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^8 + V^7 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^8 + V^7 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^9 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^9 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^9 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^9 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^9 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^9 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^9 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^9 + V^7 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^9 + V^7 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^9 + V^7 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^9 + V^7 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^9 + V^8 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^9 + V^8 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^9 + V^8 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^9 + V^8 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^9 + V^8 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^9 + V^8 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^9 + V^8 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^9 + V^8 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^9 + V^8 + V^7 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^9 + V^8 + V^7 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^9 + V^8 + V^7 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^9 + V^8 + V^7 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^9 + V^8 + V^7 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^9 + V^8 + V^7 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^9 + V^8 + V^7 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^9 + V^8 + V^7 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^7 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^7 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^7 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^7 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^7 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^7 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^7 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^8 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^8 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^8 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^8 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^8 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^8 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^8 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^8 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^8 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^8 + V^7 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^8 + V^7 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^8 + V^7 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^8 + V^7 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^8 + V^7 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^8 + V^7 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^8 + V^7 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^9 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^9 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^9 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^9 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^9 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^9 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^9 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^9 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^9 + V^7 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^9 + V^7 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^9 + V^7 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^9 + V^7 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^9 + V^7 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^9 + V^7 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^9 + V^7 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^9 + V^7 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^9 + V^7 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^9 + V^8 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^9 + V^8 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^9 + V^8 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^9 + V^8 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^9 + V^8 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^9 + V^8 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^9 + V^8 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^9 + V^8 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^9 + V^8 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^9 + V^8 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^9 + V^8 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^9 + V^8 + V^7 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^9 + V^8 + V^7 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^9 + V^8 + V^7 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^9 + V^8 + V^7 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^9 + V^8 + V^7 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^9 + V^8 + V^7 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^9 + V^8 + V^7 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^7 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^7 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^7 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^7 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^7 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^7 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^7 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^8 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^8 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^8 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^8 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^8 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^8 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^8 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^8 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^8 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^8 + V^7 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^8 + V^7 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^8 + V^7 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^8 + V^7 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^8 + V^7 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^8 + V^7 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^9 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^9 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^9 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^9 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^9 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^9 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^9 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^9 + V^7 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^9 + V^7 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^9 + V^7 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^9 + V^7 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^9 + V^7 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^9 + V^7 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^9 + V^7 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^9 + V^7 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^9 + V^7 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^9 + V^7 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^9 + V^7 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^9 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^9 + V^8 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^9 + V^8 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^9 + V^8 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^9 + V^8 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^9 + V^8 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^9 + V^8 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^9 + V^8 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^9 + V^8 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^9 + V^8 + V^7 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^9 + V^8 + V^7 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^9 + V^8 + V^7 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^9 + V^8 + V^7 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^9 + V^8 + V^7 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^9 + V^8 + V^7 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^9 + V^8 + V^7 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^7 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^7 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^7 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^7 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^7 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^7 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^7 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^7 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^7 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^8 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^8 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^8 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^8 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^8 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^8 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^8 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^8 + V^7 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^8 + V^7 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^8 + V^7 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^8 + V^7 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^8 + V^7 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^8 + V^7 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^8 + V^7 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^8 + V^7 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^9 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^9 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^9 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^9 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^9 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^9 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^9 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^9 + V^7 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^9 + V^7 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^9 + V^7 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^9 + V^7 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^9 + V^7 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^9 + V^7 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^9 + V^7 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^9 + V^8 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^9 + V^8 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^9 + V^8 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^9 + V^8 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^9 + V^8 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^9 + V^8 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^9 + V^8 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^9 + V^8 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^9 + V^8 + V^7 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^9 + V^8 + V^7 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^9 + V^8 + V^7 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^9 + V^8 + V^7 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^9 + V^8 + V^7 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^9 + V^8 + V^7 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^9 + V^8 + V^7 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^7 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^7 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^7 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^7 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^7 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^7 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^8 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^8 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^8 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^8 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^8 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^8 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^8 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^8 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^8 + V^7 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^8 + V^7 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^8 + V^7 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^8 + V^7 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^8 + V^7 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^8 + V^7 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^8 + V^7 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^8 + V^7 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^9 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^9 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^9 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^9 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^9 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^9 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^9 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^9 + V^7 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^9 + V^7 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^9 + V^7 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^9 + V^7 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^9 + V^7 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^9 + V^7 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^9 + V^7 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^9 + V^7 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^9 + V^8 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^9 + V^8 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^9 + V^8 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^9 + V^8 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^9 + V^8 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^9 + V^8 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^9 + V^8 + V^7 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^9 + V^8 + V^7 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^9 + V^8 + V^7 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^9 + V^8 + V^7 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^9 + V^8 + V^7 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^9 + V^8 + V^7 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^9 + V^8 + V^7 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^9 + V^8 + V^7 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^7 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^7 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^7 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^7 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^7 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^7 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^7 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^7 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^7 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^8 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^8 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^8 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^8 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^8 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^8 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^8 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^8 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^8 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^8 + V^7 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^8 + V^7 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^8 + V^7 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^9 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^9 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^9 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^9 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^9 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^9 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^9 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^9 + V^7 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^9 + V^7 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^9 + V^7 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^9 + V^7 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^9 + V^7 + V^6 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^9 + V^7 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^9 + V^7 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^9 + V^8 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^9 + V^8 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^9 + V^8 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^9 + V^8 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^9 + V^8 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^9 + V^8 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^9 + V^8 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^9 + V^8 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^9 + V^8 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^9 + V^8 + V^7 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^9 + V^8 + V^7 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^9 + V^8 + V^7 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^9 + V^8 + V^7 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^9 + V^8 + V^7 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^9 + V^8 + V^7 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^7 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^7 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^7 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^7 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^7 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^7 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^8 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^8 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^8 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^8 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^8 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^8 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^8 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^8 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^8 + V^7 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^8 + V^7 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^8 + V^7 + V^6 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^8 + V^7 + V^6 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^8 + V^7 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^8 + V^7 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^9 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^9 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^9 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^9 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^9 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^9 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^9 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^9 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^9 + V^7 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^9 + V^7 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^9 + V^7 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^9 + V^7 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^9 + V^7 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^9 + V^7 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^9 + V^7 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^9 + V^7 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^9 + V^8 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^9 + V^8 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^9 + V^8 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^9 + V^8 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^9 + V^8 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^9 + V^8 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^9 + V^8 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^9 + V^8 + V^6 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^9 + V^8 + V^7 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^9 + V^8 + V^7 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^9 + V^8 + V^7 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^9 + V^8 + V^7 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^9 + V^8 + V^7 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^9 + V^8 + V^7 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^9 + V^8 + V^7 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^9 + V^8 + V^7 + V^6 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^9 + V^8 + V^7 + V^6 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^9 + V^8 + V^7 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^9 + V^8 + V^7 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^9 + V^8 + V^7 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^6 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^6 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^6 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^6 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^6 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^7 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^7 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^7 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^7 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^7 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^7 + V^6 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^7 + V^6 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^7 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^7 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^8 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^8 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^8 + V^5 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^8 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^8 + V^5 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^8 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^8 + V^6 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^8 + V^6 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^8 + V^6 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^8 + V^6 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^8 + V^6 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^8 + V^7 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^8 + V^7 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^8 + V^7 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^8 + V^7 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^8 + V^7 + V^5 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^8 + V^7 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^8 + V^7 + V^6 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^8 + V^7 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^8 + V^7 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^5 + V^4 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^6 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^6 + V^5 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^6 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^7 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^7 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^7 + V^5 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + V^5 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^7 + V^6 + V^5 + V^4 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^5 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^5 + V^4 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^5 + V^4 + V^3 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^6 + V^4 + V^3 + V^2 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^6 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^4 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^5 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^5 + V^4 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^3 + V + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;
// T := V^16 + V^15 + V^14 + V^13 + V^12 + V^11 + V^10 + V^9 + V^8 + V^7 + V^6 + V^5 + V^3 + V^2 + 1;
// if IsIrreducible(T) then
// 	F6K<z>:=ext<F|T>;
// 	fullElem := z^15 + z^14 + z^13 + z^12 + z^11 + z^10 + z^9 + z^8 + z^7 + z^6 + z^5 + z^4 + z^3 + z^2 + z + 1;
// 	constant := Random(F6K);
// 	affine := affine_16(F6K, fullElem, constant);
// 	p := allGen_16(0, F6K, T, affine, constant, cinv);
// end if;

////////////////////////////////////////////////////////////
///////////////      END 16-BIT SEARCH       ///////////////
////////////////////////////////////////////////////////////
